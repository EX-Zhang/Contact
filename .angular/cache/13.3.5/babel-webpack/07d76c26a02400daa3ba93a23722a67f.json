{"ast":null,"code":"import * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, Injectable, Directive, HostListener, ViewContainerRef, ViewChild, ChangeDetectionStrategy, ViewChildren, NgModule } from '@angular/core';\nimport * as i1 from '@angular/forms';\nimport { NgControl, FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { __awaiter } from 'tslib';\nimport { Subject, of, combineLatest } from 'rxjs';\nimport { takeUntil, filter, skip, distinctUntilChanged, debounceTime, map, delay } from 'rxjs/operators';\nimport { cloneDeep } from 'lodash-es';\nimport * as i1$1 from 'ng2-completer';\nimport { Ng2CompleterModule } from 'ng2-completer';\nimport * as i1$2 from '@angular/common/http';\nimport { HttpParams } from '@angular/common/http';\nimport * as i2$1 from 'angular2-multiselect-dropdown';\nimport { AngularMultiSelectModule } from 'angular2-multiselect-dropdown';\n\nfunction TagsListComponent_angular2_smart_table_tag_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"angular2-smart-table-tag\", 2);\n    i0.ɵɵlistener(\"close\", function TagsListComponent_angular2_smart_table_tag_1_Template_angular2_smart_table_tag_close_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.closedTag($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tag_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"item\", tag_r1);\n  }\n}\n\nconst _c0 = \"*[_ngcontent-%COMP%]{box-sizing:border-box}*[_ngcontent-%COMP%]{padding:0;margin:0}ul[_ngcontent-%COMP%]{list-style-type:none}.add-tag-list[_ngcontent-%COMP%]{font-family:font8272;font-size:1.5em}.add-tag-list[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{padding-left:20px;padding-right:20px;padding-bottom:8px;display:flex;flex-direction:row-reverse;float:left}.add-tag-list[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:last-child{padding-right:0}.closeButton[_ngcontent-%COMP%]{display:inline}.closeButton[_ngcontent-%COMP%]:after{content:\\\"\\\\f057\\\";padding-left:4px;font-family:FontAwesome;color:#df0024;cursor:pointer}.closeButton[_ngcontent-%COMP%]:hover:after{color:#900110;transition:.6s linear}\";\nconst _c1 = [\"angular2-st-checkbox-select-all\", \"\"];\nconst _c2 = [\"angular2-st-actions-title\", \"\"];\n\nfunction TitleComponent_a_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 3);\n    i0.ɵɵlistener(\"click\", function TitleComponent_a_0_Template_a_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3._sort($event);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.currentDirection);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.column.title, \" \");\n  }\n}\n\nfunction TitleComponent_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.column.title);\n  }\n}\n\nfunction TitleComponent_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function TitleComponent_button_2_Template_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5._hideColumnClicked($event);\n    });\n    i0.ɵɵtext(1, \"X\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c3 = [\"angular2-st-thead-titles-row\", \"\"];\n\nfunction TheadTitlesRowComponent_th_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"th\", 3);\n    i0.ɵɵlistener(\"click\", function TheadTitlesRowComponent_th_0_Template_th_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.selectAllRows.emit($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"grid\", ctx_r0.grid)(\"source\", ctx_r0.source)(\"isAllSelected\", ctx_r0.isAllSelected);\n  }\n}\n\nfunction TheadTitlesRowComponent_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"th\", 4);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"grid\", ctx_r1.grid);\n  }\n}\n\nfunction TheadTitlesRowComponent_th_2_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 8);\n  }\n}\n\nfunction TheadTitlesRowComponent_th_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"th\", 5)(1, \"angular2-st-column-title\", 6);\n    i0.ɵɵlistener(\"sort\", function TheadTitlesRowComponent_th_2_Template_angular2_st_column_title_sort_1_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.sort.emit($event);\n    })(\"hide\", function TheadTitlesRowComponent_th_2_Template_angular2_st_column_title_hide_1_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.hide.emit($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, TheadTitlesRowComponent_th_2_div_2_Template, 1, 0, \"div\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const column_r6 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_2_0;\n    i0.ɵɵclassMapInterpolate1(\"angular2-smart-th \", column_r6.id, \"\");\n    i0.ɵɵstyleProp(\"width\", column_r6.width);\n    i0.ɵɵproperty(\"ngClass\", (tmp_2_0 = column_r6.class) !== null && tmp_2_0 !== undefined ? tmp_2_0 : \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"source\", ctx_r2.source)(\"column\", column_r6)(\"isHideable\", ctx_r2.isHideable);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isResizable);\n  }\n}\n\nfunction TheadTitlesRowComponent_th_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"th\", 4);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"grid\", ctx_r3.grid);\n  }\n}\n\nconst _c4 = [\"angular2-st-add-button\", \"\"];\n\nfunction AddButtonComponent_a_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 1);\n    i0.ɵɵlistener(\"click\", function AddButtonComponent_a_0_Template_a_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return ctx_r1.onAdd($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r0.addNewButtonContent, i0.ɵɵsanitizeHtml);\n  }\n}\n\nconst _c5 = [\"dynamicTarget\"];\n\nfunction CustomFilterComponent_ng_template_0_Template(rf, ctx) {}\n\nconst _c6 = [\"inputControl\"];\n\nfunction SelectFilterComponent_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r2.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r2.title, \" \");\n  }\n}\n\nfunction CheckboxFilterComponent_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 2);\n    i0.ɵɵlistener(\"click\", function CheckboxFilterComponent_a_1_Template_a_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return ctx_r1.resetFilter($event);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(((tmp_0_0 = ctx_r0.column.getFilterConfig()) == null ? null : tmp_0_0.resetText) || \"reset\");\n  }\n}\n\nfunction DateFilterComponent_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(option_r6);\n  }\n}\n\nfunction DateFilterComponent_input_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formControl\", ctx_r1.dateBefore)(\"ngClass\", ctx_r1.inputClass);\n  }\n}\n\nfunction DateFilterComponent_input_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formControl\", ctx_r2.dateAfter)(\"ngClass\", ctx_r2.inputClass);\n  }\n}\n\nfunction DateFilterComponent_input_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formControl\", ctx_r3.dateEqual)(\"ngClass\", ctx_r3.inputClass);\n  }\n}\n\nfunction DateFilterComponent_input_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formControl\", ctx_r4.startDate)(\"ngClass\", ctx_r4.inputClass);\n  }\n}\n\nfunction DateFilterComponent_input_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formControl\", ctx_r5.endDate)(\"ngClass\", ctx_r5.inputClass);\n  }\n}\n\nfunction DefaultFilterComponent_select_filter_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"select-filter\", 3);\n    i0.ɵɵlistener(\"filter\", function DefaultFilterComponent_select_filter_1_Template_select_filter_filter_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.onFilter($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"query\", ctx_r0.query)(\"ngClass\", ctx_r0.inputClass)(\"column\", ctx_r0.column);\n  }\n}\n\nfunction DefaultFilterComponent_checkbox_filter_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"checkbox-filter\", 3);\n    i0.ɵɵlistener(\"filter\", function DefaultFilterComponent_checkbox_filter_2_Template_checkbox_filter_filter_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.onFilter($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"query\", ctx_r1.query)(\"ngClass\", ctx_r1.inputClass)(\"column\", ctx_r1.column);\n  }\n}\n\nfunction DefaultFilterComponent_completer_filter_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"completer-filter\", 3);\n    i0.ɵɵlistener(\"filter\", function DefaultFilterComponent_completer_filter_3_Template_completer_filter_filter_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.onFilter($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"query\", ctx_r2.query)(\"ngClass\", ctx_r2.inputClass)(\"column\", ctx_r2.column);\n  }\n}\n\nfunction DefaultFilterComponent_date_filter_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"date-filter\", 3);\n    i0.ɵɵlistener(\"filter\", function DefaultFilterComponent_date_filter_4_Template_date_filter_filter_0_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.onFilter($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"query\", ctx_r3.query)(\"ngClass\", ctx_r3.inputClass)(\"column\", ctx_r3.column);\n  }\n}\n\nfunction DefaultFilterComponent_mselect_filter_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mselect-filter\", 3);\n    i0.ɵɵlistener(\"filter\", function DefaultFilterComponent_mselect_filter_5_Template_mselect_filter_filter_0_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.onFilter($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"query\", ctx_r4.query)(\"ngClass\", ctx_r4.inputClass)(\"column\", ctx_r4.column);\n  }\n}\n\nfunction DefaultFilterComponent_input_filter_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input-filter\", 3);\n    i0.ɵɵlistener(\"filter\", function DefaultFilterComponent_input_filter_6_Template_input_filter_filter_0_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.onFilter($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"query\", ctx_r5.query)(\"ngClass\", ctx_r5.inputClass)(\"column\", ctx_r5.column);\n  }\n}\n\nfunction FilterComponent_div_0_custom_table_filter_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"custom-table-filter\", 4);\n    i0.ɵɵlistener(\"filter\", function FilterComponent_div_0_custom_table_filter_1_Template_custom_table_filter_filter_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext(2);\n      return ctx_r3.onFilter($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"query\", ctx_r1.query)(\"column\", ctx_r1.column)(\"source\", ctx_r1.source)(\"inputClass\", ctx_r1.inputClass);\n  }\n}\n\nfunction FilterComponent_div_0_default_table_filter_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"default-table-filter\", 4);\n    i0.ɵɵlistener(\"filter\", function FilterComponent_div_0_default_table_filter_2_Template_default_table_filter_filter_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return ctx_r5.onFilter($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"query\", ctx_r2.query)(\"column\", ctx_r2.column)(\"source\", ctx_r2.source)(\"inputClass\", ctx_r2.inputClass);\n  }\n}\n\nfunction FilterComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtemplate(1, FilterComponent_div_0_custom_table_filter_1_Template, 1, 4, \"custom-table-filter\", 2);\n    i0.ɵɵtemplate(2, FilterComponent_div_0_default_table_filter_2_Template, 1, 4, \"default-table-filter\", 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngSwitch\", ctx_r0.column.getFilterType());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"custom\");\n  }\n}\n\nconst _c7 = [\"angular2-st-thead-filters-row\", \"\"];\n\nfunction TheadFitlersRowComponent_th_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"th\");\n  }\n}\n\nfunction TheadFitlersRowComponent_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"th\", 4);\n    i0.ɵɵlistener(\"create\", function TheadFitlersRowComponent_th_1_Template_th_create_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.create.emit($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"grid\", ctx_r1.grid);\n  }\n}\n\nfunction TheadFitlersRowComponent_th_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"th\")(1, \"angular2-smart-table-filter\", 5);\n    i0.ɵɵlistener(\"filter\", function TheadFitlersRowComponent_th_2_Template_angular2_smart_table_filter_filter_1_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.filter.emit($event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const column_r6 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassMapInterpolate1(\"angular2-smart-th \", column_r6.id, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"source\", ctx_r2.source)(\"column\", column_r6)(\"inputClass\", ctx_r2.filterInputClass);\n  }\n}\n\nfunction TheadFitlersRowComponent_th_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"th\", 6);\n    i0.ɵɵlistener(\"create\", function TheadFitlersRowComponent_th_3_Template_th_create_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.create.emit($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"grid\", ctx_r3.grid)(\"source\", ctx_r3.source);\n  }\n}\n\nfunction CustomViewComponent_ng_template_0_Template(rf, ctx) {}\n\nfunction ViewCellComponent_custom_view_component_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"custom-view-component\", 4);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cell\", ctx_r0.cell);\n  }\n}\n\nfunction ViewCellComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r1.cell.getValue(), i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction ViewCellComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.cell.getValue());\n  }\n}\n\nfunction CustomEditComponent_ng_template_0_Template(rf, ctx) {}\n\nfunction SelectEditorComponent_option_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 2);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", option_r1.value)(\"selected\", option_r1.value === ctx_r0.cell.getValue());\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", option_r1.title, \" \");\n  }\n}\n\nconst _c8 = \"[_nghost-%COMP%]   input[_ngcontent-%COMP%], [_nghost-%COMP%]   textarea[_ngcontent-%COMP%]{width:100%;line-height:normal;padding:.375em .75em}\";\n\nfunction DefaultEditComponent_select_editor_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"select-editor\", 5);\n    i0.ɵɵlistener(\"onClick\", function DefaultEditComponent_select_editor_1_Template_select_editor_onClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.onClick($event);\n    })(\"onEdited\", function DefaultEditComponent_select_editor_1_Template_select_editor_onEdited_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.onEdited($event);\n    })(\"onStopEditing\", function DefaultEditComponent_select_editor_1_Template_select_editor_onStopEditing_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.onStopEditing();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cell\", ctx_r0.cell)(\"inputClass\", ctx_r0.inputClass);\n  }\n}\n\nfunction DefaultEditComponent_textarea_editor_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"textarea-editor\", 5);\n    i0.ɵɵlistener(\"onClick\", function DefaultEditComponent_textarea_editor_2_Template_textarea_editor_onClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.onClick($event);\n    })(\"onEdited\", function DefaultEditComponent_textarea_editor_2_Template_textarea_editor_onEdited_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.onEdited($event);\n    })(\"onStopEditing\", function DefaultEditComponent_textarea_editor_2_Template_textarea_editor_onStopEditing_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.onStopEditing();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cell\", ctx_r1.cell)(\"inputClass\", ctx_r1.inputClass);\n  }\n}\n\nfunction DefaultEditComponent_checkbox_editor_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"checkbox-editor\", 6);\n    i0.ɵɵlistener(\"onClick\", function DefaultEditComponent_checkbox_editor_3_Template_checkbox_editor_onClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.onClick($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cell\", ctx_r2.cell)(\"inputClass\", ctx_r2.inputClass);\n  }\n}\n\nfunction DefaultEditComponent_completer_editor_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"completer-editor\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cell\", ctx_r3.cell);\n  }\n}\n\nfunction DefaultEditComponent_input_editor_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input-editor\", 5);\n    i0.ɵɵlistener(\"onClick\", function DefaultEditComponent_input_editor_5_Template_input_editor_onClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.onClick($event);\n    })(\"onEdited\", function DefaultEditComponent_input_editor_5_Template_input_editor_onEdited_0_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.onEdited($event);\n    })(\"onStopEditing\", function DefaultEditComponent_input_editor_5_Template_input_editor_onStopEditing_0_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return ctx_r18.onStopEditing();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cell\", ctx_r4.cell)(\"inputClass\", ctx_r4.inputClass);\n  }\n}\n\nfunction EditCellComponent_table_cell_custom_editor_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"table-cell-custom-editor\", 3);\n    i0.ɵɵlistener(\"edited\", function EditCellComponent_table_cell_custom_editor_1_Template_table_cell_custom_editor_edited_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.onEdited($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cell\", ctx_r0.cell)(\"inputClass\", ctx_r0.inputClass);\n  }\n}\n\nfunction EditCellComponent_table_cell_default_editor_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"table-cell-default-editor\", 3);\n    i0.ɵɵlistener(\"edited\", function EditCellComponent_table_cell_default_editor_2_Template_table_cell_default_editor_edited_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onEdited($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cell\", ctx_r1.cell)(\"inputClass\", ctx_r1.inputClass);\n  }\n}\n\nfunction CellComponent_table_cell_view_mode_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"table-cell-view-mode\", 2);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cell\", ctx_r0.cell);\n  }\n}\n\nfunction CellComponent_table_cell_edit_mode_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"table-cell-edit-mode\", 3);\n    i0.ɵɵlistener(\"edited\", function CellComponent_table_cell_edit_mode_1_Template_table_cell_edit_mode_edited_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.onEdited($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cell\", ctx_r1.cell)(\"inputClass\", ctx_r1.inputClass);\n  }\n}\n\nconst _c9 = [\"angular2-st-thead-form-row\", \"\"];\n\nfunction TheadFormRowComponent_td_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"td\");\n  }\n}\n\nfunction TheadFormRowComponent_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 3)(1, \"angular2-st-actions\", 4);\n    i0.ɵɵlistener(\"create\", function TheadFormRowComponent_td_1_Template_angular2_st_actions_create_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onCreate($event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"grid\", ctx_r1.grid);\n  }\n}\n\nfunction TheadFormRowComponent_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\")(1, \"angular2-smart-table-cell\", 5);\n    i0.ɵɵlistener(\"edited\", function TheadFormRowComponent_td_2_Template_angular2_smart_table_cell_edited_1_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.onCreate($event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const cell_r6 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"cell\", cell_r6)(\"grid\", ctx_r2.grid)(\"isNew\", true)(\"createConfirm\", ctx_r2.createConfirm)(\"inputClass\", ctx_r2.addInputClass)(\"isInEditing\", ctx_r2.grid.getNewRow().isInEditing);\n  }\n}\n\nfunction TheadFormRowComponent_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 3)(1, \"angular2-st-actions\", 4);\n    i0.ɵɵlistener(\"create\", function TheadFormRowComponent_td_3_Template_angular2_st_actions_create_1_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.onCreate($event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"grid\", ctx_r3.grid);\n  }\n}\n\nconst _c10 = [\"angular2-st-thead\", \"\"];\n\nfunction NgxSmartTableTheadComponent_tr_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\", 3);\n    i0.ɵɵlistener(\"sort\", function NgxSmartTableTheadComponent_tr_0_Template_tr_sort_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.sort.emit($event);\n    })(\"hide\", function NgxSmartTableTheadComponent_tr_0_Template_tr_hide_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.hide.emit($event);\n    })(\"selectAllRows\", function NgxSmartTableTheadComponent_tr_0_Template_tr_selectAllRows_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.selectAllRows.emit($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"grid\", ctx_r0.grid)(\"isAllSelected\", ctx_r0.isAllSelected)(\"source\", ctx_r0.source);\n  }\n}\n\nfunction NgxSmartTableTheadComponent_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\", 4);\n    i0.ɵɵlistener(\"create\", function NgxSmartTableTheadComponent_tr_1_Template_tr_create_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.create.emit($event);\n    })(\"filter\", function NgxSmartTableTheadComponent_tr_1_Template_tr_filter_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.filter.emit($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"grid\", ctx_r1.grid)(\"source\", ctx_r1.source);\n  }\n}\n\nfunction NgxSmartTableTheadComponent_tr_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"grid\", ctx_r2.grid)(\"createConfirm\", ctx_r2.createConfirm);\n  }\n}\n\nfunction TbodyCustomItemComponent_ng_template_0_Template(rf, ctx) {}\n\nfunction TbodyCustomComponent_ng_container_0_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 3);\n    i0.ɵɵlistener(\"click\", function TbodyCustomComponent_ng_container_0_a_1_Template_a_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const action_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onCustom(action_r1, $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const action_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"innerHTML\", action_r1.title, i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction TbodyCustomComponent_ng_container_0_a_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 4);\n    i0.ɵɵlistener(\"click\", function TbodyCustomComponent_ng_container_0_a_2_Template_a_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const action_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.onCustom(action_r1, $event);\n    });\n    i0.ɵɵelement(1, \"angular2-st-tbody-custom-item\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const action_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"action\", action_r1)(\"row\", ctx_r3.row);\n  }\n}\n\nfunction TbodyCustomComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TbodyCustomComponent_ng_container_0_a_1_Template, 1, 1, \"a\", 1);\n    i0.ɵɵtemplate(2, TbodyCustomComponent_ng_container_0_a_2_Template, 2, 2, \"a\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const action_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !action_r1.renderComponent);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", action_r1.renderComponent);\n  }\n}\n\nfunction TbodyEditDeleteComponent_a_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 2);\n    i0.ɵɵlistener(\"click\", function TbodyEditDeleteComponent_a_0_Template_a_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.onEdit($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r0.editRowButtonContent, i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction TbodyEditDeleteComponent_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 3);\n    i0.ɵɵlistener(\"click\", function TbodyEditDeleteComponent_a_1_Template_a_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onDelete($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r1.deleteRowButtonContent, i0.ɵɵsanitizeHtml);\n  }\n}\n\nconst _c11 = [\"expandedRowChild\"];\nconst _c12 = [\"angular2-st-tbody\", \"\"];\n\nfunction NgxSmartTableTbodyComponent_ng_container_0_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 6);\n    i0.ɵɵlistener(\"click\", function NgxSmartTableTbodyComponent_ng_container_0_td_2_Template_td_click_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const row_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.multipleSelectRow.emit(row_r2);\n    });\n    i0.ɵɵelement(1, \"input\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", row_r2.isSelected);\n  }\n}\n\nfunction NgxSmartTableTbodyComponent_ng_container_0_td_3_angular2_st_tbody_expand_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"angular2-st-tbody-expand\", 12);\n    i0.ɵɵlistener(\"onExpandRow\", function NgxSmartTableTbodyComponent_ng_container_0_td_3_angular2_st_tbody_expand_2_Template_angular2_st_tbody_expand_onExpandRow_0_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const row_r2 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.onExpandRow.emit(row_r2);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r2 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r14 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"grid\", ctx_r14.grid)(\"row\", row_r2);\n  }\n}\n\nfunction NgxSmartTableTbodyComponent_ng_container_0_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 8)(1, \"angular2-st-tbody-custom\", 9);\n    i0.ɵɵlistener(\"custom\", function NgxSmartTableTbodyComponent_ng_container_0_td_3_Template_angular2_st_tbody_custom_custom_1_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return ctx_r19.custom.emit($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, NgxSmartTableTbodyComponent_ng_container_0_td_3_angular2_st_tbody_expand_2_Template, 1, 2, \"angular2-st-tbody-expand\", 10);\n    i0.ɵɵelementStart(3, \"angular2-st-tbody-edit-delete\", 11);\n    i0.ɵɵlistener(\"edit\", function NgxSmartTableTbodyComponent_ng_container_0_td_3_Template_angular2_st_tbody_edit_delete_edit_3_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const row_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r21 = i0.ɵɵnextContext();\n      return ctx_r21.edit.emit(row_r2);\n    })(\"delete\", function NgxSmartTableTbodyComponent_ng_container_0_td_3_Template_angular2_st_tbody_edit_delete_delete_3_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const row_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r23 = i0.ɵɵnextContext();\n      return ctx_r23.delete.emit(row_r2);\n    })(\"editRowSelect\", function NgxSmartTableTbodyComponent_ng_container_0_td_3_Template_angular2_st_tbody_edit_delete_editRowSelect_3_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r25 = i0.ɵɵnextContext(2);\n      return ctx_r25.editRowSelect.emit($event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const row_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"grid\", ctx_r4.grid)(\"row\", row_r2)(\"source\", ctx_r4.source);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.hasChildComponent);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"grid\", ctx_r4.grid)(\"deleteConfirm\", ctx_r4.deleteConfirm)(\"editConfirm\", ctx_r4.editConfirm)(\"row\", row_r2)(\"source\", ctx_r4.source);\n  }\n}\n\nfunction NgxSmartTableTbodyComponent_ng_container_0_td_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 8);\n    i0.ɵɵelement(1, \"angular2-st-tbody-create-cancel\", 13);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"grid\", ctx_r5.grid)(\"row\", row_r2)(\"editConfirm\", ctx_r5.editConfirm);\n  }\n}\n\nfunction NgxSmartTableTbodyComponent_ng_container_0_td_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵelement(1, \"angular2-smart-table-cell\", 14);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const cell_r28 = ctx.$implicit;\n    const row_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"cell\", cell_r28)(\"grid\", ctx_r6.grid)(\"row\", row_r2)(\"isNew\", false)(\"mode\", ctx_r6.mode)(\"editConfirm\", ctx_r6.editConfirm)(\"inputClass\", ctx_r6.editInputClass)(\"isInEditing\", row_r2.isInEditing);\n  }\n}\n\nfunction NgxSmartTableTbodyComponent_ng_container_0_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 8);\n    i0.ɵɵelement(1, \"angular2-st-tbody-create-cancel\", 13);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"grid\", ctx_r7.grid)(\"row\", row_r2)(\"editConfirm\", ctx_r7.editConfirm);\n  }\n}\n\nfunction NgxSmartTableTbodyComponent_ng_container_0_td_7_angular2_st_tbody_expand_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r34 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"angular2-st-tbody-expand\", 12);\n    i0.ɵɵlistener(\"onExpandRow\", function NgxSmartTableTbodyComponent_ng_container_0_td_7_angular2_st_tbody_expand_2_Template_angular2_st_tbody_expand_onExpandRow_0_listener() {\n      i0.ɵɵrestoreView(_r34);\n      const row_r2 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r32 = i0.ɵɵnextContext();\n      return ctx_r32.onExpandRow.emit(row_r2);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r2 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r31 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"grid\", ctx_r31.grid)(\"row\", row_r2);\n  }\n}\n\nfunction NgxSmartTableTbodyComponent_ng_container_0_td_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r37 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 8)(1, \"angular2-st-tbody-custom\", 9);\n    i0.ɵɵlistener(\"custom\", function NgxSmartTableTbodyComponent_ng_container_0_td_7_Template_angular2_st_tbody_custom_custom_1_listener($event) {\n      i0.ɵɵrestoreView(_r37);\n      const ctx_r36 = i0.ɵɵnextContext(2);\n      return ctx_r36.custom.emit($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, NgxSmartTableTbodyComponent_ng_container_0_td_7_angular2_st_tbody_expand_2_Template, 1, 2, \"angular2-st-tbody-expand\", 10);\n    i0.ɵɵelementStart(3, \"angular2-st-tbody-edit-delete\", 11);\n    i0.ɵɵlistener(\"edit\", function NgxSmartTableTbodyComponent_ng_container_0_td_7_Template_angular2_st_tbody_edit_delete_edit_3_listener() {\n      i0.ɵɵrestoreView(_r37);\n      const row_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r38 = i0.ɵɵnextContext();\n      return ctx_r38.edit.emit(row_r2);\n    })(\"delete\", function NgxSmartTableTbodyComponent_ng_container_0_td_7_Template_angular2_st_tbody_edit_delete_delete_3_listener() {\n      i0.ɵɵrestoreView(_r37);\n      const row_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r40 = i0.ɵɵnextContext();\n      return ctx_r40.delete.emit(row_r2);\n    })(\"editRowSelect\", function NgxSmartTableTbodyComponent_ng_container_0_td_7_Template_angular2_st_tbody_edit_delete_editRowSelect_3_listener($event) {\n      i0.ɵɵrestoreView(_r37);\n      const ctx_r42 = i0.ɵɵnextContext(2);\n      return ctx_r42.editRowSelect.emit($event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const row_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"grid\", ctx_r8.grid)(\"row\", row_r2)(\"source\", ctx_r8.source);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.hasChildComponent);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"grid\", ctx_r8.grid)(\"deleteConfirm\", ctx_r8.deleteConfirm)(\"editConfirm\", ctx_r8.editConfirm)(\"row\", row_r2)(\"source\", ctx_r8.source);\n  }\n}\n\nfunction NgxSmartTableTbodyComponent_ng_container_0_tr_8_ng_template_2_Template(rf, ctx) {}\n\nfunction NgxSmartTableTbodyComponent_ng_container_0_tr_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 15)(1, \"td\", 16);\n    i0.ɵɵtemplate(2, NgxSmartTableTbodyComponent_ng_container_0_tr_8_ng_template_2_Template, 0, 0, \"ng-template\", null, 17, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", ctx_r9.tableColumnsCount);\n  }\n}\n\nconst _c13 = function (a0) {\n  return {\n    selected: a0\n  };\n};\n\nfunction NgxSmartTableTbodyComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r47 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"tr\", 2);\n    i0.ɵɵlistener(\"click\", function NgxSmartTableTbodyComponent_ng_container_0_Template_tr_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r47);\n      const row_r2 = restoredCtx.$implicit;\n      const ctx_r46 = i0.ɵɵnextContext();\n      return ctx_r46.userSelectRow.emit(row_r2);\n    })(\"mouseover\", function NgxSmartTableTbodyComponent_ng_container_0_Template_tr_mouseover_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r47);\n      const row_r2 = restoredCtx.$implicit;\n      const ctx_r48 = i0.ɵɵnextContext();\n      return ctx_r48.rowHover.emit(row_r2);\n    });\n    i0.ɵɵtemplate(2, NgxSmartTableTbodyComponent_ng_container_0_td_2_Template, 2, 1, \"td\", 3);\n    i0.ɵɵtemplate(3, NgxSmartTableTbodyComponent_ng_container_0_td_3_Template, 4, 9, \"td\", 4);\n    i0.ɵɵtemplate(4, NgxSmartTableTbodyComponent_ng_container_0_td_4_Template, 2, 3, \"td\", 4);\n    i0.ɵɵtemplate(5, NgxSmartTableTbodyComponent_ng_container_0_td_5_Template, 2, 8, \"td\", 0);\n    i0.ɵɵtemplate(6, NgxSmartTableTbodyComponent_ng_container_0_td_6_Template, 2, 3, \"td\", 4);\n    i0.ɵɵtemplate(7, NgxSmartTableTbodyComponent_ng_container_0_td_7_Template, 4, 9, \"td\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, NgxSmartTableTbodyComponent_ng_container_0_tr_8_Template, 4, 1, \"tr\", 5);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const row_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"className\", ctx_r0.rowClassFunction(row_r2))(\"ngClass\", i0.ɵɵpureFunction1(9, _c13, row_r2.isSelected));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isMultiSelectVisible);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !row_r2.isInEditing && ctx_r0.showActionColumnLeft);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", row_r2.isInEditing && ctx_r0.showActionColumnLeft);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.getVisibleCells(row_r2.cells));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", row_r2.isInEditing && ctx_r0.showActionColumnRight);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !row_r2.isInEditing && ctx_r0.showActionColumnRight);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", row_r2.isExpanded);\n  }\n}\n\nfunction NgxSmartTableTbodyComponent_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", ctx_r1.tableColumnsCount);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.noDataMessage, \" \");\n  }\n}\n\nfunction PagerComponent_nav_0_li_14_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"span\", 7);\n    i0.ɵɵtext(3, \"(current)\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const page_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", page_r3, \" \");\n  }\n}\n\nfunction PagerComponent_nav_0_li_14_a_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 15);\n    i0.ɵɵlistener(\"click\", function PagerComponent_nav_0_li_14_a_2_Template_a_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const page_r3 = i0.ɵɵnextContext().$implicit;\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return ctx_r7.paginate(page_r3);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const page_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(page_r3);\n  }\n}\n\nconst _c14 = function (a0) {\n  return {\n    active: a0\n  };\n};\n\nfunction PagerComponent_nav_0_li_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 4);\n    i0.ɵɵtemplate(1, PagerComponent_nav_0_li_14_span_1_Template, 4, 1, \"span\", 12);\n    i0.ɵɵtemplate(2, PagerComponent_nav_0_li_14_a_2_Template, 2, 1, \"a\", 13);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const page_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c14, ctx_r2.getPage() == page_r3));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.getPage() == page_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.getPage() != page_r3);\n  }\n}\n\nconst _c15 = function (a0) {\n  return {\n    disabled: a0\n  };\n};\n\nfunction PagerComponent_nav_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"nav\", 2)(1, \"ul\", 3)(2, \"li\", 4)(3, \"a\", 5);\n    i0.ɵɵlistener(\"click\", function PagerComponent_nav_0_Template_a_click_3_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.getPage() == 1 ? false : ctx_r11.paginate(1);\n    });\n    i0.ɵɵelementStart(4, \"span\", 6);\n    i0.ɵɵtext(5, \"\\xAB\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\", 7);\n    i0.ɵɵtext(7, \"First\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(8, \"li\", 4)(9, \"a\", 8);\n    i0.ɵɵlistener(\"click\", function PagerComponent_nav_0_Template_a_click_9_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.getPage() == 1 ? false : ctx_r13.prev();\n    });\n    i0.ɵɵelementStart(10, \"span\", 6);\n    i0.ɵɵtext(11, \"<\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"span\", 7);\n    i0.ɵɵtext(13, \"Prev\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(14, PagerComponent_nav_0_li_14_Template, 3, 5, \"li\", 9);\n    i0.ɵɵelementStart(15, \"li\", 4)(16, \"a\", 10);\n    i0.ɵɵlistener(\"click\", function PagerComponent_nav_0_Template_a_click_16_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.getPage() == ctx_r14.getLast() ? false : ctx_r14.next();\n    });\n    i0.ɵɵelementStart(17, \"span\", 6);\n    i0.ɵɵtext(18, \">\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"span\", 7);\n    i0.ɵɵtext(20, \"Next\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(21, \"li\", 4)(22, \"a\", 11);\n    i0.ɵɵlistener(\"click\", function PagerComponent_nav_0_Template_a_click_22_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.getPage() == ctx_r15.getLast() ? false : ctx_r15.paginate(ctx_r15.getLast());\n    });\n    i0.ɵɵelementStart(23, \"span\", 6);\n    i0.ɵɵtext(24, \"\\xBB\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"span\", 7);\n    i0.ɵɵtext(26, \"Last\");\n    i0.ɵɵelementEnd()()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c15, ctx_r0.getPage() == 1));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c15, ctx_r0.getPage() == 1));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.getPages());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c15, ctx_r0.getPage() == ctx_r0.getLast()));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c15, ctx_r0.getPage() == ctx_r0.getLast()));\n  }\n}\n\nfunction PagerComponent_nav_1_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r17 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r17);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r17);\n  }\n}\n\nfunction PagerComponent_nav_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"nav\", 16)(1, \"label\", 17);\n    i0.ɵɵtext(2, \" Per Page: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"select\", 18);\n    i0.ɵɵlistener(\"change\", function PagerComponent_nav_1_Template_select_change_3_listener($event) {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return ctx_r18.onChangePerPage($event);\n    })(\"ngModelChange\", function PagerComponent_nav_1_Template_select_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return ctx_r20.currentPerPage = $event;\n    });\n    i0.ɵɵtemplate(4, PagerComponent_nav_1_option_4_Template, 2, 2, \"option\", 19);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.currentPerPage);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.perPageSelect);\n  }\n}\n\nfunction Angular2SmartTableComponent_thead_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"thead\", 6);\n    i0.ɵɵlistener(\"create\", function Angular2SmartTableComponent_thead_3_Template_thead_create_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.create.emit($event);\n    })(\"selectAllRows\", function Angular2SmartTableComponent_thead_3_Template_thead_selectAllRows_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onSelectAllRows($event);\n    })(\"sort\", function Angular2SmartTableComponent_thead_3_Template_thead_sort_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.sort($event);\n    })(\"hide\", function Angular2SmartTableComponent_thead_3_Template_thead_hide_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.onHideHeader($event);\n    })(\"filter\", function Angular2SmartTableComponent_thead_3_Template_thead_filter_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.filter($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"grid\", ctx_r0.grid)(\"isAllSelected\", ctx_r0.isAllSelected)(\"source\", ctx_r0.source)(\"createConfirm\", ctx_r0.createConfirm);\n  }\n}\n\nfunction Angular2SmartTableComponent_angular2_smart_table_pager_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"angular2-smart-table-pager\", 7);\n    i0.ɵɵlistener(\"changePage\", function Angular2SmartTableComponent_angular2_smart_table_pager_5_Template_angular2_smart_table_pager_changePage_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.changePage($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"source\", ctx_r1.source)(\"perPageSelect\", ctx_r1.perPageSelect);\n  }\n}\n\nclass DataSource {\n  constructor() {\n    this.onChangedSource = new Subject();\n    this.onAddedSource = new Subject();\n    this.onUpdatedSource = new Subject();\n    this.onRemovedSource = new Subject();\n  }\n\n  refresh() {\n    this.emitOnChanged('refresh');\n  }\n\n  load(data) {\n    this.emitOnChanged('load');\n    return Promise.resolve();\n  }\n\n  onChanged() {\n    return this.onChangedSource.asObservable();\n  }\n\n  onAdded() {\n    return this.onAddedSource.asObservable();\n  }\n\n  onUpdated() {\n    return this.onUpdatedSource.asObservable();\n  }\n\n  onRemoved() {\n    return this.onRemovedSource.asObservable();\n  }\n\n  prepend(element) {\n    this.emitOnAdded(element);\n    this.emitOnChanged('prepend');\n    return Promise.resolve();\n  }\n\n  append(element) {\n    this.emitOnAdded(element);\n    this.emitOnChanged('append');\n    return Promise.resolve();\n  }\n\n  add(element) {\n    this.emitOnAdded(element);\n    this.emitOnChanged('add');\n    return Promise.resolve();\n  }\n\n  remove(element) {\n    this.emitOnRemoved(element);\n    this.emitOnChanged('remove');\n    return Promise.resolve();\n  }\n\n  update(element, values) {\n    this.emitOnUpdated(element);\n    this.emitOnChanged('update');\n    return Promise.resolve();\n  }\n\n  empty() {\n    this.emitOnChanged('empty');\n    return Promise.resolve();\n  }\n\n  setSort(conf, doEmit) {\n    if (doEmit) {\n      this.emitOnChanged('sort');\n    }\n  }\n\n  setFilter(conf, andOperator, doEmit) {\n    if (doEmit) {\n      this.emitOnChanged('filter');\n    }\n  }\n\n  addFilter(fieldConf, andOperator, doEmit) {\n    if (doEmit) {\n      this.emitOnChanged('filter');\n    }\n  }\n\n  setPaging(page, perPage, doEmit) {\n    if (doEmit) {\n      this.emitOnChanged('paging');\n    }\n  }\n\n  setPage(page, doEmit) {\n    if (doEmit) {\n      this.emitOnChanged('page');\n    }\n  }\n\n  emitOnRemoved(element) {\n    this.onRemovedSource.next(element);\n  }\n\n  emitOnUpdated(element) {\n    this.onUpdatedSource.next(element);\n  }\n\n  emitOnAdded(element) {\n    this.onAddedSource.next(element);\n  }\n\n  emitOnChanged(action) {\n    this.getElements().then(elements => this.onChangedSource.next({\n      action: action,\n      elements: elements,\n      paging: this.getPaging(),\n      filter: this.getFilter(),\n      sort: this.getSort()\n    }));\n  }\n\n}\n\nfunction defaultObjectComparator(direction, left, right) {\n  if (left == null && right == null) {\n    return 0;\n  } // only one of them can be null now\n\n\n  if (left == null || left < right) {\n    return -1 * direction;\n  }\n\n  if (right == null || right < left) {\n    return direction;\n  } // none of them can be null now, and they must be equal\n\n\n  return 0;\n}\n\nfunction defaultNumberComparator(direction, left, right) {\n  // the default comparator already does what we want, so this function is merely a type-safe alias\n  return defaultObjectComparator(direction, left, right);\n}\n\nfunction defaultStringComparator(direction, left, right) {\n  if (left == null && right == null) {\n    return 0;\n  } else if (left == null) {\n    return -1 * direction;\n  } else if (right == null) {\n    return direction;\n  } else {\n    return left.localeCompare(right) * direction;\n  }\n}\n/**\n * Compares two values with special treatment for numbers and strings.\n *\n * The rule is: if both values are of type number (or null), they are compared as if they were numbers.\n * If both values are either null, undefined or typeof string, they are compared as strings using the current locale.\n * Otherwise, they are compared using their natural ordering.\n *\n * Null values are considered less than any non-null element. Null and undefined are considered equal.\n *\n * @param direction 1 for ascending and -1 for descending (other values are not allowed)\n * @param left the left value\n * @param right the right value\n */\n\n\nfunction defaultComparator(direction, left, right) {\n  const leftIsNumeric = left == null || !isNaN(parseFloat(left));\n  const rightIsNumeric = right == null || !isNaN(parseFloat(right));\n  const leftIsString = left == null || typeof left === 'string';\n  const rightIsString = right == null || typeof right === 'string';\n\n  if (leftIsNumeric && rightIsNumeric) {\n    return defaultNumberComparator(direction, Number(left), Number(right));\n  } else if (leftIsString && rightIsString) {\n    return defaultStringComparator(direction, left, right);\n  } else {\n    return defaultObjectComparator(direction, left, right);\n  }\n}\n\nclass LocalSorter {\n  static sort(data, field, direction, customCompare) {\n    const dir = direction === 'asc' ? 1 : -1;\n    const compare = customCompare ? customCompare : defaultComparator;\n    return data.sort((a, b) => {\n      let parts = field.split(\".\");\n      let propA = a;\n\n      for (let i = 0; i < parts.length && typeof propA !== 'undefined'; i++) {\n        propA = propA[parts[i]];\n      }\n\n      let propB = b;\n\n      for (let i = 0; i < parts.length && typeof propB !== 'undefined'; i++) {\n        propB = propB[parts[i]];\n      }\n\n      return compare.call(null, dir, propA, propB);\n    });\n  }\n\n}\n/**\n * A filter predicate that implements a case-insensitive string inclusion.\n *\n * @param cellValue the cell value to check\n * @param search the search/filter string to check against\n * @param data ignored\n * @param cellName ignored\n */\n\n\nfunction defaultStringInclusionFilter(cellValue, search, data, cellName) {\n  var _a, _b;\n  /* Implementation note: we declared the parameters as strings, but this does NOT mean they\n   * are actually strings because Typescript does NOT check the types. Therefore, we call toString() on the inputs.\n   */\n\n\n  const sanitizedCellValue = (_a = cellValue === null || cellValue === void 0 ? void 0 : cellValue.toString()) !== null && _a !== void 0 ? _a : '';\n  const sanitizedSearchString = (_b = search === null || search === void 0 ? void 0 : search.toString()) !== null && _b !== void 0 ? _b : '';\n  return sanitizedCellValue.toLowerCase().includes(sanitizedSearchString.toLowerCase());\n}\n\nclass LocalFilter {\n  static filter(data, field, search, customFilter) {\n    const filter = customFilter ? customFilter : defaultStringInclusionFilter;\n    return data.filter(el => {\n      //const value = typeof el[field] === 'undefined' || el[field] === null ? '' : el[field];\n      //return filter.call(null, value, search, el);\n      let parts = field.split(\".\");\n      let prop = el;\n\n      for (var i = 0; i < parts.length && typeof prop !== 'undefined'; i++) {\n        prop = prop[parts[i]];\n      }\n\n      return filter.call(null, prop, search, data, field, el);\n    });\n  }\n\n}\n\nclass LocalPager {\n  static paginate(data, page, perPage) {\n    return data.slice(perPage * (page - 1), perPage * page);\n  }\n\n}\n/**\n * Extending object that entered in first argument.\n *\n * Returns extended object or false if have no target object or incorrect type.\n *\n * If you wish to clone source object (without modify it), just use empty new\n * object as first argument, like this:\n *   deepExtend({}, yourObj_1, [yourObj_N]);\n */\n\n\nconst deepExtend = function (...objects) {\n  if (arguments.length < 1 || typeof arguments[0] !== 'object') {\n    return false;\n  }\n\n  if (arguments.length < 2) {\n    return arguments[0];\n  }\n\n  const target = arguments[0]; // convert arguments to array and cut off target object\n\n  const args = Array.prototype.slice.call(arguments, 1);\n  let val, src;\n  args.forEach(obj => {\n    // skip argument if it is array or isn't object\n    if (typeof obj !== 'object' || Array.isArray(obj)) {\n      return;\n    }\n\n    Object.keys(obj).forEach(function (key) {\n      src = target[key]; // source value\n\n      val = obj[key]; // new value\n      // recursion prevention\n\n      if (val === target) {\n        return;\n        /**\n         * if new value isn't object then just overwrite by new value\n         * instead of extending.\n         */\n      } else if (typeof val !== 'object' || val === null) {\n        target[key] = val;\n        return; // just clone arrays (and recursive clone objects inside)\n      } else if (Array.isArray(val)) {\n        target[key] = cloneDeep(val);\n        return; // overwrite by new value if source isn't object or array\n      } else if (typeof src !== 'object' || src === null || Array.isArray(src)) {\n        target[key] = deepExtend({}, val);\n        return; // source value and new value is objects both, extending...\n      } else {\n        target[key] = deepExtend(src, val);\n        return;\n      }\n    });\n  });\n  return target;\n};\n\nclass Deferred {\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve;\n      this.reject = reject;\n    });\n  }\n\n} // getDeepFromObject({result: {data: 1}}, 'result.data', 2); // returns 1\n\n\nfunction getDeepFromObject(object = {}, name, defaultValue) {\n  const keys = name.split('.'); // clone the object\n\n  let level = deepExtend({}, object);\n  keys.forEach(k => {\n    if (level && typeof level[k] !== 'undefined') {\n      level = level[k];\n    }\n  });\n  return typeof level === 'undefined' ? defaultValue : level;\n}\n\nfunction getPageForRowIndex(index, perPage) {\n  // we need to add 1 to convert 0-based index to 1-based page number.\n  return Math.floor(index / perPage) + 1;\n}\n\nclass LocalDataSource extends DataSource {\n  constructor(data = []) {\n    super();\n    this.data = [];\n    this.filteredAndSorted = [];\n    this.sortConf = [];\n    this.filterConf = {\n      filters: [],\n      andOperator: true\n    };\n    this.pagingConf = {};\n    this.selectedItems = [];\n    this.data = data;\n  }\n\n  load(data) {\n    this.data = data;\n    return super.load(data);\n  }\n\n  prepend(element) {\n    this.reset(true);\n    this.data.unshift(element);\n    return super.prepend(element);\n  }\n\n  append(element) {\n    this.reset(true);\n    this.data.push(element);\n    return super.append(element);\n  }\n\n  add(element) {\n    this.data.push(element);\n    return super.add(element);\n  }\n\n  remove(element) {\n    this.data = this.data.filter(el => el !== element);\n    return super.remove(element);\n  }\n\n  update(element, values) {\n    return new Promise((resolve, reject) => {\n      this.find(element).then(found => {\n        found = deepExtend(found, values);\n        super.update(found, values).then(resolve).catch(reject);\n      }).catch(reject);\n    });\n  }\n\n  find(element) {\n    const found = this.data.find(el => el === element);\n\n    if (found) {\n      return Promise.resolve(found);\n    }\n\n    return Promise.reject(new Error('Element was not found in the dataset'));\n  }\n\n  getElements() {\n    const data = this.data.slice(0);\n    return Promise.resolve(this.prepareData(data));\n  }\n\n  getFilteredAndSorted() {\n    let data = this.data.slice(0);\n    this.prepareData(data);\n    return Promise.resolve(this.filteredAndSorted);\n  }\n\n  getAll() {\n    const data = this.data.slice(0);\n    return Promise.resolve(data);\n  }\n\n  reset(silent = false) {\n    if (silent) {\n      this.filterConf = {\n        filters: [],\n        andOperator: true\n      };\n      this.sortConf = [];\n      this.pagingConf['page'] = 1;\n    } else {\n      this.setFilter([], true, false);\n      this.setSort([], false);\n      this.setPage(1);\n    }\n  }\n\n  empty() {\n    this.data = [];\n    return super.empty();\n  }\n\n  count() {\n    return this.filteredAndSorted.length;\n  }\n\n  toggleItem(row, isSelected) {\n    if (isSelected) this.selectedItems.push(row);else this.selectedItems = this.selectedItems.filter(i => i !== row);\n  }\n\n  selectAllItems(checked) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (checked) {\n        const allItems = yield this.getAll();\n        this.selectedItems = allItems.slice(0);\n      } else this.selectedItems = [];\n    });\n  }\n\n  getSelectedItems() {\n    return this.selectedItems;\n  }\n  /**\n   *\n   * Array of conf objects\n   * [\n   *  {field: string, direction: asc|desc|null, compare: Function|null},\n   * ]\n   * @param conf\n   * @param doEmit\n   * @returns {LocalDataSource}\n   */\n\n\n  setSort(conf, doEmit = true) {\n    if (conf !== null) {\n      conf.forEach(fieldConf => {\n        if (!fieldConf['field'] || typeof fieldConf['direction'] === 'undefined') {\n          throw new Error('Sort configuration object is not valid');\n        }\n      });\n      this.sortConf = conf;\n    }\n\n    super.setSort(conf, doEmit);\n    return this;\n  }\n  /**\n   *\n   * Array of conf objects\n   * [\n   *  {field: string, search: string, filter: Function|null},\n   * ]\n   * @param conf\n   * @param andOperator\n   * @param doEmit\n   * @returns {LocalDataSource}\n   */\n\n\n  setFilter(conf, andOperator = true, doEmit = true) {\n    if (conf && conf.length > 0) {\n      conf.forEach(fieldConf => {\n        this.addFilter(fieldConf, andOperator, false);\n      });\n    } else {\n      this.filterConf = {\n        filters: [],\n        andOperator: true\n      };\n    }\n\n    this.filterConf.andOperator = andOperator;\n    this.pagingConf['page'] = 1;\n    super.setFilter(conf, andOperator, doEmit);\n    return this;\n  }\n\n  addFilter(fieldConf, andOperator = true, doEmit = true) {\n    if (!fieldConf['field'] || typeof fieldConf['search'] === 'undefined') {\n      throw new Error('Filter configuration object is not valid');\n    }\n\n    let found = false;\n    this.filterConf.filters.forEach((currentFieldConf, index) => {\n      if (currentFieldConf['field'] === fieldConf['field']) {\n        this.filterConf.filters[index] = fieldConf;\n        found = true;\n      }\n    });\n\n    if (!found) {\n      this.filterConf.filters.push(fieldConf);\n    }\n\n    this.filterConf.andOperator = andOperator;\n    super.addFilter(fieldConf, andOperator, doEmit);\n    return this;\n  }\n\n  setPaging(page, perPage, doEmit = true) {\n    this.pagingConf['page'] = page;\n    this.pagingConf['perPage'] = perPage;\n    super.setPaging(page, perPage, doEmit);\n    return this;\n  }\n\n  setPage(page, doEmit = true) {\n    this.pagingConf['page'] = page;\n    super.setPage(page, doEmit);\n    return this;\n  }\n\n  getSort() {\n    return this.sortConf;\n  }\n\n  getFilter() {\n    return this.filterConf;\n  }\n\n  getPaging() {\n    return this.pagingConf;\n  }\n\n  prepareData(data) {\n    data = this.filter(data);\n    data = this.sort(data);\n    this.filteredAndSorted = data.slice(0);\n    return this.paginate(data);\n  }\n\n  sort(data) {\n    if (this.sortConf) {\n      this.sortConf.forEach(fieldConf => {\n        data = LocalSorter.sort(data, fieldConf['field'], fieldConf['direction'], fieldConf['compare']);\n      });\n    }\n\n    return data;\n  } // TODO: refactor?\n\n\n  filter(data) {\n    if (this.filterConf.filters) {\n      if (this.filterConf.andOperator) {\n        this.filterConf.filters.forEach(fieldConf => {\n          if (fieldConf['search'].length > 0) {\n            data = LocalFilter.filter(data, fieldConf['field'], fieldConf['search'], fieldConf['filter']);\n          }\n        });\n      } else {\n        let mergedData = [];\n        this.filterConf.filters.forEach(fieldConf => {\n          if (fieldConf['search'].length > 0) {\n            mergedData = mergedData.concat(LocalFilter.filter(data, fieldConf['field'], fieldConf['search'], fieldConf['filter']));\n          }\n        }); // remove non unique items\n\n        data = mergedData.filter((elem, pos, arr) => {\n          return arr.indexOf(elem) === pos;\n        });\n      }\n    }\n\n    return data;\n  }\n\n  paginate(data) {\n    if (this.pagingConf && this.pagingConf['page'] && this.pagingConf['perPage']) {\n      data = LocalPager.paginate(data, this.pagingConf['page'], this.pagingConf['perPage']);\n    }\n\n    return data;\n  }\n\n}\n\nfunction prepareValue(value) {\n  return value;\n}\n\nclass Cell {\n  constructor(value, row, column, dataSet) {\n    this.value = value;\n    this.row = row;\n    this.column = column;\n    this.dataSet = dataSet;\n    this.newValue = '';\n    this.newValue = value;\n  }\n\n  getColumn() {\n    return this.column;\n  }\n\n  getRow() {\n    return this.row;\n  }\n\n  getValue() {\n    const valid = this.column.getValuePrepareFunction() instanceof Function;\n    const prepare = valid ? this.column.getValuePrepareFunction() : Cell.PREPARE;\n    return prepare.call(null, this.value, this.row.getData(), this);\n  }\n\n  setValue(value) {\n    this.newValue = value;\n  }\n\n  getId() {\n    return this.getColumn().id;\n  }\n\n  getTitle() {\n    return this.getColumn().title;\n  }\n\n  isEditable() {\n    var _a, _b;\n\n    if (this.getRow().index === -1) {\n      return (_a = this.getColumn().isAddable) !== null && _a !== void 0 ? _a : false;\n    } else {\n      return (_b = this.getColumn().isEditable) !== null && _b !== void 0 ? _b : false;\n    }\n  }\n\n  resetValue() {\n    // directly access this.value to get raw value,\n    // because this.getValue() will go through valuePrepareFunction (if any)\n    this.setValue(this.value);\n  }\n\n}\n\nCell.PREPARE = prepareValue;\n\nclass Row {\n  constructor(index, data, _dataSet) {\n    this.index = index;\n    this.data = data;\n    this._dataSet = _dataSet;\n    this.isSelected = false;\n    this.isInEditing = false;\n    this.isExpanded = false;\n    this.cells = [];\n    this.process();\n  }\n\n  getCell(column) {\n    const theCell = this.cells.find(el => el.getColumn() === column);\n    if (!theCell) throw new Error('There is no cell with such Column');\n    return theCell;\n  }\n\n  getCells() {\n    return this.cells;\n  }\n\n  getData() {\n    return this.data;\n  }\n\n  getIsSelected() {\n    return this.isSelected;\n  }\n\n  getIsExpanded() {\n    return this.isExpanded;\n  }\n\n  getNewData() {\n    const values = Object.assign({}, this.data);\n    this.getCells().forEach(cell => values[cell.getColumn().id] = cell.newValue);\n    return values;\n  }\n\n  setData(data) {\n    this.data = data;\n    this.process();\n  }\n\n  process() {\n    this.cells = [];\n\n    this._dataSet.getColumns().forEach(column => {\n      const cell = this.createCell(column);\n      this.cells.push(cell);\n    });\n  }\n\n  createCell(column) {\n    const defValue = column.settings.defaultValue ? column.settings.defaultValue : '';\n    const value = typeof this.data[column.id] === 'undefined' ? defValue : this.data[column.id];\n    return new Cell(value, this, column, this._dataSet);\n  }\n\n}\n\nvar SelectModeOptions;\n\n(function (SelectModeOptions) {\n  SelectModeOptions[\"Single\"] = \"single\";\n  SelectModeOptions[\"Multi\"] = \"multi\";\n})(SelectModeOptions || (SelectModeOptions = {}));\n\nvar IColumnType;\n\n(function (IColumnType) {\n  IColumnType[\"Text\"] = \"text\";\n  IColumnType[\"Html\"] = \"html\";\n  IColumnType[\"Custom\"] = \"custom\";\n})(IColumnType || (IColumnType = {}));\n\nclass Column {\n  constructor(id, settings, dataSet) {\n    this.id = id;\n    this.settings = settings;\n    this.dataSet = dataSet;\n    this.title = '';\n    this.hide = false;\n    this.type = IColumnType.Text;\n    this.class = '';\n    this.width = '';\n    this.isSortable = true;\n    this.isEditable = true;\n    this.isAddable = true;\n    this.isFilterable = false;\n    this.sortDirection = 'asc';\n    this.defaultSortDirection = undefined;\n    this.editor = {\n      type: '',\n      config: {},\n      component: null\n    };\n    this.filter = {\n      type: '',\n      config: {},\n      component: null\n    };\n    this.renderComponent = null;\n    this.process();\n  }\n\n  getOnComponentInitFunction() {\n    return this.onComponentInitFunction;\n  }\n\n  getCompareFunction() {\n    return this.compareFunction;\n  }\n\n  getValuePrepareFunction() {\n    return this.valuePrepareFunction;\n  }\n\n  getFilterFunction() {\n    return this.filterFunction;\n  }\n\n  getConfig() {\n    return this.editor && this.editor.config;\n  }\n\n  getFilterType() {\n    return this.filter && this.filter.type;\n  }\n\n  getFilterConfig() {\n    return this.filter && this.filter.config;\n  }\n  /**\n   * Retrieves a setting by name.\n   *\n   * @param key the current key name\n   * @param compatKeys key names for backwards compatibility\n   * @private\n   */\n\n\n  lookupSetting(key, compatKeys = []) {\n    if (typeof this.settings[key] === undefined) {\n      for (const k of compatKeys) {\n        if (typeof this.settings[k] !== undefined) {\n          return this.settings[k];\n        }\n      }\n\n      return undefined;\n    } else {\n      return this.settings[key];\n    }\n  }\n\n  process() {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o; // the pattern is \"X = lookup(key) ?? X\" - this keeps the default value in case the setting is undefined\n\n\n    this.placeholder = this.lookupSetting('placeholder');\n    this.title = (_a = this.lookupSetting('title')) !== null && _a !== void 0 ? _a : this.title;\n    this.class = (_b = this.lookupSetting('class')) !== null && _b !== void 0 ? _b : this.class;\n    this.width = (_c = this.lookupSetting('width')) !== null && _c !== void 0 ? _c : this.width;\n    this.hide = (_d = this.lookupSetting('hide')) !== null && _d !== void 0 ? _d : this.hide;\n    this.type = (_e = this.lookupSetting('type')) !== null && _e !== void 0 ? _e : this.determineType();\n    this.editor = (_f = this.lookupSetting('editor')) !== null && _f !== void 0 ? _f : this.editor;\n    this.filter = (_g = this.lookupSetting('filter')) !== null && _g !== void 0 ? _g : this.filter;\n    this.renderComponent = (_h = this.lookupSetting('renderComponent')) !== null && _h !== void 0 ? _h : this.renderComponent;\n    this.isFilterable = this.filter !== undefined && !!this.filter;\n    this.isSortable = (_j = this.lookupSetting('isSortable', ['sort'])) !== null && _j !== void 0 ? _j : this.isSortable;\n    this.isEditable = (_k = this.lookupSetting('isEditable', ['editable'])) !== null && _k !== void 0 ? _k : this.isEditable;\n    this.isAddable = (_l = this.lookupSetting('isAddable')) !== null && _l !== void 0 ? _l : this.isAddable;\n    this.defaultSortDirection = (_m = this.lookupSetting('sortDirection')) !== null && _m !== void 0 ? _m : this.defaultSortDirection;\n    this.sortDirection = (_o = this.defaultSortDirection) !== null && _o !== void 0 ? _o : this.sortDirection;\n    this.compareFunction = this.lookupSetting('compareFunction');\n    this.valuePrepareFunction = this.lookupSetting('valuePrepareFunction');\n    this.filterFunction = this.lookupSetting('filterFunction');\n    this.onComponentInitFunction = this.lookupSetting('onComponentInitFunction');\n  }\n\n  determineType() {\n    // TODO: determine type by data\n    return IColumnType.Text;\n  }\n\n}\n\nclass DataSet {\n  constructor(data = [], columnSettings) {\n    this.columnSettings = columnSettings;\n    this.data = [];\n    this.columns = [];\n    this.rows = [];\n    this.willSelect = '';\n    this.createColumns(columnSettings);\n    this.setData(data);\n    this.createNewRow();\n  }\n\n  setData(data, selectedRows = []) {\n    const rows = data.map((el, index) => {\n      const row = new Row(index, el, this);\n      row.isSelected = selectedRows.indexOf(el) > -1;\n      return row;\n    });\n    this.data = rows;\n    this.createRows();\n  }\n\n  getColumns() {\n    return this.columns;\n  }\n\n  getExpandedRow() {\n    if (!this.expandedRow) {\n      console.warn('Expanded row not found');\n      throw new Error('Expanded row not found');\n    }\n\n    return this.expandedRow;\n  }\n\n  getSelectedRow() {\n    if (!this.selectedRow) {\n      console.warn('Selected row not found');\n      throw new Error('Selected row not found');\n    }\n\n    return this.selectedRow;\n  }\n\n  getRows() {\n    var _a;\n\n    return (_a = this.rows) !== null && _a !== void 0 ? _a : [];\n  }\n\n  getFirstRow() {\n    return this.rows[0];\n  }\n\n  getLastRow() {\n    return this.rows[this.rows.length - 1];\n  }\n\n  findRowByData(data) {\n    const row = this.rows.find(row => row.getData() === data);\n\n    if (!row) {\n      console.warn('Data row not found', data);\n      throw new Error('Row not found');\n    }\n\n    return row;\n  }\n\n  deselectAll() {\n    this.rows.forEach(row => {\n      row.isSelected = false;\n    }); // we need to clear selectedRow field because no one row selected\n\n    this.selectedRow = undefined;\n  }\n\n  clearExpandAll() {\n    this.rows.forEach(row => {\n      row.isExpanded = false;\n    }); // we need to clear selectedRow field because no one row selected\n\n    this.expandedRow = undefined;\n  }\n\n  selectRow(row) {\n    const previousIsSelected = row.isSelected;\n    this.deselectAll();\n    row.isSelected = !previousIsSelected;\n    this.selectedRow = row; //return this.selectedRow;\n  }\n\n  multipleSelectRow(row) {\n    row.isSelected = !row.isSelected;\n    this.selectedRow = row;\n    return this.selectedRow;\n  }\n\n  expandRow(row) {\n    var _a;\n\n    const previousIsExpanded = row.isExpanded;\n    this.clearExpandAll();\n\n    if (row.index !== ((_a = this.expandedRow) === null || _a === void 0 ? void 0 : _a.index)) {\n      this.expandedRow = undefined;\n    }\n\n    row.isExpanded = !previousIsExpanded;\n    this.expandedRow = row;\n    return this.expandedRow;\n  }\n\n  selectPreviousRow() {\n    if (this.rows.length > 0) {\n      let index = this.selectedRow ? this.selectedRow.index : 0;\n\n      if (index > this.rows.length - 1) {\n        index = this.rows.length - 1;\n      }\n\n      this.selectRow(this.rows[index]);\n      return this.getSelectedRow();\n    }\n\n    throw new Error('There are no rows inside the data table');\n  }\n\n  selectFirstRow() {\n    if (this.rows.length > 0) {\n      this.selectRow(this.rows[0]);\n      return this.getSelectedRow();\n    }\n\n    throw new Error('There are no rows inside the data table');\n  }\n\n  selectLastRow() {\n    if (this.rows.length > 0) {\n      this.selectRow(this.rows[this.rows.length - 1]);\n      return this.getSelectedRow();\n    }\n\n    throw new Error('There are no rows inside the data table');\n  }\n\n  selectRowByIndex(index) {\n    const rowsLength = this.rows.length;\n\n    if (rowsLength === 0) {\n      throw new Error('There are no rows inside the data table');\n    }\n\n    if (!index) {\n      this.selectFirstRow();\n    } else if (index > 0 && index < rowsLength) {\n      this.selectRow(this.rows[index]);\n    } else // we need to deselect all rows if we got an incorrect index\n      this.deselectAll();\n  }\n\n  willSelectFirstRow() {\n    this.willSelect = 'first';\n  }\n\n  willSelectLastRow() {\n    this.willSelect = 'last';\n  }\n\n  select(selectedRowIndex) {\n    if (this.getRows().length === 0) {\n      throw new Error('There are no rows inside the data table');\n    }\n\n    if (this.willSelect) {\n      if (this.willSelect === 'first') {\n        this.selectFirstRow();\n      }\n\n      if (this.willSelect === 'last') {\n        this.selectLastRow();\n      }\n\n      this.willSelect = '';\n    } else {\n      this.selectRowByIndex(selectedRowIndex);\n    }\n\n    return this.getSelectedRow();\n  }\n\n  createNewRow() {\n    this.newRow = new Row(-1, {}, this);\n    this.newRow.isInEditing = true;\n  }\n  /**\n   * Create columns by mapping from the settings\n   * @param settings\n   * @private\n   */\n\n\n  createColumns(settings) {\n    for (const id in settings) {\n      if (settings.hasOwnProperty(id)) {\n        this.columns.push(new Column(id, settings[id], this));\n      }\n    }\n  }\n  /**\n   * Create rows based on current data prepared in data source\n   * @private\n   */\n\n\n  createRows() {\n    this.rows = [];\n    this.data.forEach(el => {\n      this.rows.push(el);\n    });\n  }\n\n}\n\nclass Grid {\n  constructor(source, settings) {\n    this.createFormShown = false;\n    this.onSelectRowSource = new Subject();\n    this.onDeselectRowSource = new Subject();\n    this.setSettings(settings);\n    this.setSource(source);\n  }\n\n  detach() {\n    if (this.sourceOnChangedSubscription) {\n      this.sourceOnChangedSubscription.unsubscribe();\n    }\n\n    if (this.sourceOnUpdatedSubscription) {\n      this.sourceOnUpdatedSubscription.unsubscribe();\n    }\n  }\n\n  showActionColumn(position) {\n    return this.isCurrentActionsPosition(position) && this.isActionsVisible();\n  }\n\n  isCurrentActionsPosition(position) {\n    return position == this.getSetting('actions.position');\n  }\n\n  isActionsVisible() {\n    return this.getSetting('actions.add') || this.getSetting('actions.edit') || this.getSetting('actions.delete') || this.getSetting('actions.custom').length;\n  }\n\n  isMultiSelectVisible() {\n    return this.getSetting('selectMode') === 'multi';\n  }\n\n  getNewRow() {\n    return this.dataSet.newRow;\n  }\n\n  setSettings(settings) {\n    this.settings = settings;\n    this.dataSet = new DataSet([], this.getSetting('columns'));\n\n    if (this.source) {\n      this.source.refresh();\n    }\n  }\n\n  getDataSet() {\n    return this.dataSet;\n  }\n\n  setSource(source) {\n    this.source = this.prepareSource(source);\n    this.detach();\n    this.sourceOnChangedSubscription = this.source.onChanged().subscribe(changes => this.processDataChange(changes));\n    this.sourceOnUpdatedSubscription = this.source.onUpdated().subscribe(data => {\n      const changedRow = this.dataSet.findRowByData(data);\n      changedRow.setData(data);\n    });\n  }\n\n  getSetting(name, defaultValue) {\n    return getDeepFromObject(this.settings, name, defaultValue);\n  }\n\n  getColumns() {\n    return this.dataSet.getColumns();\n  }\n\n  getRows() {\n    return this.dataSet.getRows();\n  }\n\n  selectRow(row) {\n    this.dataSet.selectRow(row);\n    this.source.toggleItem(row.getData(), row.isSelected);\n  }\n\n  multipleSelectRow(row) {\n    this.dataSet.multipleSelectRow(row);\n    this.source.toggleItem(row.getData(), row.isSelected);\n  }\n\n  onSelectRow() {\n    return this.onSelectRowSource.asObservable();\n  }\n\n  expandRow(row) {\n    this.dataSet.expandRow(row);\n  }\n\n  onDeselectRow() {\n    return this.onDeselectRowSource.asObservable();\n  }\n\n  edit(row) {\n    row.isInEditing = true;\n  }\n\n  create(row, confirmEmitter) {\n    const deferred = new Deferred();\n    deferred.promise.then(newData => {\n      newData = newData ? newData : row.getNewData();\n\n      if (deferred.resolve.skipAdd) {\n        this.createFormShown = false;\n      } else {\n        this.source.prepend(newData).then(() => {\n          this.createFormShown = false;\n          this.dataSet.createNewRow();\n        });\n      }\n    }).catch(err => {// doing nothing\n    });\n\n    if (this.getSetting('add.confirmCreate')) {\n      confirmEmitter.emit({\n        newData: row.getNewData(),\n        source: this.source,\n        confirm: deferred\n      });\n    } else {\n      deferred.resolve();\n    }\n  }\n\n  save(row, confirmEmitter) {\n    const deferred = new Deferred();\n    deferred.promise.then(newData => {\n      newData = newData ? newData : row.getNewData();\n\n      if (deferred.resolve.skipEdit) {\n        row.isInEditing = false;\n      } else {\n        this.source.update(row.getData(), newData).then(() => {\n          row.isInEditing = false;\n        });\n      }\n    }).catch(err => {// doing nothing\n    });\n\n    if (this.getSetting('edit.confirmSave')) {\n      confirmEmitter.emit({\n        data: row.getData(),\n        newData: row.getNewData(),\n        source: this.source,\n        confirm: deferred\n      });\n    } else {\n      deferred.resolve();\n    }\n  }\n\n  delete(row, confirmEmitter) {\n    const deferred = new Deferred();\n    deferred.promise.then(() => {\n      this.source.remove(row.getData());\n    }).catch(err => {// doing nothing\n    });\n\n    if (this.getSetting('delete.confirmDelete')) {\n      confirmEmitter.emit({\n        data: row.getData(),\n        source: this.source,\n        confirm: deferred\n      });\n    } else {\n      deferred.resolve();\n    }\n  }\n\n  processDataChange(changes) {\n    if (this.shouldProcessChange(changes)) {\n      this.dataSet.setData(changes['elements'], this.getSelectedItems());\n\n      if (this.getSetting('selectMode') !== 'multi') {\n        try {\n          const row = this.determineRowToSelect(changes);\n          this.onSelectRowSource.next(row);\n        } catch (e) {\n          this.onDeselectRowSource.next(null);\n        }\n      }\n    }\n  }\n\n  shouldProcessChange(changes) {\n    if (['filter', 'sort', 'page', 'remove', 'refresh', 'load', 'empty', 'paging'].indexOf(changes['action']) !== -1) {\n      return true;\n    } else if (['prepend', 'append'].indexOf(changes['action']) !== -1 && !this.getSetting('pager.display')) {\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * @breaking-change 1.8.0\n   * Need to add `| null` in return type\n   *\n   * TODO: move to selectable? Separate directive\n   */\n\n\n  determineRowToSelect(changes) {\n    if (['load', 'page', 'filter', 'sort', 'refresh'].indexOf(changes['action']) !== -1) {\n      return this.dataSet.select(this.getRowIndexToSelect());\n    }\n\n    if (this.shouldSkipSelection()) {\n      return null;\n    }\n\n    if (changes['action'] === 'remove') {\n      if (changes['elements'].length === 0) {\n        // we have to store which one to select as the data will be reloaded\n        this.dataSet.willSelectLastRow();\n      } else {\n        return this.dataSet.selectPreviousRow();\n      }\n    }\n\n    if (changes['action'] === 'append') {\n      // we have to store which one to select as the data will be reloaded\n      this.dataSet.willSelectLastRow();\n    }\n\n    if (changes['action'] === 'add') {\n      return this.dataSet.selectFirstRow();\n    }\n\n    if (changes['action'] === 'update') {\n      return this.dataSet.selectFirstRow();\n    }\n\n    if (changes['action'] === 'prepend') {\n      // we have to store which one to select as the data will be reloaded\n      this.dataSet.willSelectFirstRow();\n    }\n\n    return null;\n  }\n\n  prepareSource(source) {\n    const initialSource = this.getInitialSort();\n\n    if (initialSource && initialSource['field'] && initialSource['direction']) {\n      source.setSort([initialSource], false);\n    }\n\n    if (this.getSetting('pager.display') === true) {\n      source.setPaging(this.getPageToSelect(source), this.getSetting('pager.perPage'), false);\n    }\n\n    source.refresh();\n    return source;\n  }\n\n  getInitialSort() {\n    const sortConf = {};\n    this.getColumns().forEach(column => {\n      if (column.isSortable && column.defaultSortDirection) {\n        sortConf['field'] = column.id;\n        sortConf['direction'] = column.defaultSortDirection;\n        sortConf['compare'] = column.getCompareFunction();\n      }\n    });\n    return sortConf;\n  }\n\n  getSelectedRows() {\n    return this.dataSet.getRows().filter(r => r.isSelected);\n  }\n\n  getSelectedItems() {\n    return this.source.getSelectedItems();\n  }\n\n  selectAllRows(status) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.dataSet.getRows().forEach(r => r.isSelected = status);\n      yield this.source.selectAllItems(status);\n    });\n  }\n\n  getFirstRow() {\n    return this.dataSet.getFirstRow();\n  }\n\n  getLastRow() {\n    return this.dataSet.getLastRow();\n  }\n\n  getSelectionInfo() {\n    const switchPageToSelectedRowPage = this.getSetting('switchPageToSelectedRowPage');\n    const selectedRowIndex = Number(this.getSetting('selectedRowIndex', 0)) || 0;\n    const {\n      perPage,\n      page\n    } = this.getSetting('pager');\n    return {\n      perPage,\n      page,\n      selectedRowIndex,\n      switchPageToSelectedRowPage\n    };\n  }\n\n  getRowIndexToSelect() {\n    const {\n      switchPageToSelectedRowPage,\n      selectedRowIndex,\n      perPage\n    } = this.getSelectionInfo();\n    const dataAmount = this.source.count();\n    /**\n     * source - contains all table data\n     * dataSet - contains data for current page\n     * selectedRowIndex - contains index for data in all data\n     *\n     * because of that, we need to count index for a specific row in page\n     * if\n     * `switchPageToSelectedRowPage` - we need to change page automatically\n     * `selectedRowIndex < dataAmount && selectedRowIndex >= 0` - index points to existing data\n     * (if index points to non-existing data and we calculate index for current page - we will get wrong selected row.\n     *  if we return index witch not points to existing data - no line will be highlighted)\n     */\n\n    return switchPageToSelectedRowPage && selectedRowIndex < dataAmount && selectedRowIndex >= 0 ? selectedRowIndex % perPage : selectedRowIndex;\n  }\n\n  getPageToSelect(source) {\n    const {\n      switchPageToSelectedRowPage,\n      selectedRowIndex,\n      perPage,\n      page\n    } = this.getSelectionInfo();\n    let pageToSelect = Math.max(1, page);\n\n    if (switchPageToSelectedRowPage && selectedRowIndex >= 0) {\n      pageToSelect = getPageForRowIndex(selectedRowIndex, perPage);\n    }\n\n    const maxPageAmount = Math.ceil(source.count() / perPage);\n    return maxPageAmount ? Math.min(pageToSelect, maxPageAmount) : pageToSelect;\n  }\n\n  shouldSkipSelection() {\n    /**\n     * For backward compatibility when using `selectedRowIndex` with non-number values - ignored.\n     *\n     * Therefore, in order to select a row after some changes,\n     * the `selectedRowIndex` value must be invalid or >= 0 (< 0 means that no row is selected).\n     *\n     * `Number(value)` returns `NaN` on all invalid cases, and comparisons with `NaN` always return `false`.\n     *\n     * !!! We should skip a row only in cases when `selectedRowIndex` < 0\n     * because when < 0 all lines must be deselected\n     */\n    const selectedRowIndex = Number(this.getSetting('selectedRowIndex'));\n    return selectedRowIndex < 0;\n  }\n\n}\n\nclass TagComponent {\n  constructor() {\n    this.close = new EventEmitter();\n  }\n\n  closeClicked(evt) {\n    evt.stopPropagation();\n    this.close.emit(this.item.id);\n  }\n\n}\n\nTagComponent.ɵfac = function TagComponent_Factory(t) {\n  return new (t || TagComponent)();\n};\n\nTagComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TagComponent,\n  selectors: [[\"angular2-smart-table-tag\"]],\n  inputs: {\n    item: \"item\"\n  },\n  outputs: {\n    close: \"close\"\n  },\n  decls: 5,\n  vars: 1,\n  consts: [[2, \"padding\", \"5px\", \"display\", \"inline\", \"white-space\", \"nowrap\"], [\"aria-hidden\", \"true\", \"focusable\", \"false\", \"data-prefix\", \"fas\", \"data-icon\", \"times-circle\", \"role\", \"img\", \"xmlns\", \"http://www.w3.org/2000/svg\", \"viewBox\", \"0 0 512 512\", 1, \"svg-inline--fa\", \"fa-times-circle\", \"fa-w-16\", 2, \"width\", \"15px\", 3, \"click\"], [\"fill\", \"currentColor\", \"d\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z\"], [1, \"itemText\", 2, \"margin-left\", \"3px\"]],\n  template: function TagComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"svg\", 1);\n      i0.ɵɵlistener(\"click\", function TagComponent_Template__svg_svg_click_1_listener($event) {\n        return ctx.closeClicked($event);\n      });\n      i0.ɵɵelement(2, \"path\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵnamespaceHTML();\n      i0.ɵɵelementStart(3, \"span\", 3);\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.item.title);\n    }\n  },\n  styles: [\"*[_ngcontent-%COMP%]{box-sizing:border-box}*[_ngcontent-%COMP%]{padding:0;margin:0}ul[_ngcontent-%COMP%]{list-style-type:none}.add-tag-list[_ngcontent-%COMP%]{font-family:font8272;font-size:1.5em}.add-tag-list[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{padding-left:20px;padding-right:20px;padding-bottom:8px;display:flex;flex-direction:row-reverse;float:left}.add-tag-list[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:last-child{padding-right:0}.closeButton[_ngcontent-%COMP%]{display:inline}.closeButton[_ngcontent-%COMP%]:after{content:\\\"\\\\f057\\\";padding-left:4px;font-family:FontAwesome;color:#df0024;cursor:pointer}.closeButton[_ngcontent-%COMP%]:hover:after{color:#900110;transition:.6s linear}\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TagComponent, [{\n    type: Component,\n    args: [{\n      selector: 'angular2-smart-table-tag',\n      template: \"<div style=\\\"padding: 5px; display: inline; white-space: nowrap\\\">\\n  <svg\\n    style=\\\"width: 15px\\\"\\n    (click)=\\\"closeClicked($event)\\\"\\n    aria-hidden=\\\"true\\\"\\n    focusable=\\\"false\\\"\\n    data-prefix=\\\"fas\\\"\\n    data-icon=\\\"times-circle\\\"\\n    class=\\\"svg-inline--fa fa-times-circle fa-w-16\\\"\\n    role=\\\"img\\\"\\n    xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n    viewBox=\\\"0 0 512 512\\\"\\n  >\\n    <path\\n      fill=\\\"currentColor\\\"\\n      d=\\\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z\\\"\\n    ></path>\\n  </svg>\\n  <span style=\\\"margin-left: 3px\\\" class=\\\"itemText\\\">{{ item.title }}</span>\\n</div>\\n\",\n      styles: [\"*{box-sizing:border-box}*{padding:0;margin:0}ul{list-style-type:none}.add-tag-list{font-family:font8272;font-size:1.5em}.add-tag-list ul li{padding-left:20px;padding-right:20px;padding-bottom:8px;display:flex;flex-direction:row-reverse;float:left}.add-tag-list ul li:last-child{padding-right:0}.closeButton{display:inline}.closeButton:after{content:\\\"\\\\f057\\\";padding-left:4px;font-family:FontAwesome;color:#df0024;cursor:pointer}.closeButton:hover:after{color:#900110;transition:.6s linear}\\n\"]\n    }]\n  }], null, {\n    item: [{\n      type: Input\n    }],\n    close: [{\n      type: Output\n    }]\n  });\n})();\n\nclass TagsListComponent {\n  constructor() {\n    this.close = new EventEmitter();\n  }\n\n  closedTag(tag) {\n    this.close.emit(tag);\n  }\n\n}\n\nTagsListComponent.ɵfac = function TagsListComponent_Factory(t) {\n  return new (t || TagsListComponent)();\n};\n\nTagsListComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TagsListComponent,\n  selectors: [[\"angular2-smart-table-tags-list\"]],\n  inputs: {\n    tags: \"tags\"\n  },\n  outputs: {\n    close: \"close\"\n  },\n  decls: 2,\n  vars: 1,\n  consts: [[\"id\", \"tagslist\", 1, \"add-tag-list\"], [3, \"item\", \"close\", 4, \"ngFor\", \"ngForOf\"], [3, \"item\", \"close\"]],\n  template: function TagsListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, TagsListComponent_angular2_smart_table_tag_1_Template, 1, 1, \"angular2-smart-table-tag\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tags);\n    }\n  },\n  directives: [TagComponent, i2.NgForOf],\n  styles: [_c0]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TagsListComponent, [{\n    type: Component,\n    args: [{\n      selector: 'angular2-smart-table-tags-list',\n      template: \"<div class=\\\"add-tag-list\\\" id=\\\"tagslist\\\">\\n  <angular2-smart-table-tag\\n    *ngFor=\\\"let tag of tags\\\"\\n    [item]=\\\"tag\\\"\\n    (close)=\\\"closedTag($event)\\\"\\n  ></angular2-smart-table-tag>\\n</div>\\n\",\n      styles: [\"*{box-sizing:border-box}*{padding:0;margin:0}ul{list-style-type:none}.add-tag-list{font-family:font8272;font-size:1.5em}.add-tag-list ul li{padding-left:20px;padding-right:20px;padding-bottom:8px;display:flex;flex-direction:row-reverse;float:left}.add-tag-list ul li:last-child{padding-right:0}.closeButton{display:inline}.closeButton:after{content:\\\"\\\\f057\\\";padding-left:4px;font-family:FontAwesome;color:#df0024;cursor:pointer}.closeButton:hover:after{color:#900110;transition:.6s linear}\\n\"]\n    }]\n  }], null, {\n    tags: [{\n      type: Input\n    }],\n    close: [{\n      type: Output\n    }]\n  });\n})();\n\nclass TableService {\n  constructor() {\n    this.mouseMoveEvent$ = new Subject();\n  }\n\n}\n\nTableService.ɵfac = function TableService_Factory(t) {\n  return new (t || TableService)();\n};\n\nTableService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: TableService,\n  factory: TableService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TableService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\nclass CheckboxSelectAllComponent {}\n\nCheckboxSelectAllComponent.ɵfac = function CheckboxSelectAllComponent_Factory(t) {\n  return new (t || CheckboxSelectAllComponent)();\n};\n\nCheckboxSelectAllComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CheckboxSelectAllComponent,\n  selectors: [[\"\", \"angular2-st-checkbox-select-all\", \"\"]],\n  inputs: {\n    grid: \"grid\",\n    source: \"source\",\n    isAllSelected: \"isAllSelected\"\n  },\n  attrs: _c1,\n  decls: 1,\n  vars: 1,\n  consts: [[\"type\", \"checkbox\", 3, \"ngModel\"]],\n  template: function CheckboxSelectAllComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"input\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngModel\", ctx.isAllSelected);\n    }\n  },\n  directives: [i1.CheckboxControlValueAccessor, i1.NgControlStatus, i1.NgModel],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckboxSelectAllComponent, [{\n    type: Component,\n    args: [{\n      selector: '[angular2-st-checkbox-select-all]',\n      template: `\n    <input type=\"checkbox\" [ngModel]=\"isAllSelected\">\n  `\n    }]\n  }], null, {\n    grid: [{\n      type: Input\n    }],\n    source: [{\n      type: Input\n    }],\n    isAllSelected: [{\n      type: Input\n    }]\n  });\n})();\n\nclass ActionsTitleComponent {\n  constructor(ref) {\n    this.ref = ref;\n  }\n\n  ngAfterViewInit() {\n    this.ref.nativeElement.classList.add('angular2-smart-actions');\n  }\n\n  ngOnChanges() {\n    this.actionsColumnTitle = this.grid.getSetting('actions.columnTitle');\n  }\n\n}\n\nActionsTitleComponent.ɵfac = function ActionsTitleComponent_Factory(t) {\n  return new (t || ActionsTitleComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nActionsTitleComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ActionsTitleComponent,\n  selectors: [[\"\", \"angular2-st-actions-title\", \"\"]],\n  inputs: {\n    grid: \"grid\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c2,\n  decls: 2,\n  vars: 1,\n  consts: [[1, \"angular2-smart-title\"]],\n  template: function ActionsTitleComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.actionsColumnTitle);\n    }\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionsTitleComponent, [{\n    type: Component,\n    args: [{\n      selector: '[angular2-st-actions-title]',\n      template: `\n    <div class=\"angular2-smart-title\">{{ actionsColumnTitle }}</div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    grid: [{\n      type: Input\n    }]\n  });\n})();\n\nclass TitleComponent {\n  constructor() {\n    this.currentDirection = '';\n    this.sort = new EventEmitter();\n    this.hide = new EventEmitter();\n  }\n\n  ngOnChanges(changes) {\n    if (changes.source) {\n      if (!changes.source.firstChange) {\n        this.dataChangedSub.unsubscribe();\n      }\n\n      this.dataChangedSub = this.source.onChanged().subscribe(dataChanges => {\n        const sortConf = this.source.getSort();\n\n        if (sortConf.length > 0 && sortConf[0]['field'] === this.column.id) {\n          this.currentDirection = sortConf[0]['direction'];\n        } else {\n          this.currentDirection = '';\n        }\n\n        sortConf.forEach(fieldConf => {});\n      });\n    }\n  }\n\n  _sort(event) {\n    event.preventDefault();\n    this.changeSortDirection();\n    this.source.setSort([{\n      field: this.column.id,\n      direction: this.currentDirection,\n      compare: this.column.getCompareFunction()\n    }]);\n    this.sort.emit(null);\n  }\n\n  _hideColumnClicked(event) {\n    event.preventDefault();\n    this.hide.emit(this.column.id);\n  }\n\n  changeSortDirection() {\n    var _a;\n\n    if (this.currentDirection) {\n      const newDirection = this.currentDirection === 'asc' ? 'desc' : 'asc';\n      this.currentDirection = newDirection;\n    } else {\n      this.currentDirection = (_a = this.column.sortDirection) !== null && _a !== void 0 ? _a : 'asc';\n    }\n\n    return this.currentDirection;\n  }\n\n}\n\nTitleComponent.ɵfac = function TitleComponent_Factory(t) {\n  return new (t || TitleComponent)();\n};\n\nTitleComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TitleComponent,\n  selectors: [[\"angular2-smart-table-title\"]],\n  inputs: {\n    column: \"column\",\n    source: \"source\",\n    isHideable: \"isHideable\"\n  },\n  outputs: {\n    sort: \"sort\",\n    hide: \"hide\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 3,\n  consts: [[\"href\", \"#\", \"class\", \"angular2-smart-sort-link sort\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [\"class\", \"angular2-smart-sort\", 4, \"ngIf\"], [\"style\", \"position: absolute; top:0; right:0; border:none\", 3, \"click\", 4, \"ngIf\"], [\"href\", \"#\", 1, \"angular2-smart-sort-link\", \"sort\", 3, \"ngClass\", \"click\"], [1, \"angular2-smart-sort\"], [2, \"position\", \"absolute\", \"top\", \"0\", \"right\", \"0\", \"border\", \"none\", 3, \"click\"]],\n  template: function TitleComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, TitleComponent_a_0_Template, 2, 2, \"a\", 0);\n      i0.ɵɵtemplate(1, TitleComponent_span_1_Template, 2, 1, \"span\", 1);\n      i0.ɵɵtemplate(2, TitleComponent_button_2_Template, 2, 0, \"button\", 2);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.column.isSortable);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.column.isSortable);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isHideable);\n    }\n  },\n  directives: [i2.NgIf, i2.NgClass],\n  styles: [\"a.sort.asc[_ngcontent-%COMP%], a.sort.desc[_ngcontent-%COMP%]{font-weight:700}a.sort.asc[_ngcontent-%COMP%]:after, a.sort.desc[_ngcontent-%COMP%]:after{content:\\\"\\\";display:inline-block;width:0;height:0;border-bottom:4px solid rgba(0,0,0,.3);border-top:4px solid transparent;border-left:4px solid transparent;border-right:4px solid transparent;margin-bottom:2px}a.sort.desc[_ngcontent-%COMP%]:after{transform:rotate(-180deg);margin-bottom:-2px}\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TitleComponent, [{\n    type: Component,\n    args: [{\n      selector: 'angular2-smart-table-title',\n      template: `\n    <a href=\"#\" *ngIf=\"column.isSortable\"\n                (click)=\"_sort($event)\"\n                class=\"angular2-smart-sort-link sort\"\n                [ngClass]=\"currentDirection\">\n      {{ column.title }}\n    </a>\n    <span class=\"angular2-smart-sort\" *ngIf=\"!column.isSortable\">{{ column.title }}</span>\n    <button style=\"position: absolute; top:0; right:0; border:none\" *ngIf=\"isHideable\" (click)=\"_hideColumnClicked($event)\">X</button>\n  `,\n      styles: [\"a.sort.asc,a.sort.desc{font-weight:700}a.sort.asc:after,a.sort.desc:after{content:\\\"\\\";display:inline-block;width:0;height:0;border-bottom:4px solid rgba(0,0,0,.3);border-top:4px solid transparent;border-left:4px solid transparent;border-right:4px solid transparent;margin-bottom:2px}a.sort.desc:after{transform:rotate(-180deg);margin-bottom:-2px}\\n\"]\n    }]\n  }], null, {\n    column: [{\n      type: Input\n    }],\n    source: [{\n      type: Input\n    }],\n    isHideable: [{\n      type: Input\n    }],\n    sort: [{\n      type: Output\n    }],\n    hide: [{\n      type: Output\n    }]\n  });\n})();\n\nclass ColumnTitleComponent {\n  constructor() {\n    this.sort = new EventEmitter();\n    this.hide = new EventEmitter();\n  }\n\n}\n\nColumnTitleComponent.ɵfac = function ColumnTitleComponent_Factory(t) {\n  return new (t || ColumnTitleComponent)();\n};\n\nColumnTitleComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ColumnTitleComponent,\n  selectors: [[\"angular2-st-column-title\"]],\n  inputs: {\n    column: \"column\",\n    source: \"source\",\n    isHideable: \"isHideable\"\n  },\n  outputs: {\n    sort: \"sort\",\n    hide: \"hide\"\n  },\n  decls: 2,\n  vars: 3,\n  consts: [[1, \"angular2-smart-title\"], [3, \"source\", \"column\", \"isHideable\", \"sort\", \"hide\"]],\n  template: function ColumnTitleComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"angular2-smart-table-title\", 1);\n      i0.ɵɵlistener(\"sort\", function ColumnTitleComponent_Template_angular2_smart_table_title_sort_1_listener($event) {\n        return ctx.sort.emit($event);\n      })(\"hide\", function ColumnTitleComponent_Template_angular2_smart_table_title_hide_1_listener($event) {\n        return ctx.hide.emit($event);\n      });\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"source\", ctx.source)(\"column\", ctx.column)(\"isHideable\", ctx.isHideable);\n    }\n  },\n  directives: [TitleComponent],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColumnTitleComponent, [{\n    type: Component,\n    args: [{\n      selector: 'angular2-st-column-title',\n      template: `\n    <div class=\"angular2-smart-title\">\n      <angular2-smart-table-title [source]=\"source\" [column]=\"column\" [isHideable]=\"isHideable\" (sort)=\"sort.emit($event)\" (hide)=\"hide.emit($event)\"></angular2-smart-table-title>\n    </div>\n  `\n    }]\n  }], null, {\n    column: [{\n      type: Input\n    }],\n    source: [{\n      type: Input\n    }],\n    isHideable: [{\n      type: Input\n    }],\n    sort: [{\n      type: Output\n    }],\n    hide: [{\n      type: Output\n    }]\n  });\n})();\n\nclass NgxResizerDirective {\n  constructor(elementRef, renderer, tableService) {\n    this.elementRef = elementRef;\n    this.renderer = renderer;\n    this.tableService = tableService;\n    this.destroyed$ = new Subject();\n  }\n\n  ngOnInit() {\n    this.tableService.mouseMoveEvent$.pipe(takeUntil(this.destroyed$), filter(() => this.isClicked)).subscribe(event => {\n      const offset = this.pointerOffset - event.pageX;\n      const width = this.parentOffset - offset;\n      this.renderer.setStyle(this.parentElement, 'width', width + 'px');\n      this.renderer.setStyle(this.siblingElement, 'width', this.siblingOffset + offset + 'px');\n    });\n  }\n\n  onMouseEnter(event) {\n    this.isClicked = true;\n    this.parentElement = this.renderer.parentNode(this.elementRef.nativeElement);\n    this.siblingElement = this.renderer.nextSibling(this.parentElement);\n    this.pointerOffset = event.pageX;\n    this.parentOffset = this.parentElement.offsetWidth;\n    this.siblingOffset = this.siblingElement.offsetWidth;\n  }\n\n  onMouseDown() {\n    this.isClicked = false;\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next(null);\n  }\n\n}\n\nNgxResizerDirective.ɵfac = function NgxResizerDirective_Factory(t) {\n  return new (t || NgxResizerDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(TableService));\n};\n\nNgxResizerDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgxResizerDirective,\n  selectors: [[\"\", \"angular2-resizer\", \"\"]],\n  hostBindings: function NgxResizerDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mousedown\", function NgxResizerDirective_mousedown_HostBindingHandler($event) {\n        return ctx.onMouseEnter($event);\n      })(\"mouseup\", function NgxResizerDirective_mouseup_HostBindingHandler() {\n        return ctx.onMouseDown();\n      }, false, i0.ɵɵresolveDocument);\n    }\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxResizerDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[angular2-resizer]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: TableService\n    }];\n  }, {\n    onMouseEnter: [{\n      type: HostListener,\n      args: ['mousedown', ['$event']]\n    }],\n    onMouseDown: [{\n      type: HostListener,\n      args: ['document:mouseup']\n    }]\n  });\n})();\n\nclass TheadTitlesRowComponent {\n  constructor() {\n    this.sort = new EventEmitter();\n    this.hide = new EventEmitter();\n    this.selectAllRows = new EventEmitter();\n    this.isHideable = false;\n  }\n\n  ngOnChanges() {\n    this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n    this.showActionColumnLeft = this.grid.showActionColumn('left');\n    this.showActionColumnRight = this.grid.showActionColumn('right');\n    this.isResizable = this.grid.getSetting('resizable');\n    this.isHideable = this.grid.getSetting('hideable');\n  }\n\n  getVisibleColumns(columns) {\n    return (columns || []).filter(column => !column.hide);\n  }\n\n}\n\nTheadTitlesRowComponent.ɵfac = function TheadTitlesRowComponent_Factory(t) {\n  return new (t || TheadTitlesRowComponent)();\n};\n\nTheadTitlesRowComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TheadTitlesRowComponent,\n  selectors: [[\"\", \"angular2-st-thead-titles-row\", \"\"]],\n  inputs: {\n    grid: \"grid\",\n    isAllSelected: \"isAllSelected\",\n    source: \"source\"\n  },\n  outputs: {\n    sort: \"sort\",\n    hide: \"hide\",\n    selectAllRows: \"selectAllRows\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c3,\n  decls: 4,\n  vars: 4,\n  consts: [[\"angular2-st-checkbox-select-all\", \"\", 3, \"grid\", \"source\", \"isAllSelected\", \"click\", 4, \"ngIf\"], [\"angular2-st-actions-title\", \"\", 3, \"grid\", 4, \"ngIf\"], [3, \"class\", \"ngClass\", \"width\", 4, \"ngFor\", \"ngForOf\"], [\"angular2-st-checkbox-select-all\", \"\", 3, \"grid\", \"source\", \"isAllSelected\", \"click\"], [\"angular2-st-actions-title\", \"\", 3, \"grid\"], [3, \"ngClass\"], [3, \"source\", \"column\", \"isHideable\", \"sort\", \"hide\"], [\"angular2-resizer\", \"\", \"class\", \"angular2-resizer-block\", 4, \"ngIf\"], [\"angular2-resizer\", \"\", 1, \"angular2-resizer-block\"]],\n  template: function TheadTitlesRowComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, TheadTitlesRowComponent_th_0_Template, 1, 3, \"th\", 0);\n      i0.ɵɵtemplate(1, TheadTitlesRowComponent_th_1_Template, 1, 1, \"th\", 1);\n      i0.ɵɵtemplate(2, TheadTitlesRowComponent_th_2_Template, 3, 10, \"th\", 2);\n      i0.ɵɵtemplate(3, TheadTitlesRowComponent_th_3_Template, 1, 1, \"th\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.isMultiSelectVisible);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnLeft);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.getVisibleColumns(ctx.grid.getColumns()));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnRight);\n    }\n  },\n  directives: [CheckboxSelectAllComponent, ActionsTitleComponent, ColumnTitleComponent, i2.NgIf, i2.NgForOf, i2.NgClass, NgxResizerDirective],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TheadTitlesRowComponent, [{\n    type: Component,\n    args: [{\n      selector: '[angular2-st-thead-titles-row]',\n      template: `\n    <th angular2-st-checkbox-select-all *ngIf=\"isMultiSelectVisible\"\n                                   [grid]=\"grid\"\n                                   [source]=\"source\"\n                                   [isAllSelected]=\"isAllSelected\"\n                                   (click)=\"selectAllRows.emit($event)\">\n    </th>\n    <th angular2-st-actions-title *ngIf=\"showActionColumnLeft\" [grid]=\"grid\"></th>\n    <th *ngFor=\"let column of getVisibleColumns(grid.getColumns())\"\n        class=\"angular2-smart-th {{ column.id }}\"\n        [ngClass]=\"column.class ?? ''\"\n        [style.width]=\"column.width\">\n      <angular2-st-column-title [source]=\"source\" [column]=\"column\" [isHideable]=\"isHideable\" (sort)=\"sort.emit($event)\" (hide)=\"hide.emit($event)\"></angular2-st-column-title>\n      <div *ngIf=\"isResizable\" angular2-resizer class=\"angular2-resizer-block\"></div>\n    </th>\n    <th angular2-st-actions-title *ngIf=\"showActionColumnRight\" [grid]=\"grid\"></th>\n  `\n    }]\n  }], null, {\n    grid: [{\n      type: Input\n    }],\n    isAllSelected: [{\n      type: Input\n    }],\n    source: [{\n      type: Input\n    }],\n    sort: [{\n      type: Output\n    }],\n    hide: [{\n      type: Output\n    }],\n    selectAllRows: [{\n      type: Output\n    }]\n  });\n})();\n\nclass AddButtonComponent {\n  constructor(ref) {\n    this.ref = ref;\n    this.create = new EventEmitter();\n  }\n\n  ngAfterViewInit() {\n    this.ref.nativeElement.classList.add('angular2-smart-actions-title', 'angular2-smart-actions-title-add');\n  }\n\n  ngOnChanges() {\n    this.isActionAdd = this.grid.getSetting('actions.add');\n    this.addNewButtonContent = this.grid.getSetting('add.addButtonContent');\n  }\n\n  onAdd(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (this.grid.getSetting('mode') === 'external') {\n      this.create.emit({\n        source: this.source\n      });\n    } else {\n      this.grid.createFormShown = true;\n    }\n  }\n\n}\n\nAddButtonComponent.ɵfac = function AddButtonComponent_Factory(t) {\n  return new (t || AddButtonComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nAddButtonComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AddButtonComponent,\n  selectors: [[\"\", \"angular2-st-add-button\", \"\"]],\n  inputs: {\n    grid: \"grid\",\n    source: \"source\"\n  },\n  outputs: {\n    create: \"create\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c4,\n  decls: 1,\n  vars: 1,\n  consts: [[\"href\", \"#\", \"class\", \"angular2-smart-action angular2-smart-action-add-add\", 3, \"innerHTML\", \"click\", 4, \"ngIf\"], [\"href\", \"#\", 1, \"angular2-smart-action\", \"angular2-smart-action-add-add\", 3, \"innerHTML\", \"click\"]],\n  template: function AddButtonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, AddButtonComponent_a_0_Template, 1, 1, \"a\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.isActionAdd);\n    }\n  },\n  directives: [i2.NgIf],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AddButtonComponent, [{\n    type: Component,\n    args: [{\n      selector: '[angular2-st-add-button]',\n      template: `\n    <a *ngIf=\"isActionAdd\" href=\"#\" class=\"angular2-smart-action angular2-smart-action-add-add\"\n        [innerHTML]=\"addNewButtonContent\" (click)=\"onAdd($event)\"></a>\n  `\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    grid: [{\n      type: Input\n    }],\n    source: [{\n      type: Input\n    }],\n    create: [{\n      type: Output\n    }]\n  });\n})();\n\nclass FilterDefault {\n  constructor() {\n    this.inputClass = '';\n    this.filter = new EventEmitter();\n    this.query = '';\n  }\n\n  onFilter(query) {\n    this.source.addFilter({\n      field: this.column.id,\n      search: query,\n      filter: this.column.getFilterFunction()\n    });\n  }\n\n}\n\nFilterDefault.ɵfac = function FilterDefault_Factory(t) {\n  return new (t || FilterDefault)();\n};\n\nFilterDefault.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: FilterDefault,\n  selectors: [[\"ng-component\"]],\n  inputs: {\n    column: \"column\",\n    source: \"source\",\n    inputClass: \"inputClass\"\n  },\n  outputs: {\n    filter: \"filter\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function FilterDefault_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterDefault, [{\n    type: Component,\n    args: [{\n      template: ''\n    }]\n  }], null, {\n    column: [{\n      type: Input\n    }],\n    source: [{\n      type: Input\n    }],\n    inputClass: [{\n      type: Input\n    }],\n    filter: [{\n      type: Output\n    }]\n  });\n})();\n\nclass CustomFilterComponent extends FilterDefault {\n  constructor(resolver) {\n    super();\n    this.resolver = resolver;\n  }\n\n  ngOnChanges(changes) {\n    if (this.column && !this.customComponent) {\n      const filter = this.column.filter;\n\n      if (!filter) {\n        return;\n      }\n\n      const componentFactory = this.resolver.resolveComponentFactory(filter.component);\n      this.customComponent = this.dynamicTarget.createComponent(componentFactory); // set @Inputs and @Outputs of custom component\n\n      this.customComponent.instance.query = this.query;\n      this.customComponent.instance.column = this.column;\n      this.customComponent.instance.source = this.source;\n      this.customComponent.instance.inputClass = this.inputClass;\n      this.customComponent.instance.filter.subscribe(event => {\n        this.onFilter(event);\n      });\n    }\n\n    if (this.customComponent) {\n      this.customComponent.instance.ngOnChanges(changes);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.customComponent) {\n      this.customComponent.destroy();\n    }\n  }\n\n}\n\nCustomFilterComponent.ɵfac = function CustomFilterComponent_Factory(t) {\n  return new (t || CustomFilterComponent)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver));\n};\n\nCustomFilterComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CustomFilterComponent,\n  selectors: [[\"custom-table-filter\"]],\n  viewQuery: function CustomFilterComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c5, 7, ViewContainerRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dynamicTarget = _t.first);\n    }\n  },\n  inputs: {\n    query: \"query\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 0,\n  consts: [[\"dynamicTarget\", \"\"]],\n  template: function CustomFilterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CustomFilterComponent_ng_template_0_Template, 0, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n    }\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CustomFilterComponent, [{\n    type: Component,\n    args: [{\n      selector: 'custom-table-filter',\n      template: `<ng-template #dynamicTarget></ng-template>`\n    }]\n  }], function () {\n    return [{\n      type: i0.ComponentFactoryResolver\n    }];\n  }, {\n    query: [{\n      type: Input\n    }],\n    dynamicTarget: [{\n      type: ViewChild,\n      args: ['dynamicTarget', {\n        read: ViewContainerRef,\n        static: true\n      }]\n    }]\n  });\n})();\n\nclass DefaultFilter {\n  constructor() {\n    this.delay = 300;\n    this.filter = new EventEmitter();\n  }\n\n  ngOnDestroy() {\n    if (this.changesSubscription) {\n      this.changesSubscription.unsubscribe();\n    }\n\n    if (this.changesSubscription2) {\n      this.changesSubscription2.unsubscribe();\n    }\n  }\n\n  setFilter() {\n    this.filter.emit(this.query);\n  }\n\n}\n\nDefaultFilter.ɵfac = function DefaultFilter_Factory(t) {\n  return new (t || DefaultFilter)();\n};\n\nDefaultFilter.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DefaultFilter,\n  selectors: [[\"ng-component\"]],\n  inputs: {\n    query: \"query\",\n    inputClass: \"inputClass\",\n    column: \"column\"\n  },\n  outputs: {\n    filter: \"filter\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function DefaultFilter_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultFilter, [{\n    type: Component,\n    args: [{\n      template: ''\n    }]\n  }], null, {\n    query: [{\n      type: Input\n    }],\n    inputClass: [{\n      type: Input\n    }],\n    column: [{\n      type: Input\n    }],\n    filter: [{\n      type: Output\n    }]\n  });\n})();\n\nclass SelectFilterComponent extends DefaultFilter {\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    const exist = this.inputControl.valueChanges;\n\n    if (!exist) {\n      return;\n    }\n\n    exist.pipe(skip(1), distinctUntilChanged(), debounceTime(this.delay)).subscribe(value => this.setFilter());\n  }\n\n}\n\nSelectFilterComponent.ɵfac = function SelectFilterComponent_Factory(t) {\n  return new (t || SelectFilterComponent)();\n};\n\nSelectFilterComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SelectFilterComponent,\n  selectors: [[\"select-filter\"]],\n  viewQuery: function SelectFilterComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c6, 7, NgControl);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputControl = _t.first);\n    }\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 5,\n  vars: 4,\n  consts: [[1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"ngModelChange\"], [\"inputControl\", \"\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n  template: function SelectFilterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"select\", 0, 1);\n      i0.ɵɵlistener(\"ngModelChange\", function SelectFilterComponent_Template_select_ngModelChange_0_listener($event) {\n        return ctx.query = $event;\n      });\n      i0.ɵɵelementStart(2, \"option\", 2);\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, SelectFilterComponent_option_4_Template, 2, 2, \"option\", 3);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.query);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.column.getFilterConfig().selectText);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.column.getFilterConfig().list);\n    }\n  },\n  directives: [i1.SelectControlValueAccessor, i2.NgClass, i1.NgControlStatus, i1.NgModel, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i2.NgForOf],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SelectFilterComponent, [{\n    type: Component,\n    args: [{\n      selector: 'select-filter',\n      template: `\n    <select [ngClass]=\"inputClass\"\n            class=\"form-control\"\n            #inputControl\n            [(ngModel)]=\"query\">\n\n        <option value=\"\">{{ column.getFilterConfig().selectText }}</option>\n        <option *ngFor=\"let option of column.getFilterConfig().list\" [value]=\"option.value\">\n          {{ option.title }}\n        </option>\n    </select>\n  `\n    }]\n  }], function () {\n    return [];\n  }, {\n    inputControl: [{\n      type: ViewChild,\n      args: ['inputControl', {\n        read: NgControl,\n        static: true\n      }]\n    }]\n  });\n})();\n\nclass CheckboxFilterComponent extends DefaultFilter {\n  constructor() {\n    super();\n    this.filterActive = false;\n    this.inputControl = new FormControl();\n  }\n\n  ngOnInit() {\n    this.changesSubscription = this.inputControl.valueChanges.pipe(debounceTime(this.delay)).subscribe(checked => {\n      this.filterActive = true;\n      const trueVal = this.column.getFilterConfig() && this.column.getFilterConfig().true || true;\n      const falseVal = this.column.getFilterConfig() && this.column.getFilterConfig().false || false;\n      this.query = checked ? trueVal : falseVal;\n      this.setFilter();\n    });\n  }\n\n  resetFilter(event) {\n    event.preventDefault();\n    this.query = '';\n    this.inputControl.setValue(false, {\n      emitEvent: false\n    });\n    this.filterActive = false;\n    this.setFilter();\n  }\n\n}\n\nCheckboxFilterComponent.ɵfac = function CheckboxFilterComponent_Factory(t) {\n  return new (t || CheckboxFilterComponent)();\n};\n\nCheckboxFilterComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CheckboxFilterComponent,\n  selectors: [[\"checkbox-filter\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 3,\n  consts: [[\"type\", \"checkbox\", 1, \"form-control\", 3, \"formControl\", \"ngClass\"], [\"href\", \"#\", 3, \"click\", 4, \"ngIf\"], [\"href\", \"#\", 3, \"click\"]],\n  template: function CheckboxFilterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"input\", 0);\n      i0.ɵɵtemplate(1, CheckboxFilterComponent_a_1_Template, 2, 1, \"a\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formControl\", ctx.inputControl)(\"ngClass\", ctx.inputClass);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.filterActive);\n    }\n  },\n  directives: [i1.CheckboxControlValueAccessor, i1.NgControlStatus, i1.FormControlDirective, i2.NgClass, i2.NgIf],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckboxFilterComponent, [{\n    type: Component,\n    args: [{\n      selector: 'checkbox-filter',\n      template: `\n    <input type=\"checkbox\" [formControl]=\"inputControl\" [ngClass]=\"inputClass\" class=\"form-control\">\n    <a href=\"#\" *ngIf=\"filterActive\"\n                (click)=\"resetFilter($event)\">{{column.getFilterConfig()?.resetText || 'reset'}}</a>\n  `\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nclass CompleterFilterComponent extends DefaultFilter {\n  constructor(completerService) {\n    super();\n    this.completerService = completerService;\n    this.completerContent = new Subject();\n  }\n\n  ngOnInit() {\n    const config = this.column.getFilterConfig().completer;\n    config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\n    config.dataService.descriptionField(config.descriptionField);\n    this.changesSubscription = this.completerContent.pipe(map(ev => ev && ev.title || ev || ''), distinctUntilChanged(), debounceTime(this.delay)).subscribe(search => {\n      this.query = search;\n      this.setFilter();\n    });\n  }\n\n  inputTextChanged(event) {\n    // workaround to trigger the search event when the home/end buttons are clicked\n    // when this happens the [(ngModel)]=\"query\" is set to \"\" but the (selected) method is not called\n    // so here it gets called manually\n    if (event === '') {\n      this.completerContent.next(event);\n    }\n  }\n\n}\n\nCompleterFilterComponent.ɵfac = function CompleterFilterComponent_Factory(t) {\n  return new (t || CompleterFilterComponent)(i0.ɵɵdirectiveInject(i1$1.CompleterService));\n};\n\nCompleterFilterComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CompleterFilterComponent,\n  selectors: [[\"completer-filter\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 5,\n  consts: [[3, \"ngModel\", \"dataService\", \"minSearchLength\", \"pause\", \"placeholder\", \"ngModelChange\", \"selected\"]],\n  template: function CompleterFilterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ng2-completer\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function CompleterFilterComponent_Template_ng2_completer_ngModelChange_0_listener($event) {\n        return ctx.query = $event;\n      })(\"ngModelChange\", function CompleterFilterComponent_Template_ng2_completer_ngModelChange_0_listener($event) {\n        return ctx.inputTextChanged($event);\n      })(\"selected\", function CompleterFilterComponent_Template_ng2_completer_selected_0_listener($event) {\n        return ctx.completerContent.next($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngModel\", ctx.query)(\"dataService\", ctx.column.getFilterConfig().completer.dataService)(\"minSearchLength\", ctx.column.getFilterConfig().completer.minSearchLength || 0)(\"pause\", ctx.column.getFilterConfig().completer.pause || 0)(\"placeholder\", ctx.column.getFilterConfig().completer.placeholder || \"Start typing...\");\n    }\n  },\n  directives: [i1$1.CompleterCmp, i1.NgControlStatus, i1.NgModel],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CompleterFilterComponent, [{\n    type: Component,\n    args: [{\n      selector: 'completer-filter',\n      template: `\n    <ng2-completer [(ngModel)]=\"query\"\n                   (ngModelChange)=\"inputTextChanged($event)\"\n                   [dataService]=\"column.getFilterConfig().completer.dataService\"\n                   [minSearchLength]=\"column.getFilterConfig().completer.minSearchLength || 0\"\n                   [pause]=\"column.getFilterConfig().completer.pause || 0\"\n                   [placeholder]=\"column.getFilterConfig().completer.placeholder || 'Start typing...'\"\n                   (selected)=\"completerContent.next($event)\">\n    </ng2-completer>\n  `\n    }]\n  }], function () {\n    return [{\n      type: i1$1.CompleterService\n    }];\n  }, null);\n})();\n\nclass DateFilterComponent extends DefaultFilter {\n  constructor() {\n    super();\n    this.startDate = new FormControl();\n    this.endDate = new FormControl();\n    this.dateBefore = new FormControl();\n    this.dateAfter = new FormControl();\n    this.dateEqual = new FormControl();\n    this.filterTypeSelect = new FormControl();\n    this.filterType = 'after';\n    this.filterOptions = ['before', 'after', 'equal', 'between'];\n  }\n\n  ngOnInit() {\n    this.changesSubscription2 = this.filterTypeSelect.valueChanges.subscribe(value => {\n      this.filterType = value;\n\n      if (this.changesSubscription) {\n        this.changesSubscription.unsubscribe();\n      }\n\n      this.changesSubscription = this.getFilterType().subscribe(value => {\n        this.query = value;\n        this.setFilter();\n      });\n    });\n  }\n\n  getFilterType() {\n    switch (this.filterType) {\n      case 'before':\n        {\n          return this.dateBefore.valueChanges.pipe(map(value => '_date_before_' + value));\n        }\n\n      case 'after':\n        {\n          return this.dateAfter.valueChanges.pipe(map(value => '_date_after_' + value));\n        }\n\n      case 'equal':\n        {\n          return this.dateEqual.valueChanges.pipe(map(value => '_date_equal_' + value));\n        }\n\n      case 'between':\n        {\n          return combineLatest([this.startDate.valueChanges, this.endDate.valueChanges]).pipe(map(([val1, val2]) => {\n            return '_start_date_' + val1 + '_end_date_' + val2;\n          }));\n        }\n\n      default:\n        return of('');\n    }\n  }\n\n}\n\nDateFilterComponent.ɵfac = function DateFilterComponent_Factory(t) {\n  return new (t || DateFilterComponent)();\n};\n\nDateFilterComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DateFilterComponent,\n  selectors: [[\"date-filter\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 8,\n  vars: 8,\n  consts: [[3, \"formControl\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngSwitch\"], [\"type\", \"date\", \"class\", \"form-control\", 3, \"formControl\", \"ngClass\", 4, \"ngSwitchCase\"], [3, \"value\"], [\"type\", \"date\", 1, \"form-control\", 3, \"formControl\", \"ngClass\"]],\n  template: function DateFilterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"select\", 0);\n      i0.ɵɵtemplate(1, DateFilterComponent_option_1_Template, 2, 2, \"option\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵtemplate(3, DateFilterComponent_input_3_Template, 1, 2, \"input\", 3);\n      i0.ɵɵtemplate(4, DateFilterComponent_input_4_Template, 1, 2, \"input\", 3);\n      i0.ɵɵtemplate(5, DateFilterComponent_input_5_Template, 1, 2, \"input\", 3);\n      i0.ɵɵtemplate(6, DateFilterComponent_input_6_Template, 1, 2, \"input\", 3);\n      i0.ɵɵtemplate(7, DateFilterComponent_input_7_Template, 1, 2, \"input\", 3);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formControl\", ctx.filterTypeSelect);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.filterOptions);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitch\", ctx.filterType);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"before\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"after\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"equal\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"between\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"between\");\n    }\n  },\n  directives: [i1.SelectControlValueAccessor, i1.NgControlStatus, i1.FormControlDirective, i2.NgForOf, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i2.NgSwitch, i2.NgSwitchCase, i1.DefaultValueAccessor, i2.NgClass],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DateFilterComponent, [{\n    type: Component,\n    args: [{\n      selector: 'date-filter',\n      template: `\n    <select [formControl]=\"filterTypeSelect\">\n      <option [value]=\"option\" *ngFor=\"let  option of filterOptions\">{{option}}</option>\n    </select>\n    <div [ngSwitch]=\"filterType\">\n     <input *ngSwitchCase=\"'before'\" type=\"date\" [formControl]=\"dateBefore\" [ngClass]=\"inputClass\" class=\"form-control\">\n     <input *ngSwitchCase=\"'after'\" type=\"date\" [formControl]=\"dateAfter\" [ngClass]=\"inputClass\" class=\"form-control\">\n     <input *ngSwitchCase=\"'equal'\" type=\"date\" [formControl]=\"dateEqual\" [ngClass]=\"inputClass\" class=\"form-control\">\n     <input *ngSwitchCase=\"'between'\" type=\"date\" [formControl]=\"startDate\" [ngClass]=\"inputClass\" class=\"form-control\">\n     <input *ngSwitchCase=\"'between'\" type=\"date\" [formControl]=\"endDate\" [ngClass]=\"inputClass\" class=\"form-control\">\n    </div>\n  `\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nclass MselectFilterComponent extends DefaultFilter {\n  constructor(http) {\n    super();\n    this.http = http;\n    this.selector = \"*;*\";\n    this.dropdownList = [];\n    this.selectedItems = [];\n    this.dropdownSettings = {};\n  }\n\n  ngOnInit() {\n    this.column.filterFunction = this.onfilterValues.bind(this);\n    const config = this.column.getFilterConfig();\n    this.dropdownList = config.dropdownList || [];\n    this.selectedItems = config.selectedItems || [];\n    let setting = {\n      singleSelection: false,\n      text: \"Select\",\n      selectAllText: \"Select All\",\n      unSelectAllText: 'UnSelect All',\n      enableSearchFilter: true,\n      classes: \"myclass\",\n      maxHeight: 200,\n      position: 'top',\n      autoPosition: true\n    };\n    this.dropdownSettings = Object.assign(setting, config.dropdownSettings);\n  }\n\n  onfilterValues(cellValue, search, data, cellName) {\n    if (search.indexOf(this.selector) != -1) {\n      let searchArray = search.split(this.selector);\n      return searchArray.indexOf(cellValue) != -1;\n    }\n\n    return defaultStringInclusionFilter(cellValue, search, data, cellName);\n  }\n\n  onItemSelect(item) {\n    this.updateQuery();\n  }\n\n  OnItemDeSelect(item) {\n    this.updateQuery();\n  }\n\n  onSelectAll(items) {\n    this.updateQuery();\n  }\n\n  onDeSelectAll(items) {\n    this.updateQuery();\n  }\n\n  updateQuery() {\n    this.query = this.selectedItems.map(item => item.id).join(this.selector); //.replace(/ /g, '')\n\n    this.setFilter();\n  }\n\n}\n\nMselectFilterComponent.ɵfac = function MselectFilterComponent_Factory(t) {\n  return new (t || MselectFilterComponent)(i0.ɵɵdirectiveInject(i1$2.HttpClient));\n};\n\nMselectFilterComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MselectFilterComponent,\n  selectors: [[\"mselect-filter\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 3,\n  consts: [[3, \"data\", \"ngModel\", \"settings\", \"ngModelChange\", \"onSelect\", \"onDeSelect\", \"onSelectAll\", \"onDeSelectAll\"]],\n  template: function MselectFilterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"angular2-multiselect\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function MselectFilterComponent_Template_angular2_multiselect_ngModelChange_0_listener($event) {\n        return ctx.selectedItems = $event;\n      })(\"onSelect\", function MselectFilterComponent_Template_angular2_multiselect_onSelect_0_listener($event) {\n        return ctx.onItemSelect($event);\n      })(\"onDeSelect\", function MselectFilterComponent_Template_angular2_multiselect_onDeSelect_0_listener($event) {\n        return ctx.OnItemDeSelect($event);\n      })(\"onSelectAll\", function MselectFilterComponent_Template_angular2_multiselect_onSelectAll_0_listener($event) {\n        return ctx.onSelectAll($event);\n      })(\"onDeSelectAll\", function MselectFilterComponent_Template_angular2_multiselect_onDeSelectAll_0_listener($event) {\n        return ctx.onDeSelectAll($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"data\", ctx.dropdownList)(\"ngModel\", ctx.selectedItems)(\"settings\", ctx.dropdownSettings);\n    }\n  },\n  directives: [i2$1.AngularMultiSelect, i1.NgControlStatus, i1.NgModel],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MselectFilterComponent, [{\n    type: Component,\n    args: [{\n      selector: 'mselect-filter',\n      template: `<angular2-multiselect [data]=\"dropdownList\"\n    [(ngModel)]=\"selectedItems\"\n    [settings]=\"dropdownSettings\"\n    (onSelect)=\"onItemSelect($event)\"\n    (onDeSelect)=\"OnItemDeSelect($event)\"\n    (onSelectAll)=\"onSelectAll($event)\"\n    (onDeSelectAll)=\"onDeSelectAll($event)\">\n    </angular2-multiselect>`\n    }]\n  }], function () {\n    return [{\n      type: i1$2.HttpClient\n    }];\n  }, null);\n})();\n\nclass InputFilterComponent extends DefaultFilter {\n  constructor() {\n    super();\n    this.inputControl = new FormControl();\n  }\n\n  ngOnInit() {\n    if (this.query) {\n      this.inputControl.setValue(this.query);\n    }\n\n    this.inputControl.valueChanges.pipe(distinctUntilChanged(), debounceTime(this.delay)).subscribe(value => {\n      this.query = this.inputControl.value;\n      this.setFilter();\n    });\n  }\n\n  ngOnChanges(changes) {\n    if (changes.query) {\n      this.inputControl.setValue(this.query);\n    }\n  }\n\n}\n\nInputFilterComponent.ɵfac = function InputFilterComponent_Factory(t) {\n  return new (t || InputFilterComponent)();\n};\n\nInputFilterComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: InputFilterComponent,\n  selectors: [[\"input-filter\"]],\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 3,\n  consts: [[\"type\", \"text\", 1, \"form-control\", 3, \"ngClass\", \"formControl\", \"placeholder\"]],\n  template: function InputFilterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"input\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.column.placeholder || ctx.column.title);\n      i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"formControl\", ctx.inputControl);\n    }\n  },\n  directives: [i1.DefaultValueAccessor, i2.NgClass, i1.NgControlStatus, i1.FormControlDirective],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InputFilterComponent, [{\n    type: Component,\n    args: [{\n      selector: 'input-filter',\n      template: `\n    <input\n      [ngClass]=\"inputClass\"\n      [formControl]=\"inputControl\"\n      class=\"form-control\"\n      type=\"text\"\n      placeholder=\"{{ column.placeholder || column.title }}\"/>\n  `\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nclass DefaultFilterComponent extends FilterDefault {}\n\nDefaultFilterComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵDefaultFilterComponent_BaseFactory;\n  return function DefaultFilterComponent_Factory(t) {\n    return (ɵDefaultFilterComponent_BaseFactory || (ɵDefaultFilterComponent_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultFilterComponent)))(t || DefaultFilterComponent);\n  };\n}();\n\nDefaultFilterComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DefaultFilterComponent,\n  selectors: [[\"default-table-filter\"]],\n  inputs: {\n    query: \"query\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 7,\n  vars: 6,\n  consts: [[3, \"ngSwitch\"], [3, \"query\", \"ngClass\", \"column\", \"filter\", 4, \"ngSwitchCase\"], [3, \"query\", \"ngClass\", \"column\", \"filter\", 4, \"ngSwitchDefault\"], [3, \"query\", \"ngClass\", \"column\", \"filter\"]],\n  template: function DefaultFilterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementContainerStart(0, 0);\n      i0.ɵɵtemplate(1, DefaultFilterComponent_select_filter_1_Template, 1, 3, \"select-filter\", 1);\n      i0.ɵɵtemplate(2, DefaultFilterComponent_checkbox_filter_2_Template, 1, 3, \"checkbox-filter\", 1);\n      i0.ɵɵtemplate(3, DefaultFilterComponent_completer_filter_3_Template, 1, 3, \"completer-filter\", 1);\n      i0.ɵɵtemplate(4, DefaultFilterComponent_date_filter_4_Template, 1, 3, \"date-filter\", 1);\n      i0.ɵɵtemplate(5, DefaultFilterComponent_mselect_filter_5_Template, 1, 3, \"mselect-filter\", 1);\n      i0.ɵɵtemplate(6, DefaultFilterComponent_input_filter_6_Template, 1, 3, \"input-filter\", 2);\n      i0.ɵɵelementContainerEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngSwitch\", ctx.column.getFilterType());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"list\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"checkbox\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"completer\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"date\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"multiple\");\n    }\n  },\n  directives: [SelectFilterComponent, CheckboxFilterComponent, CompleterFilterComponent, DateFilterComponent, MselectFilterComponent, InputFilterComponent, i2.NgSwitch, i2.NgSwitchCase, i2.NgClass, i2.NgSwitchDefault],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultFilterComponent, [{\n    type: Component,\n    args: [{\n      selector: 'default-table-filter',\n      template: `\n    <ng-container [ngSwitch]=\"column.getFilterType()\">\n      <select-filter *ngSwitchCase=\"'list'\"\n                     [query]=\"query\"\n                     [ngClass]=\"inputClass\"\n                     [column]=\"column\"\n                     (filter)=\"onFilter($event)\">\n      </select-filter>\n      <checkbox-filter *ngSwitchCase=\"'checkbox'\"\n                       [query]=\"query\"\n                       [ngClass]=\"inputClass\"\n                       [column]=\"column\"\n                       (filter)=\"onFilter($event)\">\n      </checkbox-filter>\n      <completer-filter *ngSwitchCase=\"'completer'\"\n                        [query]=\"query\"\n                        [ngClass]=\"inputClass\"\n                        [column]=\"column\"\n                        (filter)=\"onFilter($event)\">\n      </completer-filter>\n      <date-filter *ngSwitchCase=\"'date'\"\n                        [query]=\"query\"\n                        [ngClass]=\"inputClass\"\n                        [column]=\"column\"\n                        (filter)=\"onFilter($event)\">\n      </date-filter>\n      <mselect-filter *ngSwitchCase=\"'multiple'\"\n                        [query]=\"query\"\n                        [ngClass]=\"inputClass\"\n                        [column]=\"column\"\n                        (filter)=\"onFilter($event)\">\n      </mselect-filter>\n      <input-filter *ngSwitchDefault\n                    [query]=\"query\"\n                    [ngClass]=\"inputClass\"\n                    [column]=\"column\"\n                    (filter)=\"onFilter($event)\">\n      </input-filter>\n    </ng-container>\n  `\n    }]\n  }], null, {\n    query: [{\n      type: Input\n    }]\n  });\n})();\n\nclass FilterComponent extends FilterDefault {\n  constructor() {\n    super(...arguments);\n    this.query = '';\n  }\n\n  ngOnChanges(changes) {\n    if (changes.source) {\n      if (!changes.source.firstChange) {\n        this.dataChangedSub.unsubscribe();\n      }\n\n      this.dataChangedSub = this.source.onChanged().subscribe(dataChanges => {\n        const filterConf = this.source.getFilter();\n\n        if (filterConf && filterConf.filters && filterConf.filters.length === 0) {\n          this.query = ''; // add a check for existing filters an set the query if one exists for this column\n          // this covers instances where the filter is set by user code while maintaining existing functionality\n        } else if (filterConf && filterConf.filters && filterConf.filters.length > 0) {\n          filterConf.filters.forEach((k, v) => {\n            if (k.field == this.column.id) {\n              this.query = k.search;\n            }\n          });\n        }\n      });\n    }\n  }\n\n}\n\nFilterComponent.ɵfac = /* @__PURE__ */function () {\n  let ɵFilterComponent_BaseFactory;\n  return function FilterComponent_Factory(t) {\n    return (ɵFilterComponent_BaseFactory || (ɵFilterComponent_BaseFactory = i0.ɵɵgetInheritedFactory(FilterComponent)))(t || FilterComponent);\n  };\n}();\n\nFilterComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: FilterComponent,\n  selectors: [[\"angular2-smart-table-filter\"]],\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"angular2-smart-filter\", 3, \"ngSwitch\", 4, \"ngIf\"], [1, \"angular2-smart-filter\", 3, \"ngSwitch\"], [3, \"query\", \"column\", \"source\", \"inputClass\", \"filter\", 4, \"ngSwitchCase\"], [3, \"query\", \"column\", \"source\", \"inputClass\", \"filter\", 4, \"ngSwitchDefault\"], [3, \"query\", \"column\", \"source\", \"inputClass\", \"filter\"]],\n  template: function FilterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, FilterComponent_div_0_Template, 3, 2, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.column.isFilterable);\n    }\n  },\n  directives: [CustomFilterComponent, DefaultFilterComponent, i2.NgIf, i2.NgSwitch, i2.NgSwitchCase, i2.NgSwitchDefault],\n  styles: [\"[_nghost-%COMP%]   .angular2-smart-filter[_ngcontent-%COMP%]     input, [_nghost-%COMP%]   .angular2-smart-filter[_ngcontent-%COMP%]     select{width:100%;line-height:normal;padding:.375em .75em;font-weight:400}[_nghost-%COMP%]   .angular2-smart-filter[_ngcontent-%COMP%]     input[type=search]{box-sizing:inherit}[_nghost-%COMP%]   .angular2-smart-filter[_ngcontent-%COMP%]     .completer-dropdown-holder{font-weight:400}[_nghost-%COMP%]   .angular2-smart-filter[_ngcontent-%COMP%]     a{font-weight:400}\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterComponent, [{\n    type: Component,\n    args: [{\n      selector: 'angular2-smart-table-filter',\n      template: `\n      <div class=\"angular2-smart-filter\" *ngIf=\"column.isFilterable\" [ngSwitch]=\"column.getFilterType()\">\n        <custom-table-filter *ngSwitchCase=\"'custom'\"\n                             [query]=\"query\"\n                             [column]=\"column\"\n                             [source]=\"source\"\n                             [inputClass]=\"inputClass\"\n                             (filter)=\"onFilter($event)\">\n        </custom-table-filter>\n        <default-table-filter *ngSwitchDefault\n                              [query]=\"query\"\n                              [column]=\"column\"\n                              [source]=\"source\"\n                              [inputClass]=\"inputClass\"\n                              (filter)=\"onFilter($event)\">\n        </default-table-filter>\n      </div>\n    `,\n      styles: [\":host .angular2-smart-filter ::ng-deep input,:host .angular2-smart-filter ::ng-deep select{width:100%;line-height:normal;padding:.375em .75em;font-weight:400}:host .angular2-smart-filter ::ng-deep input[type=search]{box-sizing:inherit}:host .angular2-smart-filter ::ng-deep .completer-dropdown-holder{font-weight:400}:host .angular2-smart-filter ::ng-deep a{font-weight:400}\\n\"]\n    }]\n  }], null, null);\n})();\n\nclass TheadFitlersRowComponent {\n  constructor() {\n    this.create = new EventEmitter();\n    this.filter = new EventEmitter();\n  }\n\n  ngOnChanges() {\n    this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n    this.showActionColumnLeft = this.grid.showActionColumn('left');\n    this.showActionColumnRight = this.grid.showActionColumn('right');\n    this.filterInputClass = this.grid.getSetting('filter.inputClass');\n  }\n\n  getVisibleColumns(columns) {\n    return (columns || []).filter(column => !column.hide);\n  }\n\n}\n\nTheadFitlersRowComponent.ɵfac = function TheadFitlersRowComponent_Factory(t) {\n  return new (t || TheadFitlersRowComponent)();\n};\n\nTheadFitlersRowComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TheadFitlersRowComponent,\n  selectors: [[\"\", \"angular2-st-thead-filters-row\", \"\"]],\n  inputs: {\n    grid: \"grid\",\n    source: \"source\"\n  },\n  outputs: {\n    create: \"create\",\n    filter: \"filter\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c7,\n  decls: 4,\n  vars: 4,\n  consts: [[4, \"ngIf\"], [\"angular2-st-add-button\", \"\", 3, \"grid\", \"create\", 4, \"ngIf\"], [3, \"class\", 4, \"ngFor\", \"ngForOf\"], [\"angular2-st-add-button\", \"\", 3, \"grid\", \"source\", \"create\", 4, \"ngIf\"], [\"angular2-st-add-button\", \"\", 3, \"grid\", \"create\"], [3, \"source\", \"column\", \"inputClass\", \"filter\"], [\"angular2-st-add-button\", \"\", 3, \"grid\", \"source\", \"create\"]],\n  template: function TheadFitlersRowComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, TheadFitlersRowComponent_th_0_Template, 1, 0, \"th\", 0);\n      i0.ɵɵtemplate(1, TheadFitlersRowComponent_th_1_Template, 1, 1, \"th\", 1);\n      i0.ɵɵtemplate(2, TheadFitlersRowComponent_th_2_Template, 2, 6, \"th\", 2);\n      i0.ɵɵtemplate(3, TheadFitlersRowComponent_th_3_Template, 1, 2, \"th\", 3);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.isMultiSelectVisible);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnLeft);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.getVisibleColumns(ctx.grid.getColumns()));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnRight);\n    }\n  },\n  directives: [AddButtonComponent, FilterComponent, i2.NgIf, i2.NgForOf],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TheadFitlersRowComponent, [{\n    type: Component,\n    args: [{\n      selector: '[angular2-st-thead-filters-row]',\n      template: `\n    <th *ngIf=\"isMultiSelectVisible\"></th>\n    <th angular2-st-add-button *ngIf=\"showActionColumnLeft\"\n                          [grid]=\"grid\"\n                          (create)=\"create.emit($event)\">\n    </th>\n    <th *ngFor=\"let column of getVisibleColumns(grid.getColumns())\" class=\"angular2-smart-th {{ column.id }}\">\n      <angular2-smart-table-filter [source]=\"source\"\n                              [column]=\"column\"\n                              [inputClass]=\"filterInputClass\"\n                              (filter)=\"filter.emit($event)\">\n      </angular2-smart-table-filter>\n    </th>\n    <th angular2-st-add-button *ngIf=\"showActionColumnRight\"\n                          [grid]=\"grid\"\n                          [source]=\"source\"\n                          (create)=\"create.emit($event)\">\n    </th>\n  `\n    }]\n  }], null, {\n    grid: [{\n      type: Input\n    }],\n    source: [{\n      type: Input\n    }],\n    create: [{\n      type: Output\n    }],\n    filter: [{\n      type: Output\n    }]\n  });\n})();\n\nclass ActionsComponent {\n  constructor() {\n    this.create = new EventEmitter();\n  }\n\n  ngOnChanges() {\n    this.createButtonContent = this.grid.getSetting('add.createButtonContent');\n    this.cancelButtonContent = this.grid.getSetting('add.cancelButtonContent');\n  }\n\n}\n\nActionsComponent.ɵfac = function ActionsComponent_Factory(t) {\n  return new (t || ActionsComponent)();\n};\n\nActionsComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ActionsComponent,\n  selectors: [[\"angular2-st-actions\"]],\n  inputs: {\n    grid: \"grid\"\n  },\n  outputs: {\n    create: \"create\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 2,\n  consts: [[\"href\", \"#\", 1, \"angular2-smart-action\", \"angular2-smart-action-add-create\", 3, \"innerHTML\", \"click\"], [\"href\", \"#\", 1, \"angular2-smart-action\", \"angular2-smart-action-add-cancel\", 3, \"innerHTML\", \"click\"]],\n  template: function ActionsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"a\", 0);\n      i0.ɵɵlistener(\"click\", function ActionsComponent_Template_a_click_0_listener($event) {\n        $event.preventDefault();\n        return ctx.create.emit($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1, \"a\", 1);\n      i0.ɵɵlistener(\"click\", function ActionsComponent_Template_a_click_1_listener($event) {\n        $event.preventDefault();\n        return ctx.grid.createFormShown = false;\n      });\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"innerHTML\", ctx.createButtonContent, i0.ɵɵsanitizeHtml);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"innerHTML\", ctx.cancelButtonContent, i0.ɵɵsanitizeHtml);\n    }\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionsComponent, [{\n    type: Component,\n    args: [{\n      selector: 'angular2-st-actions',\n      template: `\n    <a href=\"#\" class=\"angular2-smart-action angular2-smart-action-add-create\"\n        [innerHTML]=\"createButtonContent\"\n        (click)=\"$event.preventDefault();create.emit($event)\"></a>\n    <a href=\"#\" class=\"angular2-smart-action angular2-smart-action-add-cancel\"\n        [innerHTML]=\"cancelButtonContent\"\n        (click)=\"$event.preventDefault();grid.createFormShown = false;\"></a>\n  `\n    }]\n  }], null, {\n    grid: [{\n      type: Input\n    }],\n    create: [{\n      type: Output\n    }]\n  });\n})();\n\nclass CustomViewComponent {\n  constructor(resolver) {\n    this.resolver = resolver;\n  }\n\n  ngOnInit() {\n    if (this.cell && !this.customComponent) {\n      this.createCustomComponent();\n      this.callOnComponentInit();\n      this.patchInstance();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.customComponent) {\n      this.customComponent.destroy();\n    }\n  }\n\n  createCustomComponent() {\n    const componentFactory = this.resolver.resolveComponentFactory(this.cell.getColumn().renderComponent);\n    this.customComponent = this.dynamicTarget.createComponent(componentFactory);\n  }\n\n  callOnComponentInit() {\n    const onComponentInitFunction = this.cell.getColumn().getOnComponentInitFunction();\n    onComponentInitFunction && onComponentInitFunction(this.customComponent.instance, this.getPatch());\n  }\n\n  patchInstance() {\n    Object.assign(this.customComponent.instance, this.getPatch());\n  }\n\n  getPatch() {\n    return {\n      value: this.cell.getValue(),\n      rowData: this.cell.getRow().getData()\n    };\n  }\n\n}\n\nCustomViewComponent.ɵfac = function CustomViewComponent_Factory(t) {\n  return new (t || CustomViewComponent)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver));\n};\n\nCustomViewComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CustomViewComponent,\n  selectors: [[\"custom-view-component\"]],\n  viewQuery: function CustomViewComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c5, 7, ViewContainerRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dynamicTarget = _t.first);\n    }\n  },\n  inputs: {\n    cell: \"cell\"\n  },\n  decls: 2,\n  vars: 0,\n  consts: [[\"dynamicTarget\", \"\"]],\n  template: function CustomViewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CustomViewComponent_ng_template_0_Template, 0, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n    }\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CustomViewComponent, [{\n    type: Component,\n    args: [{\n      selector: 'custom-view-component',\n      template: `\n    <ng-template #dynamicTarget></ng-template>\n  `\n    }]\n  }], function () {\n    return [{\n      type: i0.ComponentFactoryResolver\n    }];\n  }, {\n    cell: [{\n      type: Input\n    }],\n    dynamicTarget: [{\n      type: ViewChild,\n      args: ['dynamicTarget', {\n        read: ViewContainerRef,\n        static: true\n      }]\n    }]\n  });\n})();\n\nclass ViewCellComponent {}\n\nViewCellComponent.ɵfac = function ViewCellComponent_Factory(t) {\n  return new (t || ViewCellComponent)();\n};\n\nViewCellComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ViewCellComponent,\n  selectors: [[\"table-cell-view-mode\"]],\n  inputs: {\n    cell: \"cell\"\n  },\n  decls: 4,\n  vars: 3,\n  consts: [[3, \"ngSwitch\"], [3, \"cell\", 4, \"ngSwitchCase\"], [3, \"innerHTML\", 4, \"ngSwitchCase\"], [4, \"ngSwitchDefault\"], [3, \"cell\"], [3, \"innerHTML\"]],\n  template: function ViewCellComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, ViewCellComponent_custom_view_component_1_Template, 1, 1, \"custom-view-component\", 1);\n      i0.ɵɵtemplate(2, ViewCellComponent_div_2_Template, 1, 1, \"div\", 2);\n      i0.ɵɵtemplate(3, ViewCellComponent_div_3_Template, 2, 1, \"div\", 3);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngSwitch\", ctx.cell.getColumn().type);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"custom\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"html\");\n    }\n  },\n  directives: [CustomViewComponent, i2.NgSwitch, i2.NgSwitchCase, i2.NgSwitchDefault],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ViewCellComponent, [{\n    type: Component,\n    args: [{\n      selector: 'table-cell-view-mode',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: `\n    <div [ngSwitch]=\"cell.getColumn().type\">\n        <custom-view-component *ngSwitchCase=\"'custom'\" [cell]=\"cell\"></custom-view-component>\n        <div *ngSwitchCase=\"'html'\" [innerHTML]=\"cell.getValue()\"></div>\n        <div *ngSwitchDefault>{{ cell.getValue() }}</div>\n    </div>\n    `\n    }]\n  }], null, {\n    cell: [{\n      type: Input\n    }]\n  });\n})();\n\nclass EditCellDefault {\n  constructor() {\n    this.inputClass = '';\n    this.edited = new EventEmitter();\n  }\n\n  onEdited(event) {\n    this.edited.next(event);\n    return false;\n  }\n\n  onStopEditing() {\n    this.cell.getRow().isInEditing = false;\n    return false;\n  }\n\n  onClick(event) {\n    event.stopPropagation();\n  }\n\n}\n\nEditCellDefault.ɵfac = function EditCellDefault_Factory(t) {\n  return new (t || EditCellDefault)();\n};\n\nEditCellDefault.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: EditCellDefault,\n  selectors: [[\"ng-component\"]],\n  inputs: {\n    cell: \"cell\",\n    inputClass: \"inputClass\"\n  },\n  outputs: {\n    edited: \"edited\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function EditCellDefault_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EditCellDefault, [{\n    type: Component,\n    args: [{\n      template: ''\n    }]\n  }], null, {\n    cell: [{\n      type: Input\n    }],\n    inputClass: [{\n      type: Input\n    }],\n    edited: [{\n      type: Output\n    }]\n  });\n})();\n\nclass CustomEditComponent extends EditCellDefault {\n  constructor(resolver) {\n    super();\n    this.resolver = resolver;\n  }\n\n  ngOnChanges(changes) {\n    if (this.cell && !this.customComponent) {\n      const editor = this.cell.getColumn().editor;\n      if (!editor) return;\n      const componentFactory = this.resolver.resolveComponentFactory(editor.component);\n      this.customComponent = this.dynamicTarget.createComponent(componentFactory); // set @Inputs and @Outputs of custom component\n\n      this.customComponent.instance.cell = this.cell;\n      this.customComponent.instance.inputClass = this.inputClass;\n      this.customComponent.instance.onStopEditing.subscribe(() => this.onStopEditing());\n      this.customComponent.instance.onEdited.subscribe(event => this.onEdited(event));\n      this.customComponent.instance.onClick.subscribe(event => this.onClick(event));\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.customComponent) {\n      this.customComponent.destroy();\n    }\n  }\n\n}\n\nCustomEditComponent.ɵfac = function CustomEditComponent_Factory(t) {\n  return new (t || CustomEditComponent)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver));\n};\n\nCustomEditComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CustomEditComponent,\n  selectors: [[\"table-cell-custom-editor\"]],\n  viewQuery: function CustomEditComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c5, 7, ViewContainerRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dynamicTarget = _t.first);\n    }\n  },\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 0,\n  consts: [[\"dynamicTarget\", \"\"]],\n  template: function CustomEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CustomEditComponent_ng_template_0_Template, 0, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n    }\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CustomEditComponent, [{\n    type: Component,\n    args: [{\n      selector: 'table-cell-custom-editor',\n      template: `\n    <ng-template #dynamicTarget></ng-template>\n  `\n    }]\n  }], function () {\n    return [{\n      type: i0.ComponentFactoryResolver\n    }];\n  }, {\n    dynamicTarget: [{\n      type: ViewChild,\n      args: ['dynamicTarget', {\n        read: ViewContainerRef,\n        static: true\n      }]\n    }]\n  });\n})();\n\nclass DefaultEditor {\n  constructor() {\n    this.onStopEditing = new EventEmitter();\n    this.onEdited = new EventEmitter();\n    this.onClick = new EventEmitter();\n  }\n\n  get disableEnterKeySave() {\n    return this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().disableEnterKeySave;\n  }\n\n}\n\nDefaultEditor.ɵfac = function DefaultEditor_Factory(t) {\n  return new (t || DefaultEditor)();\n};\n\nDefaultEditor.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DefaultEditor,\n  selectors: [[\"ng-component\"]],\n  inputs: {\n    cell: \"cell\",\n    inputClass: \"inputClass\"\n  },\n  outputs: {\n    onStopEditing: \"onStopEditing\",\n    onEdited: \"onEdited\",\n    onClick: \"onClick\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function DefaultEditor_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultEditor, [{\n    type: Component,\n    args: [{\n      template: ''\n    }]\n  }], null, {\n    cell: [{\n      type: Input\n    }],\n    inputClass: [{\n      type: Input\n    }],\n    onStopEditing: [{\n      type: Output\n    }],\n    onEdited: [{\n      type: Output\n    }],\n    onClick: [{\n      type: Output\n    }]\n  });\n})();\n\nclass SelectEditorComponent extends DefaultEditor {\n  constructor() {\n    super();\n  }\n\n}\n\nSelectEditorComponent.ɵfac = function SelectEditorComponent_Factory(t) {\n  return new (t || SelectEditorComponent)();\n};\n\nSelectEditorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SelectEditorComponent,\n  selectors: [[\"select-editor\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 6,\n  consts: [[1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"name\", \"disabled\", \"multiple\", \"ngModelChange\", \"click\"], [3, \"value\", \"selected\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\", \"selected\"]],\n  template: function SelectEditorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"select\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function SelectEditorComponent_Template_select_ngModelChange_0_listener($event) {\n        return ctx.cell.newValue = $event;\n      })(\"click\", function SelectEditorComponent_Template_select_click_0_listener($event) {\n        return ctx.onClick.emit($event);\n      });\n      i0.ɵɵtext(1, \" (keydown.enter)=\\\"disableEnterKeySave || onEdited.emit($event)\\\" (keydown.esc)=\\\"onStopEditing.emit()\\\"> \");\n      i0.ɵɵtemplate(2, SelectEditorComponent_option_2_Template, 2, 3, \"option\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      let tmp_4_0;\n      let tmp_5_0;\n      i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.cell.newValue)(\"name\", ctx.cell.getId())(\"disabled\", !ctx.cell.isEditable())(\"multiple\", (tmp_4_0 = ctx.cell.getColumn().getConfig()) == null ? null : tmp_4_0.multiple);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", (tmp_5_0 = ctx.cell.getColumn().getConfig()) == null ? null : tmp_5_0.list);\n    }\n  },\n  directives: [i1.SelectMultipleControlValueAccessor, i2.NgClass, i1.NgControlStatus, i1.NgModel, i2.NgForOf, i1.NgSelectOption, i1.ɵNgSelectMultipleOption],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SelectEditorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'select-editor',\n      template: `\n    <select [ngClass]=\"inputClass\"\n            class=\"form-control\"\n            [(ngModel)]=\"cell.newValue\"\n            [name]=\"cell.getId()\"\n            [disabled]=\"!cell.isEditable()\"\n            (click)=\"onClick.emit($event)\"\n            [multiple]=\"cell.getColumn().getConfig()?.multiple\">\n            (keydown.enter)=\"disableEnterKeySave || onEdited.emit($event)\"\n            (keydown.esc)=\"onStopEditing.emit()\">\n\n        <option *ngFor=\"let option of cell.getColumn().getConfig()?.list\" [value]=\"option.value\"\n                [selected]=\"option.value === cell.getValue()\">{{ option.title }}\n        </option>\n    </select>\n    `\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nclass TextareaEditorComponent extends DefaultEditor {\n  constructor() {\n    super();\n  }\n\n}\n\nTextareaEditorComponent.ɵfac = function TextareaEditorComponent_Factory(t) {\n  return new (t || TextareaEditorComponent)();\n};\n\nTextareaEditorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TextareaEditorComponent,\n  selectors: [[\"textarea-editor\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 5,\n  consts: [[1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"name\", \"disabled\", \"placeholder\", \"ngModelChange\", \"click\", \"keydown.enter\", \"keydown.esc\"]],\n  template: function TextareaEditorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"textarea\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function TextareaEditorComponent_Template_textarea_ngModelChange_0_listener($event) {\n        return ctx.cell.newValue = $event;\n      })(\"click\", function TextareaEditorComponent_Template_textarea_click_0_listener($event) {\n        return ctx.onClick.emit($event);\n      })(\"keydown.enter\", function TextareaEditorComponent_Template_textarea_keydown_enter_0_listener($event) {\n        return ctx.disableEnterKeySave || ctx.onEdited.emit($event);\n      })(\"keydown.esc\", function TextareaEditorComponent_Template_textarea_keydown_esc_0_listener() {\n        return ctx.onStopEditing.emit();\n      });\n      i0.ɵɵtext(1, \"    \");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.cell.newValue)(\"name\", ctx.cell.getId())(\"disabled\", !ctx.cell.isEditable())(\"placeholder\", ctx.cell.getTitle());\n    }\n  },\n  directives: [i1.DefaultValueAccessor, i2.NgClass, i1.NgControlStatus, i1.NgModel],\n  styles: [\"[_nghost-%COMP%]   input[_ngcontent-%COMP%], [_nghost-%COMP%]   textarea[_ngcontent-%COMP%]{width:100%;line-height:normal;padding:.375em .75em}\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TextareaEditorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'textarea-editor',\n      template: `\n    <textarea [ngClass]=\"inputClass\"\n              class=\"form-control\"\n              [(ngModel)]=\"cell.newValue\"\n              [name]=\"cell.getId()\"\n              [disabled]=\"!cell.isEditable()\"\n              [placeholder]=\"cell.getTitle()\"\n              (click)=\"onClick.emit($event)\"\n              (keydown.enter)=\"disableEnterKeySave || onEdited.emit($event)\"\n              (keydown.esc)=\"onStopEditing.emit()\">\n    </textarea>\n    `,\n      styles: [\":host input,:host textarea{width:100%;line-height:normal;padding:.375em .75em}\\n\"]\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nclass CheckboxEditorComponent extends DefaultEditor {\n  constructor() {\n    super();\n  }\n\n  onChange(event) {\n    const trueVal = this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().true || true;\n    const falseVal = this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().false || false;\n    this.cell.newValue = event.target.checked ? trueVal : falseVal;\n  }\n\n}\n\nCheckboxEditorComponent.ɵfac = function CheckboxEditorComponent_Factory(t) {\n  return new (t || CheckboxEditorComponent)();\n};\n\nCheckboxEditorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CheckboxEditorComponent,\n  selectors: [[\"checkbox-editor\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 4,\n  consts: [[\"type\", \"checkbox\", 1, \"form-control\", 3, \"ngClass\", \"name\", \"disabled\", \"checked\", \"click\", \"change\"]],\n  template: function CheckboxEditorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"input\", 0);\n      i0.ɵɵlistener(\"click\", function CheckboxEditorComponent_Template_input_click_0_listener($event) {\n        return ctx.onClick.emit($event);\n      })(\"change\", function CheckboxEditorComponent_Template_input_change_0_listener($event) {\n        return ctx.onChange($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      let tmp_3_0;\n      i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"name\", ctx.cell.getId())(\"disabled\", !ctx.cell.isEditable())(\"checked\", ctx.cell.getValue() == (((tmp_3_0 = ctx.cell.getColumn().getConfig()) == null ? null : tmp_3_0.true) || true));\n    }\n  },\n  directives: [i2.NgClass],\n  styles: [_c8]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckboxEditorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'checkbox-editor',\n      template: `\n    <input [ngClass]=\"inputClass\"\n           type=\"checkbox\"\n           class=\"form-control\"\n           [name]=\"cell.getId()\"\n           [disabled]=\"!cell.isEditable()\"\n           [checked]=\"cell.getValue() == (cell.getColumn().getConfig()?.true || true)\"\n           (click)=\"onClick.emit($event)\"\n           (change)=\"onChange($event)\">\n    `,\n      styles: [\":host input,:host textarea{width:100%;line-height:normal;padding:.375em .75em}\\n\"]\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nclass CompleterEditorComponent extends DefaultEditor {\n  constructor(completerService) {\n    super();\n    this.completerService = completerService;\n    this.completerStr = '';\n  }\n\n  ngOnInit() {\n    const editor = this.cell.getColumn().editor;\n\n    if (editor && editor.type === 'completer') {\n      const config = this.cell.getColumn().getConfig().completer;\n      config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\n      config.dataService.descriptionField(config.descriptionField);\n    }\n  }\n\n  onEditedCompleter(event) {\n    this.cell.newValue = event.title;\n    return false;\n  }\n\n}\n\nCompleterEditorComponent.ɵfac = function CompleterEditorComponent_Factory(t) {\n  return new (t || CompleterEditorComponent)(i0.ɵɵdirectiveInject(i1$1.CompleterService));\n};\n\nCompleterEditorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CompleterEditorComponent,\n  selectors: [[\"completer-editor\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 5,\n  consts: [[3, \"ngModel\", \"dataService\", \"minSearchLength\", \"pause\", \"placeholder\", \"ngModelChange\", \"selected\"]],\n  template: function CompleterEditorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ng2-completer\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function CompleterEditorComponent_Template_ng2_completer_ngModelChange_0_listener($event) {\n        return ctx.completerStr = $event;\n      })(\"selected\", function CompleterEditorComponent_Template_ng2_completer_selected_0_listener($event) {\n        return ctx.onEditedCompleter($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngModel\", ctx.completerStr)(\"dataService\", ctx.cell.getColumn().getConfig().completer.dataService)(\"minSearchLength\", ctx.cell.getColumn().getConfig().completer.minSearchLength || 0)(\"pause\", ctx.cell.getColumn().getConfig().completer.pause || 0)(\"placeholder\", ctx.cell.getColumn().getConfig().completer.placeholder || \"Start typing...\");\n    }\n  },\n  directives: [i1$1.CompleterCmp, i1.NgControlStatus, i1.NgModel],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CompleterEditorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'completer-editor',\n      template: `\n    <ng2-completer [(ngModel)]=\"completerStr\"\n                   [dataService]=\"cell.getColumn().getConfig().completer.dataService\"\n                   [minSearchLength]=\"cell.getColumn().getConfig().completer.minSearchLength || 0\"\n                   [pause]=\"cell.getColumn().getConfig().completer.pause || 0\"\n                   [placeholder]=\"cell.getColumn().getConfig().completer.placeholder || 'Start typing...'\"\n                   (selected)=\"onEditedCompleter($event)\">\n    </ng2-completer>\n    `\n    }]\n  }], function () {\n    return [{\n      type: i1$1.CompleterService\n    }];\n  }, null);\n})();\n\nclass InputEditorComponent extends DefaultEditor {\n  constructor() {\n    super();\n  }\n\n}\n\nInputEditorComponent.ɵfac = function InputEditorComponent_Factory(t) {\n  return new (t || InputEditorComponent)();\n};\n\nInputEditorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: InputEditorComponent,\n  selectors: [[\"input-editor\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 5,\n  consts: [[1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"name\", \"placeholder\", \"disabled\", \"ngModelChange\", \"click\", \"keydown.enter\", \"keydown.esc\"]],\n  template: function InputEditorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"input\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function InputEditorComponent_Template_input_ngModelChange_0_listener($event) {\n        return ctx.cell.newValue = $event;\n      })(\"click\", function InputEditorComponent_Template_input_click_0_listener($event) {\n        return ctx.onClick.emit($event);\n      })(\"keydown.enter\", function InputEditorComponent_Template_input_keydown_enter_0_listener($event) {\n        return ctx.disableEnterKeySave || ctx.onEdited.emit($event);\n      })(\"keydown.esc\", function InputEditorComponent_Template_input_keydown_esc_0_listener() {\n        return ctx.onStopEditing.emit();\n      });\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.cell.newValue)(\"name\", ctx.cell.getId())(\"placeholder\", ctx.cell.getTitle())(\"disabled\", !ctx.cell.isEditable());\n    }\n  },\n  directives: [i1.DefaultValueAccessor, i2.NgClass, i1.NgControlStatus, i1.NgModel],\n  styles: [_c8]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InputEditorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'input-editor',\n      template: `\n    <input [ngClass]=\"inputClass\"\n           class=\"form-control\"\n           [(ngModel)]=\"cell.newValue\"\n           [name]=\"cell.getId()\"\n           [placeholder]=\"cell.getTitle()\"\n           [disabled]=\"!cell.isEditable()\"\n           (click)=\"onClick.emit($event)\"\n           (keydown.enter)=\"disableEnterKeySave || onEdited.emit($event)\"\n           (keydown.esc)=\"onStopEditing.emit()\">\n    `,\n      styles: [\":host input,:host textarea{width:100%;line-height:normal;padding:.375em .75em}\\n\"]\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nclass DefaultEditComponent extends EditCellDefault {\n  constructor() {\n    super();\n  }\n\n  getEditorType() {\n    const editor = this.cell.getColumn().editor;\n\n    if (!editor) {\n      return 'default';\n    }\n\n    return editor.type;\n  }\n\n}\n\nDefaultEditComponent.ɵfac = function DefaultEditComponent_Factory(t) {\n  return new (t || DefaultEditComponent)();\n};\n\nDefaultEditComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DefaultEditComponent,\n  selectors: [[\"table-cell-default-editor\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 5,\n  consts: [[3, \"ngSwitch\"], [3, \"cell\", \"inputClass\", \"onClick\", \"onEdited\", \"onStopEditing\", 4, \"ngSwitchCase\"], [3, \"cell\", \"inputClass\", \"onClick\", 4, \"ngSwitchCase\"], [3, \"cell\", 4, \"ngSwitchCase\"], [3, \"cell\", \"inputClass\", \"onClick\", \"onEdited\", \"onStopEditing\", 4, \"ngSwitchDefault\"], [3, \"cell\", \"inputClass\", \"onClick\", \"onEdited\", \"onStopEditing\"], [3, \"cell\", \"inputClass\", \"onClick\"], [3, \"cell\"]],\n  template: function DefaultEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, DefaultEditComponent_select_editor_1_Template, 1, 2, \"select-editor\", 1);\n      i0.ɵɵtemplate(2, DefaultEditComponent_textarea_editor_2_Template, 1, 2, \"textarea-editor\", 1);\n      i0.ɵɵtemplate(3, DefaultEditComponent_checkbox_editor_3_Template, 1, 2, \"checkbox-editor\", 2);\n      i0.ɵɵtemplate(4, DefaultEditComponent_completer_editor_4_Template, 1, 1, \"completer-editor\", 3);\n      i0.ɵɵtemplate(5, DefaultEditComponent_input_editor_5_Template, 1, 2, \"input-editor\", 4);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngSwitch\", ctx.getEditorType());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"list\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"textarea\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"checkbox\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"completer\");\n    }\n  },\n  directives: [SelectEditorComponent, TextareaEditorComponent, CheckboxEditorComponent, CompleterEditorComponent, InputEditorComponent, i2.NgSwitch, i2.NgSwitchCase, i2.NgSwitchDefault],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultEditComponent, [{\n    type: Component,\n    args: [{\n      selector: 'table-cell-default-editor',\n      template: \"<div [ngSwitch]=\\\"getEditorType()\\\">\\n    <select-editor *ngSwitchCase=\\\"'list'\\\"\\n                   [cell]=\\\"cell\\\"\\n                   [inputClass]=\\\"inputClass\\\"\\n                   (onClick)=\\\"onClick($event)\\\"\\n                   (onEdited)=\\\"onEdited($event)\\\"\\n                   (onStopEditing)=\\\"onStopEditing()\\\">\\n    </select-editor>\\n\\n    <textarea-editor *ngSwitchCase=\\\"'textarea'\\\"\\n                     [cell]=\\\"cell\\\"\\n                     [inputClass]=\\\"inputClass\\\"\\n                     (onClick)=\\\"onClick($event)\\\"\\n                     (onEdited)=\\\"onEdited($event)\\\"\\n                     (onStopEditing)=\\\"onStopEditing()\\\">\\n    </textarea-editor>\\n\\n    <checkbox-editor *ngSwitchCase=\\\"'checkbox'\\\"\\n                     [cell]=\\\"cell\\\"\\n                     [inputClass]=\\\"inputClass\\\"\\n                     (onClick)=\\\"onClick($event)\\\">\\n    </checkbox-editor>\\n\\n    <completer-editor *ngSwitchCase=\\\"'completer'\\\"\\n                      [cell]=\\\"cell\\\">\\n    </completer-editor>\\n\\n    <input-editor *ngSwitchDefault\\n                  [cell]=\\\"cell\\\"\\n                  [inputClass]=\\\"inputClass\\\"\\n                  (onClick)=\\\"onClick($event)\\\"\\n                  (onEdited)=\\\"onEdited($event)\\\"\\n                  (onStopEditing)=\\\"onStopEditing()\\\">\\n    </input-editor>\\n</div>\"\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nclass EditCellComponent {\n  constructor() {\n    this.inputClass = '';\n    this.edited = new EventEmitter();\n  }\n\n  ngOnInit() {\n    this.cell.resetValue();\n  }\n\n  onEdited(event) {\n    this.edited.next(event);\n    return false;\n  }\n\n  getEditorType() {\n    const editor = this.cell.getColumn().editor;\n\n    if (!editor) {\n      return 'default';\n    }\n\n    return editor.type;\n  }\n\n}\n\nEditCellComponent.ɵfac = function EditCellComponent_Factory(t) {\n  return new (t || EditCellComponent)();\n};\n\nEditCellComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: EditCellComponent,\n  selectors: [[\"table-cell-edit-mode\"]],\n  inputs: {\n    cell: \"cell\",\n    inputClass: \"inputClass\"\n  },\n  outputs: {\n    edited: \"edited\"\n  },\n  decls: 3,\n  vars: 2,\n  consts: [[3, \"ngSwitch\"], [3, \"cell\", \"inputClass\", \"edited\", 4, \"ngSwitchCase\"], [3, \"cell\", \"inputClass\", \"edited\", 4, \"ngSwitchDefault\"], [3, \"cell\", \"inputClass\", \"edited\"]],\n  template: function EditCellComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, EditCellComponent_table_cell_custom_editor_1_Template, 1, 2, \"table-cell-custom-editor\", 1);\n      i0.ɵɵtemplate(2, EditCellComponent_table_cell_default_editor_2_Template, 1, 2, \"table-cell-default-editor\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngSwitch\", ctx.getEditorType());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngSwitchCase\", \"custom\");\n    }\n  },\n  directives: [CustomEditComponent, DefaultEditComponent, i2.NgSwitch, i2.NgSwitchCase, i2.NgSwitchDefault],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EditCellComponent, [{\n    type: Component,\n    args: [{\n      selector: 'table-cell-edit-mode',\n      template: `\n      <div [ngSwitch]=\"getEditorType()\">\n        <table-cell-custom-editor *ngSwitchCase=\"'custom'\"\n                                  [cell]=\"cell\"\n                                  [inputClass]=\"inputClass\"\n                                  (edited)=\"onEdited($event)\">\n        </table-cell-custom-editor>\n        <table-cell-default-editor *ngSwitchDefault\n                                  [cell]=\"cell\"\n                                  [inputClass]=\"inputClass\"\n                                  (edited)=\"onEdited($event)\">\n        </table-cell-default-editor>\n      </div>\n    `\n    }]\n  }], null, {\n    cell: [{\n      type: Input\n    }],\n    inputClass: [{\n      type: Input\n    }],\n    edited: [{\n      type: Output\n    }]\n  });\n})();\n\nclass CellComponent {\n  constructor() {\n    this.inputClass = '';\n    this.mode = 'inline';\n    this.isInEditing = false;\n    this.edited = new EventEmitter();\n  }\n\n  onEdited(event) {\n    if (this.isNew) {\n      this.grid.create(this.grid.getNewRow(), this.createConfirm);\n    } else {\n      this.grid.save(this.row, this.editConfirm);\n    }\n  }\n\n}\n\nCellComponent.ɵfac = function CellComponent_Factory(t) {\n  return new (t || CellComponent)();\n};\n\nCellComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CellComponent,\n  selectors: [[\"angular2-smart-table-cell\"]],\n  inputs: {\n    grid: \"grid\",\n    row: \"row\",\n    editConfirm: \"editConfirm\",\n    createConfirm: \"createConfirm\",\n    isNew: \"isNew\",\n    cell: \"cell\",\n    inputClass: \"inputClass\",\n    mode: \"mode\",\n    isInEditing: \"isInEditing\"\n  },\n  outputs: {\n    edited: \"edited\"\n  },\n  decls: 2,\n  vars: 2,\n  consts: [[3, \"cell\", 4, \"ngIf\"], [3, \"cell\", \"inputClass\", \"edited\", 4, \"ngIf\"], [3, \"cell\"], [3, \"cell\", \"inputClass\", \"edited\"]],\n  template: function CellComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CellComponent_table_cell_view_mode_0_Template, 1, 1, \"table-cell-view-mode\", 0);\n      i0.ɵɵtemplate(1, CellComponent_table_cell_edit_mode_1_Template, 1, 2, \"table-cell-edit-mode\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.isInEditing);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isInEditing);\n    }\n  },\n  directives: [ViewCellComponent, EditCellComponent, i2.NgIf],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CellComponent, [{\n    type: Component,\n    args: [{\n      selector: 'angular2-smart-table-cell',\n      template: `\n    <table-cell-view-mode *ngIf=\"!isInEditing\" [cell]=\"cell\"></table-cell-view-mode>\n    <table-cell-edit-mode *ngIf=\"isInEditing\" [cell]=\"cell\"\n                          [inputClass]=\"inputClass\"\n                          (edited)=\"onEdited($event)\">\n    </table-cell-edit-mode>\n  `\n    }]\n  }], null, {\n    grid: [{\n      type: Input\n    }],\n    row: [{\n      type: Input\n    }],\n    editConfirm: [{\n      type: Input\n    }],\n    createConfirm: [{\n      type: Input\n    }],\n    isNew: [{\n      type: Input\n    }],\n    cell: [{\n      type: Input\n    }],\n    inputClass: [{\n      type: Input\n    }],\n    mode: [{\n      type: Input\n    }],\n    isInEditing: [{\n      type: Input\n    }],\n    edited: [{\n      type: Output\n    }]\n  });\n})();\n\nclass TheadFormRowComponent {\n  constructor() {\n    this.create = new EventEmitter();\n  }\n\n  onCreate(event) {\n    event.stopPropagation();\n    this.grid.create(this.grid.getNewRow(), this.createConfirm);\n  }\n\n  ngOnChanges() {\n    this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n    this.showActionColumnLeft = this.grid.showActionColumn('left');\n    this.showActionColumnRight = this.grid.showActionColumn('right');\n    this.addInputClass = this.grid.getSetting('add.inputClass');\n  }\n\n  getVisibleCells(cells) {\n    return (cells || []).filter(cell => !cell.getColumn().hide);\n  }\n\n}\n\nTheadFormRowComponent.ɵfac = function TheadFormRowComponent_Factory(t) {\n  return new (t || TheadFormRowComponent)();\n};\n\nTheadFormRowComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TheadFormRowComponent,\n  selectors: [[\"\", \"angular2-st-thead-form-row\", \"\"]],\n  inputs: {\n    grid: \"grid\",\n    row: \"row\",\n    createConfirm: \"createConfirm\"\n  },\n  outputs: {\n    create: \"create\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c9,\n  decls: 4,\n  vars: 3,\n  consts: [[4, \"ngIf\"], [\"class\", \"angular2-smart-actions\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"angular2-smart-actions\"], [3, \"grid\", \"create\"], [3, \"cell\", \"grid\", \"isNew\", \"createConfirm\", \"inputClass\", \"isInEditing\", \"edited\"]],\n  template: function TheadFormRowComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, TheadFormRowComponent_td_0_Template, 1, 0, \"td\", 0);\n      i0.ɵɵtemplate(1, TheadFormRowComponent_td_1_Template, 2, 1, \"td\", 1);\n      i0.ɵɵtemplate(2, TheadFormRowComponent_td_2_Template, 2, 6, \"td\", 2);\n      i0.ɵɵtemplate(3, TheadFormRowComponent_td_3_Template, 2, 1, \"td\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnLeft);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.getVisibleCells(ctx.grid.getNewRow().getCells()));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnRight);\n    }\n  },\n  directives: [ActionsComponent, CellComponent, i2.NgIf, i2.NgForOf],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TheadFormRowComponent, [{\n    type: Component,\n    args: [{\n      selector: '[angular2-st-thead-form-row]',\n      template: `\n      <td *ngIf=\"\"></td>\n      <td  *ngIf=\"showActionColumnLeft\"  class=\"angular2-smart-actions\">\n        <angular2-st-actions [grid]=\"grid\" (create)=\"onCreate($event)\"></angular2-st-actions>\n      </td>\n      <td *ngFor=\"let cell of getVisibleCells(grid.getNewRow().getCells())\">\n        <angular2-smart-table-cell [cell]=\"cell\"\n                              [grid]=\"grid\"\n                              [isNew]=\"true\"\n                              [createConfirm]=\"createConfirm\"\n                              [inputClass]=\"addInputClass\"\n                              [isInEditing]=\"grid.getNewRow().isInEditing\"\n                              (edited)=\"onCreate($event)\">\n        </angular2-smart-table-cell>\n      </td>\n      <td  *ngIf=\"showActionColumnRight\"  class=\"angular2-smart-actions\">\n        <angular2-st-actions [grid]=\"grid\" (create)=\"onCreate($event)\"></angular2-st-actions>\n      </td>\n  `\n    }]\n  }], null, {\n    grid: [{\n      type: Input\n    }],\n    row: [{\n      type: Input\n    }],\n    createConfirm: [{\n      type: Input\n    }],\n    create: [{\n      type: Output\n    }]\n  });\n})();\n\nclass NgxSmartTableTheadComponent {\n  constructor(tableService) {\n    this.tableService = tableService;\n    this.sort = new EventEmitter();\n    this.hide = new EventEmitter();\n    this.selectAllRows = new EventEmitter();\n    this.create = new EventEmitter();\n    this.filter = new EventEmitter();\n  }\n\n  ngOnChanges() {\n    this.isHideHeader = this.grid.getSetting('hideHeader');\n    this.isHideSubHeader = this.grid.getSetting('hideSubHeader');\n  }\n\n  mouseMove(event) {\n    this.tableService.mouseMoveEvent$.next(event);\n  }\n\n}\n\nNgxSmartTableTheadComponent.ɵfac = function NgxSmartTableTheadComponent_Factory(t) {\n  return new (t || NgxSmartTableTheadComponent)(i0.ɵɵdirectiveInject(TableService));\n};\n\nNgxSmartTableTheadComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgxSmartTableTheadComponent,\n  selectors: [[\"\", \"angular2-st-thead\", \"\"]],\n  hostBindings: function NgxSmartTableTheadComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mousemove\", function NgxSmartTableTheadComponent_mousemove_HostBindingHandler($event) {\n        return ctx.mouseMove($event);\n      });\n    }\n  },\n  inputs: {\n    grid: \"grid\",\n    source: \"source\",\n    isAllSelected: \"isAllSelected\",\n    createConfirm: \"createConfirm\"\n  },\n  outputs: {\n    sort: \"sort\",\n    hide: \"hide\",\n    selectAllRows: \"selectAllRows\",\n    create: \"create\",\n    filter: \"filter\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c10,\n  decls: 3,\n  vars: 3,\n  consts: [[\"angular2-st-thead-titles-row\", \"\", \"class\", \"angular2-smart-titles\", 3, \"grid\", \"isAllSelected\", \"source\", \"sort\", \"hide\", \"selectAllRows\", 4, \"ngIf\"], [\"angular2-st-thead-filters-row\", \"\", \"class\", \"angular2-smart-filters\", 3, \"grid\", \"source\", \"create\", \"filter\", 4, \"ngIf\"], [\"angular2-st-thead-form-row\", \"\", 3, \"grid\", \"createConfirm\", 4, \"ngIf\"], [\"angular2-st-thead-titles-row\", \"\", 1, \"angular2-smart-titles\", 3, \"grid\", \"isAllSelected\", \"source\", \"sort\", \"hide\", \"selectAllRows\"], [\"angular2-st-thead-filters-row\", \"\", 1, \"angular2-smart-filters\", 3, \"grid\", \"source\", \"create\", \"filter\"], [\"angular2-st-thead-form-row\", \"\", 3, \"grid\", \"createConfirm\"]],\n  template: function NgxSmartTableTheadComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, NgxSmartTableTheadComponent_tr_0_Template, 1, 3, \"tr\", 0);\n      i0.ɵɵtemplate(1, NgxSmartTableTheadComponent_tr_1_Template, 1, 2, \"tr\", 1);\n      i0.ɵɵtemplate(2, NgxSmartTableTheadComponent_tr_2_Template, 1, 2, \"tr\", 2);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.isHideHeader);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isHideSubHeader);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.grid.createFormShown);\n    }\n  },\n  directives: [TheadTitlesRowComponent, TheadFitlersRowComponent, TheadFormRowComponent, i2.NgIf],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxSmartTableTheadComponent, [{\n    type: Component,\n    args: [{\n      selector: '[angular2-st-thead]',\n      template: \"<tr angular2-st-thead-titles-row *ngIf=\\\"!isHideHeader\\\"\\n                            class=\\\"angular2-smart-titles\\\"\\n                            [grid]=\\\"grid\\\"\\n                            [isAllSelected]=\\\"isAllSelected\\\"\\n                            [source]=\\\"source\\\"\\n                            (sort)=\\\"sort.emit($event)\\\"\\n                            (hide)=\\\"hide.emit($event)\\\"\\n                            (selectAllRows)=\\\"selectAllRows.emit($event)\\\">\\n</tr>\\n\\n<tr angular2-st-thead-filters-row *ngIf=\\\"!isHideSubHeader\\\"\\n                              class=\\\"angular2-smart-filters\\\"\\n                              [grid]=\\\"grid\\\"\\n                              [source]=\\\"source\\\"\\n                              (create)=\\\"create.emit($event)\\\"\\n                              (filter)=\\\"filter.emit($event)\\\">\\n</tr>\\n\\n<tr angular2-st-thead-form-row *ngIf=\\\"grid.createFormShown\\\"\\n                          [grid]=\\\"grid\\\"\\n                          [createConfirm]=\\\"createConfirm\\\">\\n</tr>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: TableService\n    }];\n  }, {\n    grid: [{\n      type: Input\n    }],\n    source: [{\n      type: Input\n    }],\n    isAllSelected: [{\n      type: Input\n    }],\n    createConfirm: [{\n      type: Input\n    }],\n    sort: [{\n      type: Output\n    }],\n    hide: [{\n      type: Output\n    }],\n    selectAllRows: [{\n      type: Output\n    }],\n    create: [{\n      type: Output\n    }],\n    filter: [{\n      type: Output\n    }],\n    mouseMove: [{\n      type: HostListener,\n      args: ['mousemove', ['$event']]\n    }]\n  });\n})();\n\nclass TbodyCustomItemComponent {\n  constructor(resolver) {\n    this.resolver = resolver;\n  }\n\n  ngOnInit() {\n    if (this.action && !this.customComponent) {\n      this.createCustomComponent();\n      this.patchInstance();\n    }\n  }\n\n  createCustomComponent() {\n    const componentFactory = this.resolver.resolveComponentFactory(this.action.renderComponent);\n    this.customComponent = this.dynamicTarget.createComponent(componentFactory);\n  }\n\n  patchInstance() {\n    Object.assign(this.customComponent.instance, this.getPatch());\n  }\n\n  getPatch() {\n    return {\n      action: this.action,\n      rowData: this.row.getData()\n    };\n  }\n\n}\n\nTbodyCustomItemComponent.ɵfac = function TbodyCustomItemComponent_Factory(t) {\n  return new (t || TbodyCustomItemComponent)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver));\n};\n\nTbodyCustomItemComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TbodyCustomItemComponent,\n  selectors: [[\"angular2-st-tbody-custom-item\"]],\n  viewQuery: function TbodyCustomItemComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c5, 7, ViewContainerRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dynamicTarget = _t.first);\n    }\n  },\n  inputs: {\n    action: \"action\",\n    row: \"row\"\n  },\n  decls: 2,\n  vars: 0,\n  consts: [[\"dynamicTarget\", \"\"]],\n  template: function TbodyCustomItemComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, TbodyCustomItemComponent_ng_template_0_Template, 0, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n    }\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TbodyCustomItemComponent, [{\n    type: Component,\n    args: [{\n      selector: 'angular2-st-tbody-custom-item',\n      template: `\n    <ng-template #dynamicTarget></ng-template>\n  `\n    }]\n  }], function () {\n    return [{\n      type: i0.ComponentFactoryResolver\n    }];\n  }, {\n    action: [{\n      type: Input\n    }],\n    row: [{\n      type: Input\n    }],\n    dynamicTarget: [{\n      type: ViewChild,\n      args: ['dynamicTarget', {\n        read: ViewContainerRef,\n        static: true\n      }]\n    }]\n  });\n})();\n\nclass TbodyCustomComponent {\n  constructor() {\n    this.custom = new EventEmitter();\n  }\n\n  onCustom(action, event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.custom.emit({\n      action: action.name,\n      data: this.row.getData(),\n      source: this.source\n    });\n  }\n\n}\n\nTbodyCustomComponent.ɵfac = function TbodyCustomComponent_Factory(t) {\n  return new (t || TbodyCustomComponent)();\n};\n\nTbodyCustomComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TbodyCustomComponent,\n  selectors: [[\"angular2-st-tbody-custom\"]],\n  inputs: {\n    grid: \"grid\",\n    row: \"row\",\n    source: \"source\"\n  },\n  outputs: {\n    custom: \"custom\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [\"href\", \"#\", \"class\", \"angular2-smart-action angular2-smart-action-custom-custom\", 3, \"innerHTML\", \"click\", 4, \"ngIf\"], [\"href\", \"#\", \"class\", \"angular2-smart-action angular2-smart-action-custom-custom\", 3, \"click\", 4, \"ngIf\"], [\"href\", \"#\", 1, \"angular2-smart-action\", \"angular2-smart-action-custom-custom\", 3, \"innerHTML\", \"click\"], [\"href\", \"#\", 1, \"angular2-smart-action\", \"angular2-smart-action-custom-custom\", 3, \"click\"], [1, \"angular2-smart-action\", \"angular2-smart-action-custom-custom\", 3, \"action\", \"row\"]],\n  template: function TbodyCustomComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, TbodyCustomComponent_ng_container_0_Template, 3, 2, \"ng-container\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.grid.getSetting(\"actions.custom\"));\n    }\n  },\n  directives: [TbodyCustomItemComponent, i2.NgForOf, i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TbodyCustomComponent, [{\n    type: Component,\n    args: [{\n      selector: 'angular2-st-tbody-custom',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: `\n    <ng-container *ngFor=\"let action of grid.getSetting('actions.custom')\">\n      <a href=\"#\" class=\"angular2-smart-action angular2-smart-action-custom-custom\"\n         *ngIf=\"!action.renderComponent\"\n         [innerHTML]=\"action.title\"\n         (click)=\"onCustom(action, $event)\"></a>\n      <a href=\"#\" class=\"angular2-smart-action angular2-smart-action-custom-custom\"\n         *ngIf=\"action.renderComponent\"\n         (click)=\"onCustom(action, $event)\">\n        <angular2-st-tbody-custom-item class=\"angular2-smart-action angular2-smart-action-custom-custom\"\n                                  [action]=\"action\"\n                                  [row]=\"row\"></angular2-st-tbody-custom-item>\n      </a>\n\n    </ng-container>\n  `\n    }]\n  }], null, {\n    grid: [{\n      type: Input\n    }],\n    row: [{\n      type: Input\n    }],\n    source: [{\n      type: Input\n    }],\n    custom: [{\n      type: Output\n    }]\n  });\n})();\n\nclass TbodyExpandRowComponent {\n  constructor() {\n    this.onExpandRow = new EventEmitter();\n  }\n\n  onExpand(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.onExpandRow.emit(this.row);\n  }\n\n  ngOnChanges() {\n    this.expandRowButtonContent = this.grid.getSetting('expand.expandRowButtonContent');\n  }\n\n}\n\nTbodyExpandRowComponent.ɵfac = function TbodyExpandRowComponent_Factory(t) {\n  return new (t || TbodyExpandRowComponent)();\n};\n\nTbodyExpandRowComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TbodyExpandRowComponent,\n  selectors: [[\"angular2-st-tbody-expand\"]],\n  inputs: {\n    grid: \"grid\",\n    row: \"row\"\n  },\n  outputs: {\n    onExpandRow: \"onExpandRow\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[\"href\", \"#\", 1, \"angular2-smart-action\", \"angular2-smart-action-expand-expand\", 3, \"innerHTML\", \"click\"]],\n  template: function TbodyExpandRowComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"a\", 0);\n      i0.ɵɵlistener(\"click\", function TbodyExpandRowComponent_Template_a_click_0_listener($event) {\n        return ctx.onExpand($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"innerHTML\", ctx.expandRowButtonContent, i0.ɵɵsanitizeHtml);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TbodyExpandRowComponent, [{\n    type: Component,\n    args: [{\n      selector: 'angular2-st-tbody-expand',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: `\n      <a href=\"#\" class=\"angular2-smart-action angular2-smart-action-expand-expand\"\n          [innerHTML]=\"expandRowButtonContent\" (click)=\"onExpand($event)\"></a>\n    `\n    }]\n  }], function () {\n    return [];\n  }, {\n    grid: [{\n      type: Input\n    }],\n    row: [{\n      type: Input\n    }],\n    onExpandRow: [{\n      type: Output\n    }]\n  });\n})();\n\nclass TbodyEditDeleteComponent {\n  constructor() {\n    this.edit = new EventEmitter();\n    this.delete = new EventEmitter();\n    this.editRowSelect = new EventEmitter();\n  }\n\n  onEdit(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.editRowSelect.emit(this.row);\n\n    if (this.grid.getSetting('mode') === 'external') {\n      this.edit.emit({\n        data: this.row.getData(),\n        source: this.source\n      });\n    } else {\n      this.grid.edit(this.row);\n    }\n  }\n\n  onDelete(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (this.grid.getSetting('mode') === 'external') {\n      this.delete.emit({\n        data: this.row.getData(),\n        source: this.source\n      });\n    } else {\n      this.grid.delete(this.row, this.deleteConfirm);\n    }\n  }\n\n  ngOnChanges() {\n    this.isActionEdit = this.grid.getSetting('actions.edit');\n    this.isActionDelete = this.grid.getSetting('actions.delete');\n    this.editRowButtonContent = this.grid.getSetting('edit.editButtonContent');\n    this.deleteRowButtonContent = this.grid.getSetting('delete.deleteButtonContent');\n  }\n\n}\n\nTbodyEditDeleteComponent.ɵfac = function TbodyEditDeleteComponent_Factory(t) {\n  return new (t || TbodyEditDeleteComponent)();\n};\n\nTbodyEditDeleteComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TbodyEditDeleteComponent,\n  selectors: [[\"angular2-st-tbody-edit-delete\"]],\n  inputs: {\n    grid: \"grid\",\n    row: \"row\",\n    source: \"source\",\n    deleteConfirm: \"deleteConfirm\",\n    editConfirm: \"editConfirm\"\n  },\n  outputs: {\n    edit: \"edit\",\n    delete: \"delete\",\n    editRowSelect: \"editRowSelect\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 2,\n  consts: [[\"href\", \"#\", \"class\", \"angular2-smart-action angular2-smart-action-edit-edit\", 3, \"innerHTML\", \"click\", 4, \"ngIf\"], [\"href\", \"#\", \"class\", \"angular2-smart-action angular2-smart-action-delete-delete\", 3, \"innerHTML\", \"click\", 4, \"ngIf\"], [\"href\", \"#\", 1, \"angular2-smart-action\", \"angular2-smart-action-edit-edit\", 3, \"innerHTML\", \"click\"], [\"href\", \"#\", 1, \"angular2-smart-action\", \"angular2-smart-action-delete-delete\", 3, \"innerHTML\", \"click\"]],\n  template: function TbodyEditDeleteComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, TbodyEditDeleteComponent_a_0_Template, 1, 1, \"a\", 0);\n      i0.ɵɵtemplate(1, TbodyEditDeleteComponent_a_1_Template, 1, 1, \"a\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.isActionEdit);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isActionDelete);\n    }\n  },\n  directives: [i2.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TbodyEditDeleteComponent, [{\n    type: Component,\n    args: [{\n      selector: 'angular2-st-tbody-edit-delete',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: `\n    <a href=\"#\" *ngIf=\"isActionEdit\" class=\"angular2-smart-action angular2-smart-action-edit-edit\"\n        [innerHTML]=\"editRowButtonContent\" (click)=\"onEdit($event)\"></a>\n    <a href=\"#\" *ngIf=\"isActionDelete\" class=\"angular2-smart-action angular2-smart-action-delete-delete\"\n        [innerHTML]=\"deleteRowButtonContent\" (click)=\"onDelete($event)\"></a>\n  `\n    }]\n  }], null, {\n    grid: [{\n      type: Input\n    }],\n    row: [{\n      type: Input\n    }],\n    source: [{\n      type: Input\n    }],\n    deleteConfirm: [{\n      type: Input\n    }],\n    editConfirm: [{\n      type: Input\n    }],\n    edit: [{\n      type: Output\n    }],\n    delete: [{\n      type: Output\n    }],\n    editRowSelect: [{\n      type: Output\n    }]\n  });\n})();\n\nclass TbodyCreateCancelComponent {\n  onSave(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.grid.save(this.row, this.editConfirm);\n  }\n\n  onCancelEdit(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.row.isInEditing = false;\n  }\n\n  ngOnChanges() {\n    this.saveButtonContent = this.grid.getSetting('edit.saveButtonContent');\n    this.cancelButtonContent = this.grid.getSetting('edit.cancelButtonContent');\n  }\n\n}\n\nTbodyCreateCancelComponent.ɵfac = function TbodyCreateCancelComponent_Factory(t) {\n  return new (t || TbodyCreateCancelComponent)();\n};\n\nTbodyCreateCancelComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TbodyCreateCancelComponent,\n  selectors: [[\"angular2-st-tbody-create-cancel\"]],\n  inputs: {\n    grid: \"grid\",\n    row: \"row\",\n    editConfirm: \"editConfirm\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 2,\n  consts: [[\"href\", \"#\", 1, \"angular2-smart-action\", \"angular2-smart-action-edit-save\", 3, \"innerHTML\", \"click\"], [\"href\", \"#\", 1, \"angular2-smart-action\", \"angular2-smart-action-edit-cancel\", 3, \"innerHTML\", \"click\"]],\n  template: function TbodyCreateCancelComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"a\", 0);\n      i0.ɵɵlistener(\"click\", function TbodyCreateCancelComponent_Template_a_click_0_listener($event) {\n        return ctx.onSave($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1, \"a\", 1);\n      i0.ɵɵlistener(\"click\", function TbodyCreateCancelComponent_Template_a_click_1_listener($event) {\n        return ctx.onCancelEdit($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"innerHTML\", ctx.saveButtonContent, i0.ɵɵsanitizeHtml);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"innerHTML\", ctx.cancelButtonContent, i0.ɵɵsanitizeHtml);\n    }\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TbodyCreateCancelComponent, [{\n    type: Component,\n    args: [{\n      selector: 'angular2-st-tbody-create-cancel',\n      template: `\n    <a href=\"#\" class=\"angular2-smart-action angular2-smart-action-edit-save\"\n        [innerHTML]=\"saveButtonContent\" (click)=\"onSave($event)\"></a>\n    <a href=\"#\" class=\"angular2-smart-action angular2-smart-action-edit-cancel\"\n        [innerHTML]=\"cancelButtonContent\" (click)=\"onCancelEdit($event)\"></a>\n  `\n    }]\n  }], null, {\n    grid: [{\n      type: Input\n    }],\n    row: [{\n      type: Input\n    }],\n    editConfirm: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NgxSmartTableTbodyComponent {\n  constructor(resolver, vcRef) {\n    this.resolver = resolver;\n    this.vcRef = vcRef;\n    this.save = new EventEmitter();\n    this.cancel = new EventEmitter();\n    this.edit = new EventEmitter();\n    this.delete = new EventEmitter();\n    this.custom = new EventEmitter();\n    this.edited = new EventEmitter();\n    this.userSelectRow = new EventEmitter();\n    this.editRowSelect = new EventEmitter();\n    this.multipleSelectRow = new EventEmitter();\n    this.rowHover = new EventEmitter();\n    this.onExpandRow = new EventEmitter();\n    this.hasChildComponent = false;\n  }\n\n  ngAfterViewInit() {\n    let cmp = this.grid.settings.expandedRowComponent;\n\n    if (cmp && !this.customComponent) {\n      this.expandedRowChild.forEach(c => c.clear());\n      this.hasChildComponent = true;\n      this.createCustomComponent();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.customComponent) this.customComponent.destroy();\n  }\n\n  clear() {\n    this.vcRef.clear();\n  }\n\n  createCustomComponent() {\n    let cmp = this.grid.settings.expandedRowComponent;\n\n    if (cmp) {\n      const componentFactory = this.resolver.resolveComponentFactory(cmp);\n      this.expandedRowChild.changes.pipe(delay(0)).subscribe(item => {\n        if (item.length) {\n          this.customComponent = item.first.createComponent(componentFactory);\n          Object.assign(this.customComponent.instance, this.grid.dataSet.expandRow, {\n            rowData: this.grid.dataSet.getExpandedRow().getData()\n          });\n        }\n      });\n    }\n  }\n\n  get tableColumnsCount() {\n    const actionColumns = this.isActionAdd || this.isActionEdit || this.isActionDelete ? 1 : 0;\n    return this.grid.getColumns().length + actionColumns;\n  }\n\n  ngOnChanges() {\n    this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n    this.showActionColumnLeft = this.grid.showActionColumn('left');\n    this.mode = this.grid.getSetting('mode');\n    this.editInputClass = this.grid.getSetting('edit.inputClass');\n    this.showActionColumnRight = this.grid.showActionColumn('right');\n    this.isActionAdd = this.grid.getSetting('actions.add');\n    this.isActionEdit = this.grid.getSetting('actions.edit');\n    this.isActionDelete = this.grid.getSetting('actions.delete');\n    this.noDataMessage = this.grid.getSetting('noDataMessage');\n  }\n\n  getVisibleCells(cells) {\n    return (cells || []).filter(cell => !cell.getColumn().hide);\n  }\n\n  onExpandRowClick(row) {\n    this.onExpandRow.emit(row);\n  }\n\n}\n\nNgxSmartTableTbodyComponent.ɵfac = function NgxSmartTableTbodyComponent_Factory(t) {\n  return new (t || NgxSmartTableTbodyComponent)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver), i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n};\n\nNgxSmartTableTbodyComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgxSmartTableTbodyComponent,\n  selectors: [[\"\", \"angular2-st-tbody\", \"\"]],\n  viewQuery: function NgxSmartTableTbodyComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c11, 5, ViewContainerRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.expandedRowChild = _t);\n    }\n  },\n  inputs: {\n    grid: \"grid\",\n    source: \"source\",\n    deleteConfirm: \"deleteConfirm\",\n    editConfirm: \"editConfirm\",\n    rowClassFunction: \"rowClassFunction\"\n  },\n  outputs: {\n    save: \"save\",\n    cancel: \"cancel\",\n    edit: \"edit\",\n    delete: \"delete\",\n    custom: \"custom\",\n    edited: \"edited\",\n    userSelectRow: \"userSelectRow\",\n    editRowSelect: \"editRowSelect\",\n    multipleSelectRow: \"multipleSelectRow\",\n    rowHover: \"rowHover\",\n    onExpandRow: \"onExpandRow\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  attrs: _c12,\n  decls: 2,\n  vars: 2,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"angular2-smart-row\", 3, \"className\", \"ngClass\", \"click\", \"mouseover\"], [\"class\", \"angular2-smart-actions angular2-smart-action-multiple-select\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"angular2-smart-actions\", 4, \"ngIf\"], [\"class\", \"angular2-smart-row angular2-smart-row-detail\", 4, \"ngIf\"], [1, \"angular2-smart-actions\", \"angular2-smart-action-multiple-select\", 3, \"click\"], [\"type\", \"checkbox\", 1, \"form-check-input\", 3, \"ngModel\"], [1, \"angular2-smart-actions\"], [3, \"grid\", \"row\", \"source\", \"custom\"], [3, \"grid\", \"row\", \"onExpandRow\", 4, \"ngIf\"], [3, \"grid\", \"deleteConfirm\", \"editConfirm\", \"row\", \"source\", \"edit\", \"delete\", \"editRowSelect\"], [3, \"grid\", \"row\", \"onExpandRow\"], [3, \"grid\", \"row\", \"editConfirm\"], [3, \"cell\", \"grid\", \"row\", \"isNew\", \"mode\", \"editConfirm\", \"inputClass\", \"isInEditing\"], [1, \"angular2-smart-row\", \"angular2-smart-row-detail\"], [1, \"angular2-smart-column-expandedDetail\"], [\"expandedRowChild\", \"\"]],\n  template: function NgxSmartTableTbodyComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, NgxSmartTableTbodyComponent_ng_container_0_Template, 9, 11, \"ng-container\", 0);\n      i0.ɵɵtemplate(1, NgxSmartTableTbodyComponent_tr_1_Template, 3, 2, \"tr\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.grid.getRows());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.grid.getRows().length == 0);\n    }\n  },\n  directives: [TbodyCustomComponent, TbodyExpandRowComponent, TbodyEditDeleteComponent, TbodyCreateCancelComponent, CellComponent, i2.NgForOf, i2.NgClass, i2.NgIf, i1.CheckboxControlValueAccessor, i1.NgControlStatus, i1.NgModel],\n  styles: [\"[_nghost-%COMP%]   .angular2-smart-row.selected[_ngcontent-%COMP%]{background:rgba(0,0,0,.05)}[_nghost-%COMP%]   .angular2-smart-row[_ngcontent-%COMP%]   .angular2-smart-actions.angular2-smart-action-multiple-select[_ngcontent-%COMP%]{text-align:center}[_nghost-%COMP%]     angular2-st-tbody-edit-delete a:first-child, [_nghost-%COMP%]     angular2-st-tbody-create-cancel a:first-child, [_nghost-%COMP%]     angular2-smart-action-expand-expand a:first-child{margin-right:.25rem}\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxSmartTableTbodyComponent, [{\n    type: Component,\n    args: [{\n      selector: '[angular2-st-tbody]',\n      template: \"<ng-container  *ngFor=\\\"let row of grid.getRows()\\\">\\n  <tr (click)=\\\"userSelectRow.emit(row)\\\" (mouseover)=\\\"rowHover.emit(row)\\\" class=\\\"angular2-smart-row\\\" [className]=\\\"rowClassFunction(row)\\\" [ngClass]=\\\"{selected: row.isSelected}\\\">\\n    <td *ngIf=\\\"isMultiSelectVisible\\\" class=\\\"angular2-smart-actions angular2-smart-action-multiple-select\\\" (click)=\\\"multipleSelectRow.emit(row)\\\">\\n      <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" [ngModel]=\\\"row.isSelected\\\">\\n    </td>\\n    <td *ngIf=\\\"!row.isInEditing && showActionColumnLeft\\\" class=\\\"angular2-smart-actions\\\">\\n\\n      <angular2-st-tbody-custom \\n        [grid]=\\\"grid\\\" \\n        (custom)=\\\"custom.emit($event)\\\" \\n        [row]=\\\"row\\\" \\n        [source]=\\\"source\\\">\\n      </angular2-st-tbody-custom>\\n      \\n      <angular2-st-tbody-expand \\n          *ngIf=\\\"hasChildComponent\\\"\\n          [grid]=\\\"grid\\\" \\n          [row]=\\\"row\\\" \\n          (onExpandRow)=\\\"onExpandRow.emit(row)\\\">\\n      </angular2-st-tbody-expand>\\n\\n      <angular2-st-tbody-edit-delete [grid]=\\\"grid\\\"\\n                                [deleteConfirm]=\\\"deleteConfirm\\\"\\n                                [editConfirm]=\\\"editConfirm\\\"\\n                                (edit)=\\\"edit.emit(row)\\\"\\n                                (delete)=\\\"delete.emit(row)\\\"\\n                                (editRowSelect)=\\\"editRowSelect.emit($event)\\\"\\n                                [row]=\\\"row\\\"\\n                                [source]=\\\"source\\\">\\n      </angular2-st-tbody-edit-delete>\\n    </td>\\n    <td *ngIf=\\\"row.isInEditing && showActionColumnLeft\\\"  class=\\\"angular2-smart-actions\\\">\\n      <angular2-st-tbody-create-cancel [grid]=\\\"grid\\\" [row]=\\\"row\\\" [editConfirm]=\\\"editConfirm\\\"></angular2-st-tbody-create-cancel>\\n    </td>\\n    <td *ngFor=\\\"let cell of getVisibleCells(row.cells)\\\">\\n      <angular2-smart-table-cell [cell]=\\\"cell\\\"\\n                            [grid]=\\\"grid\\\"\\n                            [row]=\\\"row\\\"\\n                            [isNew]=\\\"false\\\"\\n                            [mode]=\\\"mode\\\"\\n                            [editConfirm]=\\\"editConfirm\\\"\\n                            [inputClass]=\\\"editInputClass\\\"\\n                            [isInEditing]=\\\"row.isInEditing\\\">\\n      </angular2-smart-table-cell>\\n    </td>\\n\\n    <td *ngIf=\\\"row.isInEditing && showActionColumnRight\\\"  class=\\\"angular2-smart-actions\\\">\\n      <angular2-st-tbody-create-cancel [grid]=\\\"grid\\\" [row]=\\\"row\\\" [editConfirm]=\\\"editConfirm\\\"></angular2-st-tbody-create-cancel>\\n    </td>\\n\\n    <td *ngIf=\\\"!row.isInEditing && showActionColumnRight\\\" class=\\\"angular2-smart-actions\\\">\\n      <angular2-st-tbody-custom [grid]=\\\"grid\\\" (custom)=\\\"custom.emit($event)\\\" [row]=\\\"row\\\" [source]=\\\"source\\\"></angular2-st-tbody-custom>\\n\\n      <angular2-st-tbody-expand \\n          *ngIf=\\\"hasChildComponent\\\"\\n          [grid]=\\\"grid\\\" \\n          [row]=\\\"row\\\" \\n          (onExpandRow)=\\\"onExpandRow.emit(row)\\\">\\n      </angular2-st-tbody-expand>\\n      \\n      <angular2-st-tbody-edit-delete [grid]=\\\"grid\\\"\\n                                [deleteConfirm]=\\\"deleteConfirm\\\"\\n                                [editConfirm]=\\\"editConfirm\\\"\\n                                [row]=\\\"row\\\"\\n                                [source]=\\\"source\\\"\\n                                (edit)=\\\"edit.emit(row)\\\"\\n                                (delete)=\\\"delete.emit(row)\\\"\\n                                (editRowSelect)=\\\"editRowSelect.emit($event)\\\">\\n      </angular2-st-tbody-edit-delete>\\n    </td>\\n  </tr>\\n  <tr class=\\\"angular2-smart-row angular2-smart-row-detail\\\" *ngIf=\\\"row.isExpanded\\\">\\n    <td [attr.colspan]=\\\"tableColumnsCount\\\" class=\\\"angular2-smart-column-expandedDetail\\\">\\n      <ng-template #expandedRowChild ></ng-template>\\n    </td>\\n  </tr>\\n</ng-container>\\n<tr *ngIf=\\\"grid.getRows().length == 0\\\">\\n  <td [attr.colspan]=\\\"tableColumnsCount\\\">\\n    {{ noDataMessage }}\\n  </td>\\n</tr>\\n\",\n      styles: [\":host .angular2-smart-row.selected{background:rgba(0,0,0,.05)}:host .angular2-smart-row .angular2-smart-actions.angular2-smart-action-multiple-select{text-align:center}:host ::ng-deep angular2-st-tbody-edit-delete a:first-child,:host ::ng-deep angular2-st-tbody-create-cancel a:first-child,:host ::ng-deep angular2-smart-action-expand-expand a:first-child{margin-right:.25rem}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ComponentFactoryResolver\n    }, {\n      type: i0.ViewContainerRef\n    }];\n  }, {\n    grid: [{\n      type: Input\n    }],\n    source: [{\n      type: Input\n    }],\n    deleteConfirm: [{\n      type: Input\n    }],\n    editConfirm: [{\n      type: Input\n    }],\n    rowClassFunction: [{\n      type: Input\n    }],\n    save: [{\n      type: Output\n    }],\n    cancel: [{\n      type: Output\n    }],\n    edit: [{\n      type: Output\n    }],\n    delete: [{\n      type: Output\n    }],\n    custom: [{\n      type: Output\n    }],\n    edited: [{\n      type: Output\n    }],\n    userSelectRow: [{\n      type: Output\n    }],\n    editRowSelect: [{\n      type: Output\n    }],\n    multipleSelectRow: [{\n      type: Output\n    }],\n    rowHover: [{\n      type: Output\n    }],\n    onExpandRow: [{\n      type: Output\n    }],\n    expandedRowChild: [{\n      type: ViewChildren,\n      args: ['expandedRowChild', {\n        read: ViewContainerRef\n      }]\n    }]\n  });\n})();\n\nclass PagerComponent {\n  constructor() {\n    this.perPageSelect = [];\n    this.changePage = new EventEmitter();\n    this.count = 0;\n  }\n\n  ngOnChanges(changes) {\n    if (changes.source) {\n      if (!changes.source.firstChange) {\n        this.dataChangedSub.unsubscribe();\n      }\n\n      this.dataChangedSub = this.source.onChanged().subscribe(dataChanges => {\n        this.page = this.source.getPaging().page;\n        this.perPage = this.source.getPaging().perPage;\n        this.currentPerPage = this.perPage;\n        this.count = this.source.count();\n\n        if (this.isPageOutOfBounce()) {\n          this.source.setPage(--this.page);\n        }\n\n        this.processPageChange(dataChanges);\n        this.initPages();\n      });\n    }\n  }\n  /**\n   * We change the page here depending on the action performed against data source\n   * if a new element was added to the end of the table - then change the page to the last\n   * if a new element was added to the beginning of the table - then to the first page\n   * @param changes\n   */\n\n\n  processPageChange(changes) {\n    if (changes['action'] === 'prepend') {\n      this.source.setPage(1);\n    }\n\n    if (changes['action'] === 'append') {\n      this.source.setPage(this.getLast());\n    }\n  }\n\n  shouldShow() {\n    return this.source.count() > this.perPage;\n  }\n\n  paginate(page) {\n    this.source.setPage(page);\n    this.page = page;\n    this.changePage.emit({\n      page\n    });\n    return false;\n  }\n\n  next() {\n    return this.paginate(this.getPage() + 1);\n  }\n\n  prev() {\n    return this.paginate(this.getPage() - 1);\n  }\n\n  getPage() {\n    return this.page;\n  }\n\n  getPages() {\n    return this.pages;\n  }\n\n  getLast() {\n    return Math.ceil(this.count / this.perPage);\n  }\n\n  isPageOutOfBounce() {\n    return this.page * this.perPage >= this.count + this.perPage && this.page > 1;\n  }\n\n  initPages() {\n    const pagesCount = this.getLast();\n    let showPagesCount = 4;\n    showPagesCount = pagesCount < showPagesCount ? pagesCount : showPagesCount;\n    this.pages = [];\n\n    if (this.shouldShow()) {\n      let middleOne = Math.ceil(showPagesCount / 2);\n      middleOne = this.page >= middleOne ? this.page : middleOne;\n      let lastOne = middleOne + Math.floor(showPagesCount / 2);\n      lastOne = lastOne >= pagesCount ? pagesCount : lastOne;\n      const firstOne = lastOne - showPagesCount + 1;\n\n      for (let i = firstOne; i <= lastOne; i++) {\n        this.pages.push(i);\n      }\n    }\n  }\n\n  onChangePerPage(event) {\n    if (this.currentPerPage) {\n      if (typeof this.currentPerPage === 'string' && this.currentPerPage.toLowerCase() === 'all') {\n        this.source.getPaging().perPage = null;\n      } else {\n        this.source.getPaging().perPage = this.currentPerPage * 1;\n        this.source.refresh();\n      }\n\n      this.initPages();\n    }\n  }\n\n}\n\nPagerComponent.ɵfac = function PagerComponent_Factory(t) {\n  return new (t || PagerComponent)();\n};\n\nPagerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: PagerComponent,\n  selectors: [[\"angular2-smart-table-pager\"]],\n  inputs: {\n    source: \"source\",\n    perPageSelect: \"perPageSelect\"\n  },\n  outputs: {\n    changePage: \"changePage\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 2,\n  consts: [[\"class\", \"angular2-smart-pagination-nav\", 4, \"ngIf\"], [\"class\", \"angular2-smart-pagination-per-page\", 4, \"ngIf\"], [1, \"angular2-smart-pagination-nav\"], [1, \"angular2-smart-pagination\", \"pagination\"], [1, \"angular2-smart-page-item\", \"page-item\", 3, \"ngClass\"], [\"href\", \"#\", \"aria-label\", \"First\", 1, \"angular2-smart-page-link\", \"page-link\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"sr-only\"], [\"href\", \"#\", \"aria-label\", \"Prev\", 1, \"angular2-smart-page-link\", \"page-link\", \"page-link-prev\", 3, \"click\"], [\"class\", \"angular2-smart-page-item page-item\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [\"href\", \"#\", \"aria-label\", \"Next\", 1, \"angular2-smart-page-link\", \"page-link\", \"page-link-next\", 3, \"click\"], [\"href\", \"#\", \"aria-label\", \"Last\", 1, \"angular2-smart-page-link\", \"page-link\", 3, \"click\"], [\"class\", \"angular2-smart-page-link page-link\", 4, \"ngIf\"], [\"class\", \"angular2-smart-page-link page-link\", \"href\", \"#\", 3, \"click\", 4, \"ngIf\"], [1, \"angular2-smart-page-link\", \"page-link\"], [\"href\", \"#\", 1, \"angular2-smart-page-link\", \"page-link\", 3, \"click\"], [1, \"angular2-smart-pagination-per-page\"], [\"for\", \"per-page\"], [\"id\", \"per-page\", 3, \"ngModel\", \"change\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n  template: function PagerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, PagerComponent_nav_0_Template, 27, 13, \"nav\", 0);\n      i0.ɵɵtemplate(1, PagerComponent_nav_1_Template, 5, 2, \"nav\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.shouldShow());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.perPageSelect && ctx.perPageSelect.length > 0);\n    }\n  },\n  directives: [i2.NgIf, i2.NgClass, i2.NgForOf, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgModel, i1.NgSelectOption, i1.ɵNgSelectMultipleOption],\n  styles: [\".angular2-smart-pagination[_ngcontent-%COMP%]{display:inline-flex;font-size:.875em;padding:0}.angular2-smart-pagination[_ngcontent-%COMP%]   .sr-only[_ngcontent-%COMP%]{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}.angular2-smart-pagination[_ngcontent-%COMP%]   .angular2-smart-page-item[_ngcontent-%COMP%]{display:inline}.angular2-smart-pagination[_ngcontent-%COMP%]   .page-link-next[_ngcontent-%COMP%], .angular2-smart-pagination[_ngcontent-%COMP%]   .page-link-prev[_ngcontent-%COMP%]{font-size:10px}[_nghost-%COMP%]{display:flex;justify-content:space-between}[_nghost-%COMP%]   select[_ngcontent-%COMP%]{margin:1rem 0 1rem 1rem}[_nghost-%COMP%]   label[_ngcontent-%COMP%]{margin:1rem 0 1rem 1rem;line-height:2.5rem}\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PagerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'angular2-smart-table-pager',\n      template: `\n    <nav *ngIf=\"shouldShow()\" class=\"angular2-smart-pagination-nav\">\n      <ul class=\"angular2-smart-pagination pagination\">\n        <li class=\"angular2-smart-page-item page-item\" [ngClass]=\"{disabled: getPage() == 1}\">\n          <a class=\"angular2-smart-page-link page-link\" href=\"#\"\n          (click)=\"getPage() == 1 ? false : paginate(1)\" aria-label=\"First\">\n            <span aria-hidden=\"true\">&laquo;</span>\n            <span class=\"sr-only\">First</span>\n          </a>\n        </li>\n        <li class=\"angular2-smart-page-item page-item\" [ngClass]=\"{disabled: getPage() == 1}\">\n          <a class=\"angular2-smart-page-link page-link page-link-prev\" href=\"#\"\n             (click)=\"getPage() == 1 ? false : prev()\" aria-label=\"Prev\">\n            <span aria-hidden=\"true\">&lt;</span>\n            <span class=\"sr-only\">Prev</span>\n          </a>\n        </li>\n        <li class=\"angular2-smart-page-item page-item\"\n        [ngClass]=\"{active: getPage() == page}\" *ngFor=\"let page of getPages()\">\n          <span class=\"angular2-smart-page-link page-link\"\n          *ngIf=\"getPage() == page\">{{ page }} <span class=\"sr-only\">(current)</span></span>\n          <a class=\"angular2-smart-page-link page-link\" href=\"#\"\n          (click)=\"paginate(page)\" *ngIf=\"getPage() != page\">{{ page }}</a>\n        </li>\n\n        <li class=\"angular2-smart-page-item page-item\"\n            [ngClass]=\"{disabled: getPage() == getLast()}\">\n          <a class=\"angular2-smart-page-link page-link page-link-next\" href=\"#\"\n             (click)=\"getPage() == getLast() ? false : next()\" aria-label=\"Next\">\n            <span aria-hidden=\"true\">&gt;</span>\n            <span class=\"sr-only\">Next</span>\n          </a>\n        </li>\n        \n        <li class=\"angular2-smart-page-item page-item\"\n        [ngClass]=\"{disabled: getPage() == getLast()}\">\n          <a class=\"angular2-smart-page-link page-link\" href=\"#\"\n          (click)=\"getPage() == getLast() ? false : paginate(getLast())\" aria-label=\"Last\">\n            <span aria-hidden=\"true\">&raquo;</span>\n            <span class=\"sr-only\">Last</span>\n          </a>\n        </li>\n      </ul>\n    </nav>\n    \n    <nav *ngIf=\"perPageSelect && perPageSelect.length > 0\" class=\"angular2-smart-pagination-per-page\">\n      <label for=\"per-page\">\n        Per Page:\n      </label>\n      <select (change)=\"onChangePerPage($event)\" [(ngModel)]=\"currentPerPage\" id=\"per-page\">\n        <option *ngFor=\"let item of perPageSelect\" [value]=\"item\">{{ item }}</option>\n      </select>\n    </nav>\n  `,\n      styles: [\".angular2-smart-pagination{display:inline-flex;font-size:.875em;padding:0}.angular2-smart-pagination .sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}.angular2-smart-pagination .angular2-smart-page-item{display:inline}.angular2-smart-pagination .page-link-next,.angular2-smart-pagination .page-link-prev{font-size:10px}:host{display:flex;justify-content:space-between}:host select{margin:1rem 0 1rem 1rem}:host label{margin:1rem 0 1rem 1rem;line-height:2.5rem}\\n\"]\n    }]\n  }], null, {\n    source: [{\n      type: Input\n    }],\n    perPageSelect: [{\n      type: Input\n    }],\n    changePage: [{\n      type: Output\n    }]\n  });\n})();\n\nclass Angular2SmartTableComponent {\n  constructor() {\n    this.settings = {};\n    this.rowSelect = new EventEmitter();\n    this.rowDeselect = new EventEmitter();\n    this.userRowSelect = new EventEmitter();\n    this.delete = new EventEmitter();\n    this.edit = new EventEmitter();\n    this.create = new EventEmitter();\n    this.custom = new EventEmitter();\n    this.deleteConfirm = new EventEmitter();\n    this.editConfirm = new EventEmitter();\n    this.createConfirm = new EventEmitter();\n    this.rowHover = new EventEmitter();\n    this.afterGridInit = new EventEmitter();\n    this.defaultSettings = {\n      mode: 'inline',\n      selectMode: SelectModeOptions.Single,\n\n      /**\n       * Points to an element in all data\n       *\n       * when < 0 all lines must be deselected\n       */\n      selectedRowIndex: 0,\n      switchPageToSelectedRowPage: false,\n      hideHeader: false,\n      hideSubHeader: false,\n      resizable: false,\n      hideable: false,\n      actions: {\n        columnTitle: 'Actions',\n        add: true,\n        edit: true,\n        delete: true,\n        custom: [],\n        position: 'left' // left|right\n\n      },\n      filter: {\n        inputClass: ''\n      },\n      edit: {\n        inputClass: '',\n        editButtonContent: 'Edit',\n        saveButtonContent: 'Update',\n        cancelButtonContent: 'Cancel',\n        confirmSave: false\n      },\n      add: {\n        inputClass: '',\n        addButtonContent: 'Add New',\n        createButtonContent: 'Create',\n        cancelButtonContent: 'Cancel',\n        confirmCreate: false\n      },\n      delete: {\n        deleteButtonContent: 'Delete',\n        confirmDelete: false\n      },\n      expand: {\n        expandRowButtonContent: 'Expand'\n      },\n      attr: {\n        id: '',\n        class: ''\n      },\n      noDataMessage: 'No data found',\n      columns: {},\n      pager: {\n        display: true,\n        page: 1,\n        perPage: 10\n      },\n      rowClassFunction: () => ''\n    };\n    this.isAllSelected = false;\n    this.destroyed$ = new Subject();\n  }\n\n  ngOnChanges(changes) {\n    if (this.grid) {\n      if (changes['settings']) {\n        this.grid.setSettings(this.prepareSettings());\n      }\n\n      if (changes['source']) {\n        this.source = this.prepareSource();\n        this.grid.setSource(this.source);\n      }\n    } else {\n      this.initGrid();\n    }\n\n    this.tableId = this.grid.getSetting('attr.id');\n    this.tableClass = this.grid.getSetting('attr.class');\n    this.isHideHeader = this.grid.getSetting('hideHeader');\n    this.isHideSubHeader = this.grid.getSetting('hideSubHeader');\n    this.isPagerDisplay = this.grid.getSetting('pager.display');\n    this.isPagerDisplay = this.grid.getSetting('pager.display');\n    this.perPageSelect = this.grid.getSetting('pager.perPageSelect');\n    this.rowClassFunction = this.grid.getSetting('rowClassFunction');\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next();\n  }\n\n  selectRow(index, switchPageToSelectedRowPage = this.grid.getSetting('switchPageToSelectedRowPage')) {\n    if (!this.grid) {\n      return;\n    }\n\n    this.grid.settings.selectedRowIndex = index;\n\n    if (this.isIndexOutOfRange(index)) {\n      // we need to deselect all rows if we got an incorrect index\n      this.deselectAllRows();\n      return;\n    }\n\n    if (switchPageToSelectedRowPage) {\n      const source = this.source;\n      const paging = source.getPaging();\n      const page = getPageForRowIndex(index, paging.perPage);\n      index = index % paging.perPage;\n      this.grid.settings.selectedRowIndex = index;\n\n      if (page !== paging.page) {\n        source.setPage(page);\n        return;\n      }\n    }\n\n    const row = this.grid.getRows()[index];\n\n    if (row) {\n      this.onSelectRow(row);\n    } else {\n      // we need to deselect all rows if we got an incorrect index\n      this.deselectAllRows();\n    }\n  }\n\n  deselectAllRows() {\n    this.grid.dataSet.deselectAll();\n    this.emitDeselectRow(null);\n  }\n\n  editRowSelect(row) {\n    if (this.grid.getSetting('selectMode') === 'multi') {\n      this.onMultipleSelectRow(row);\n    } else {\n      this.onSelectRow(row);\n    }\n  }\n\n  onUserSelectRow(row) {\n    if (this.grid.getSetting('selectMode') !== 'multi') {\n      this.grid.selectRow(row);\n      this.emitUserSelectRow(row);\n      this.emitSelectRow(row);\n    }\n  }\n\n  onRowHover(row) {\n    this.rowHover.emit(row);\n  }\n\n  multipleSelectRow(row) {\n    this.grid.multipleSelectRow(row);\n    this.emitUserSelectRow(row);\n    this.emitSelectRow(row);\n  }\n\n  onSelectAllRows($event) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.isAllSelected = !this.isAllSelected;\n      yield this.grid.selectAllRows(this.isAllSelected);\n      this.emitUserSelectRow(null);\n      this.emitSelectRow(null);\n    });\n  }\n\n  onSelectRow(row) {\n    this.grid.selectRow(row);\n    this.emitSelectRow(row);\n  }\n\n  onExpandRow(row) {\n    this.grid.expandRow(row);\n  }\n\n  onMultipleSelectRow(row) {\n    this.emitSelectRow(row);\n  }\n\n  initGrid() {\n    this.source = this.prepareSource();\n    this.grid = new Grid(this.source, this.prepareSettings());\n    this.subscribeToOnSelectRow();\n    this.subscribeToOnDeselectRow();\n    /** Delay a bit the grid init event trigger to prevent empty rows */\n\n    setTimeout(() => {\n      this.afterGridInit.emit(this.grid.dataSet);\n    }, 10);\n  }\n\n  prepareSource() {\n    if (this.source instanceof DataSource) {\n      return this.source;\n    } else if (this.source instanceof Array) {\n      return new LocalDataSource(this.source);\n    }\n\n    return new LocalDataSource();\n  }\n\n  prepareSettings() {\n    return deepExtend({}, this.defaultSettings, this.settings);\n  }\n\n  changePage($event) {\n    this.resetAllSelector();\n  }\n\n  sort($event) {\n    this.resetAllSelector();\n  }\n\n  filter($event) {\n    this.resetAllSelector();\n  }\n\n  getNotVisibleColumns() {\n    var _a, _b;\n\n    return ((_b = (_a = this.grid) === null || _a === void 0 ? void 0 : _a.getColumns()) !== null && _b !== void 0 ? _b : []).filter(column => column.hide);\n  }\n\n  toggleColumnVisibility(columnId) {\n    this.settings.columns[columnId].hide = false; //this.grid.setSettings(this.settings);\n\n    this.grid.setSettings(this.prepareSettings());\n  }\n\n  onHideHeader(columnId) {\n    this.settings.columns[columnId].hide = true;\n    this.grid.setSettings(this.prepareSettings());\n  }\n\n  resetAllSelector() {// this.isAllSelected = false;\n  }\n\n  emitUserSelectRow(row) {\n    const selectedRows = this.grid.getSelectedRows();\n    const selectedItems = this.grid.getSelectedItems();\n    this.userRowSelect.emit({\n      data: row ? row.getData() : null,\n      isSelected: row ? row.getIsSelected() : null,\n      source: this.source,\n      selected: selectedRows && selectedRows.length ? selectedRows.map(r => r.getData()) : [],\n      selectedItems\n    });\n  }\n\n  emitSelectRow(row) {\n    const data = {\n      data: row ? row.getData() : null,\n      isSelected: row ? row.getIsSelected() : null,\n      isExpanded: row ? row.getIsExpanded() : null,\n      source: this.source\n    };\n    this.rowSelect.emit(data);\n\n    if (!(row === null || row === void 0 ? void 0 : row.isSelected)) {\n      this.rowDeselect.emit(data);\n    }\n\n    if (!(row === null || row === void 0 ? void 0 : row.isExpanded)) {\n      this.rowDeselect.emit(data);\n    }\n  }\n\n  emitDeselectRow(row) {\n    if (row) this.rowDeselect.emit({\n      data: row ? row.getData() : null,\n      isSelected: row ? row.getIsSelected() : null,\n      source: this.source\n    });\n  }\n\n  isIndexOutOfRange(index) {\n    var _a;\n\n    const dataAmount = (_a = this.source) === null || _a === void 0 ? void 0 : _a.count();\n    return index < 0 || typeof dataAmount === 'number' && index >= dataAmount;\n  }\n\n  subscribeToOnSelectRow() {\n    if (this.onSelectRowSubscription) {\n      this.onSelectRowSubscription.unsubscribe();\n    }\n\n    this.onSelectRowSubscription = this.grid.onSelectRow().pipe(takeUntil(this.destroyed$)).subscribe(row => {\n      this.emitSelectRow(row);\n    });\n  }\n\n  subscribeToOnDeselectRow() {\n    if (this.onDeselectRowSubscription) {\n      this.onDeselectRowSubscription.unsubscribe();\n    }\n\n    this.onDeselectRowSubscription = this.grid.onDeselectRow().pipe(takeUntil(this.destroyed$)).subscribe(row => {\n      this.emitDeselectRow(row);\n    });\n  }\n\n}\n\nAngular2SmartTableComponent.ɵfac = function Angular2SmartTableComponent_Factory(t) {\n  return new (t || Angular2SmartTableComponent)();\n};\n\nAngular2SmartTableComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: Angular2SmartTableComponent,\n  selectors: [[\"angular2-smart-table\"]],\n  inputs: {\n    source: \"source\",\n    settings: \"settings\"\n  },\n  outputs: {\n    rowSelect: \"rowSelect\",\n    rowDeselect: \"rowDeselect\",\n    userRowSelect: \"userRowSelect\",\n    delete: \"delete\",\n    edit: \"edit\",\n    create: \"create\",\n    custom: \"custom\",\n    deleteConfirm: \"deleteConfirm\",\n    editConfirm: \"editConfirm\",\n    createConfirm: \"createConfirm\",\n    rowHover: \"rowHover\",\n    afterGridInit: \"afterGridInit\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 6,\n  vars: 10,\n  consts: [[3, \"tags\", \"close\"], [2, \"overflow-x\", \"auto\", \"-webkit-overflow-scrolling\", \"touch\"], [3, \"id\", \"ngClass\"], [\"angular2-st-thead\", \"\", 3, \"grid\", \"isAllSelected\", \"source\", \"createConfirm\", \"create\", \"selectAllRows\", \"sort\", \"hide\", \"filter\", 4, \"ngIf\"], [\"angular2-st-tbody\", \"\", 3, \"grid\", \"source\", \"deleteConfirm\", \"editConfirm\", \"rowClassFunction\", \"edit\", \"delete\", \"custom\", \"userSelectRow\", \"editRowSelect\", \"multipleSelectRow\", \"onExpandRow\", \"rowHover\"], [3, \"source\", \"perPageSelect\", \"changePage\", 4, \"ngIf\"], [\"angular2-st-thead\", \"\", 3, \"grid\", \"isAllSelected\", \"source\", \"createConfirm\", \"create\", \"selectAllRows\", \"sort\", \"hide\", \"filter\"], [3, \"source\", \"perPageSelect\", \"changePage\"]],\n  template: function Angular2SmartTableComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"angular2-smart-table-tags-list\", 0);\n      i0.ɵɵlistener(\"close\", function Angular2SmartTableComponent_Template_angular2_smart_table_tags_list_close_0_listener($event) {\n        return ctx.toggleColumnVisibility($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"table\", 2);\n      i0.ɵɵtemplate(3, Angular2SmartTableComponent_thead_3_Template, 1, 4, \"thead\", 3);\n      i0.ɵɵelementStart(4, \"tbody\", 4);\n      i0.ɵɵlistener(\"edit\", function Angular2SmartTableComponent_Template_tbody_edit_4_listener($event) {\n        return ctx.edit.emit($event);\n      })(\"delete\", function Angular2SmartTableComponent_Template_tbody_delete_4_listener($event) {\n        return ctx.delete.emit($event);\n      })(\"custom\", function Angular2SmartTableComponent_Template_tbody_custom_4_listener($event) {\n        return ctx.custom.emit($event);\n      })(\"userSelectRow\", function Angular2SmartTableComponent_Template_tbody_userSelectRow_4_listener($event) {\n        return ctx.onUserSelectRow($event);\n      })(\"editRowSelect\", function Angular2SmartTableComponent_Template_tbody_editRowSelect_4_listener($event) {\n        return ctx.editRowSelect($event);\n      })(\"multipleSelectRow\", function Angular2SmartTableComponent_Template_tbody_multipleSelectRow_4_listener($event) {\n        return ctx.multipleSelectRow($event);\n      })(\"onExpandRow\", function Angular2SmartTableComponent_Template_tbody_onExpandRow_4_listener($event) {\n        return ctx.onExpandRow($event);\n      })(\"rowHover\", function Angular2SmartTableComponent_Template_tbody_rowHover_4_listener($event) {\n        return ctx.onRowHover($event);\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(5, Angular2SmartTableComponent_angular2_smart_table_pager_5_Template, 1, 2, \"angular2-smart-table-pager\", 5);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"tags\", ctx.getNotVisibleColumns());\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"id\", ctx.tableId)(\"ngClass\", ctx.tableClass);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isHideHeader || !ctx.isHideSubHeader);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"grid\", ctx.grid)(\"source\", ctx.source)(\"deleteConfirm\", ctx.deleteConfirm)(\"editConfirm\", ctx.editConfirm)(\"rowClassFunction\", ctx.rowClassFunction);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isPagerDisplay);\n    }\n  },\n  directives: [TagsListComponent, NgxSmartTableTheadComponent, NgxSmartTableTbodyComponent, PagerComponent, i2.NgClass, i2.NgIf],\n  styles: [\"[_nghost-%COMP%]{font-size:1rem}[_nghost-%COMP%]     *{box-sizing:border-box}[_nghost-%COMP%]     button, [_nghost-%COMP%]     input, [_nghost-%COMP%]     optgroup, [_nghost-%COMP%]     select, [_nghost-%COMP%]     textarea{color:inherit;font:inherit;margin:0}[_nghost-%COMP%]     table{line-height:1.5em;border-collapse:collapse;border-spacing:0;display:table;width:100%;max-width:100%;overflow:auto;word-break:normal;word-break:keep-all}[_nghost-%COMP%]     table tr th{font-weight:700;position:relative}[_nghost-%COMP%]     table tr th .angular2-resizer-block{width:8px;height:100%;position:absolute;right:0;top:0;cursor:col-resize}[_nghost-%COMP%]     table tr section{font-size:.75em;font-weight:700}[_nghost-%COMP%]     table tr td, [_nghost-%COMP%]     table tr th{font-size:.875em;margin:0;padding:.5em 1em}[_nghost-%COMP%]     a{color:#1e6bb8;text-decoration:none}[_nghost-%COMP%]     a:hover{text-decoration:underline}\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Angular2SmartTableComponent, [{\n    type: Component,\n    args: [{\n      selector: 'angular2-smart-table',\n      template: \"<angular2-smart-table-tags-list\\n  [tags]=\\\"getNotVisibleColumns()\\\" (close)=\\\"toggleColumnVisibility($event)\\\"\\n></angular2-smart-table-tags-list>\\n\\n<div style=\\\"overflow-x: auto; -webkit-overflow-scrolling: touch\\\">\\n  <table [id]=\\\"tableId\\\" [ngClass]=\\\"tableClass\\\">\\n    <thead\\n      angular2-st-thead\\n      *ngIf=\\\"!isHideHeader || !isHideSubHeader\\\"\\n      [grid]=\\\"grid\\\"\\n      [isAllSelected]=\\\"isAllSelected\\\"\\n      [source]=\\\"source\\\"\\n      [createConfirm]=\\\"createConfirm\\\"\\n      (create)=\\\"create.emit($event)\\\"\\n      (selectAllRows)=\\\"onSelectAllRows($event)\\\"\\n      (sort)=\\\"sort($event)\\\"\\n      (hide)=\\\"onHideHeader($event)\\\"\\n      (filter)=\\\"filter($event)\\\"\\n    ></thead>\\n\\n    <tbody\\n      angular2-st-tbody\\n      [grid]=\\\"grid\\\"\\n      [source]=\\\"source\\\"\\n      [deleteConfirm]=\\\"deleteConfirm\\\"\\n      [editConfirm]=\\\"editConfirm\\\"\\n      [rowClassFunction]=\\\"rowClassFunction\\\"\\n      (edit)=\\\"edit.emit($event)\\\"\\n      (delete)=\\\"delete.emit($event)\\\"\\n      (custom)=\\\"custom.emit($event)\\\"\\n      (userSelectRow)=\\\"onUserSelectRow($event)\\\"\\n      (editRowSelect)=\\\"editRowSelect($event)\\\"\\n      (multipleSelectRow)=\\\"multipleSelectRow($event)\\\"\\n      (onExpandRow)=\\\"onExpandRow($event)\\\"\\n      (rowHover)=\\\"onRowHover($event)\\\"\\n    ></tbody>\\n  </table>\\n</div>\\n<angular2-smart-table-pager\\n  *ngIf=\\\"isPagerDisplay\\\"\\n  [source]=\\\"source\\\"\\n  [perPageSelect]=\\\"perPageSelect\\\"\\n  (changePage)=\\\"changePage($event)\\\"\\n>\\n</angular2-smart-table-pager>\\n\",\n      styles: [\":host{font-size:1rem}:host ::ng-deep *{box-sizing:border-box}:host ::ng-deep button,:host ::ng-deep input,:host ::ng-deep optgroup,:host ::ng-deep select,:host ::ng-deep textarea{color:inherit;font:inherit;margin:0}:host ::ng-deep table{line-height:1.5em;border-collapse:collapse;border-spacing:0;display:table;width:100%;max-width:100%;overflow:auto;word-break:normal;word-break:keep-all}:host ::ng-deep table tr th{font-weight:700;position:relative}:host ::ng-deep table tr th .angular2-resizer-block{width:8px;height:100%;position:absolute;right:0;top:0;cursor:col-resize}:host ::ng-deep table tr section{font-size:.75em;font-weight:700}:host ::ng-deep table tr td,:host ::ng-deep table tr th{font-size:.875em;margin:0;padding:.5em 1em}:host ::ng-deep a{color:#1e6bb8;text-decoration:none}:host ::ng-deep a:hover{text-decoration:underline}\\n\"]\n    }]\n  }], null, {\n    source: [{\n      type: Input\n    }],\n    settings: [{\n      type: Input\n    }],\n    rowSelect: [{\n      type: Output\n    }],\n    rowDeselect: [{\n      type: Output\n    }],\n    userRowSelect: [{\n      type: Output\n    }],\n    delete: [{\n      type: Output\n    }],\n    edit: [{\n      type: Output\n    }],\n    create: [{\n      type: Output\n    }],\n    custom: [{\n      type: Output\n    }],\n    deleteConfirm: [{\n      type: Output\n    }],\n    editConfirm: [{\n      type: Output\n    }],\n    createConfirm: [{\n      type: Output\n    }],\n    rowHover: [{\n      type: Output\n    }],\n    afterGridInit: [{\n      type: Output\n    }]\n  });\n})();\n\nconst CELL_COMPONENTS = [CellComponent, EditCellDefault, DefaultEditor, CustomEditComponent, DefaultEditComponent, EditCellComponent, CheckboxEditorComponent, CompleterEditorComponent, InputEditorComponent, SelectEditorComponent, TextareaEditorComponent, CustomViewComponent, ViewCellComponent];\n\nclass CellModule {}\n\nCellModule.ɵfac = function CellModule_Factory(t) {\n  return new (t || CellModule)();\n};\n\nCellModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: CellModule\n});\nCellModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, FormsModule, Ng2CompleterModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CellModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, FormsModule, Ng2CompleterModule],\n      declarations: [...CELL_COMPONENTS],\n      exports: [...CELL_COMPONENTS]\n    }]\n  }], null, null);\n})();\n\nconst FILTER_COMPONENTS = [FilterDefault, DefaultFilter, FilterComponent, DateFilterComponent, DefaultFilterComponent, CustomFilterComponent, CheckboxFilterComponent, CompleterFilterComponent, InputFilterComponent, SelectFilterComponent, MselectFilterComponent];\n\nclass FilterModule {}\n\nFilterModule.ɵfac = function FilterModule_Factory(t) {\n  return new (t || FilterModule)();\n};\n\nFilterModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: FilterModule\n});\nFilterModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, FormsModule, ReactiveFormsModule, Ng2CompleterModule, AngularMultiSelectModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FilterModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, FormsModule, ReactiveFormsModule, Ng2CompleterModule, AngularMultiSelectModule],\n      declarations: [...FILTER_COMPONENTS],\n      exports: [...FILTER_COMPONENTS]\n    }]\n  }], null, null);\n})();\n\nclass PagerModule {}\n\nPagerModule.ɵfac = function PagerModule_Factory(t) {\n  return new (t || PagerModule)();\n};\n\nPagerModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: PagerModule\n});\nPagerModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, FormsModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PagerModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, FormsModule],\n      declarations: [PagerComponent],\n      exports: [PagerComponent]\n    }]\n  }], null, null);\n})();\n\nclass TabsModule {}\n\nTabsModule.ɵfac = function TabsModule_Factory(t) {\n  return new (t || TabsModule)();\n};\n\nTabsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TabsModule\n});\nTabsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TabsModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [TagComponent, TagsListComponent],\n      exports: [TagComponent, TagsListComponent]\n    }]\n  }], null, null);\n})();\n\nconst TBODY_COMPONENTS = [TbodyCreateCancelComponent, TbodyEditDeleteComponent, TbodyCustomComponent, TbodyExpandRowComponent, TbodyCustomItemComponent, NgxSmartTableTbodyComponent];\n\nclass TBodyModule {}\n\nTBodyModule.ɵfac = function TBodyModule_Factory(t) {\n  return new (t || TBodyModule)();\n};\n\nTBodyModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TBodyModule\n});\nTBodyModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, FormsModule, CellModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TBodyModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, FormsModule, CellModule],\n      declarations: [...TBODY_COMPONENTS],\n      exports: [...TBODY_COMPONENTS]\n    }]\n  }], null, null);\n})();\n\nconst DIRECTIVES = [NgxResizerDirective];\n\nclass DirectivesModule {}\n\nDirectivesModule.ɵfac = function DirectivesModule_Factory(t) {\n  return new (t || DirectivesModule)();\n};\n\nDirectivesModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: DirectivesModule\n});\nDirectivesModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DirectivesModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [...DIRECTIVES],\n      exports: [...DIRECTIVES]\n    }]\n  }], null, null);\n})();\n\nconst THEAD_COMPONENTS = [ActionsComponent, ActionsTitleComponent, AddButtonComponent, CheckboxSelectAllComponent, ColumnTitleComponent, TitleComponent, TheadFitlersRowComponent, TheadFormRowComponent, TheadTitlesRowComponent, NgxSmartTableTheadComponent];\n\nclass THeadModule {}\n\nTHeadModule.ɵfac = function THeadModule_Factory(t) {\n  return new (t || THeadModule)();\n};\n\nTHeadModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: THeadModule\n});\nTHeadModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, FormsModule, FilterModule, CellModule, DirectivesModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(THeadModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, FormsModule, FilterModule, CellModule, DirectivesModule],\n      declarations: [...THEAD_COMPONENTS],\n      exports: [...THEAD_COMPONENTS]\n    }]\n  }], null, null);\n})();\n\nclass Angular2SmartTableModule {}\n\nAngular2SmartTableModule.ɵfac = function Angular2SmartTableModule_Factory(t) {\n  return new (t || Angular2SmartTableModule)();\n};\n\nAngular2SmartTableModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: Angular2SmartTableModule\n});\nAngular2SmartTableModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, FormsModule, ReactiveFormsModule, CellModule, FilterModule, PagerModule, TBodyModule, THeadModule, TabsModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Angular2SmartTableModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [Angular2SmartTableComponent],\n      imports: [CommonModule, FormsModule, ReactiveFormsModule, CellModule, FilterModule, PagerModule, TBodyModule, THeadModule, TabsModule],\n      exports: [Angular2SmartTableComponent]\n    }]\n  }], null, null);\n})();\n\nclass ServerSourceConf {\n  constructor({\n    endPoint = '',\n    sortFieldKey = '',\n    sortDirKey = '',\n    pagerPageKey = '',\n    pagerLimitKey = '',\n    filterFieldKey = '',\n    totalKey = '',\n    dataKey = ''\n  } = {}) {\n    this.endPoint = endPoint ? endPoint : '';\n    this.sortFieldKey = sortFieldKey ? sortFieldKey : ServerSourceConf.SORT_FIELD_KEY;\n    this.sortDirKey = sortDirKey ? sortDirKey : ServerSourceConf.SORT_DIR_KEY;\n    this.pagerPageKey = pagerPageKey ? pagerPageKey : ServerSourceConf.PAGER_PAGE_KEY;\n    this.pagerLimitKey = pagerLimitKey ? pagerLimitKey : ServerSourceConf.PAGER_LIMIT_KEY;\n    this.filterFieldKey = filterFieldKey ? filterFieldKey : ServerSourceConf.FILTER_FIELD_KEY;\n    this.totalKey = totalKey ? totalKey : ServerSourceConf.TOTAL_KEY;\n    this.dataKey = dataKey ? dataKey : ServerSourceConf.DATA_KEY;\n  }\n\n}\n\nServerSourceConf.SORT_FIELD_KEY = '_sort';\nServerSourceConf.SORT_DIR_KEY = '_order';\nServerSourceConf.PAGER_PAGE_KEY = '_page';\nServerSourceConf.PAGER_LIMIT_KEY = '_limit';\nServerSourceConf.FILTER_FIELD_KEY = '#field#_like';\nServerSourceConf.TOTAL_KEY = 'x-total-count';\nServerSourceConf.DATA_KEY = '';\n\nclass ServerDataSource extends LocalDataSource {\n  constructor(http, conf = {}) {\n    super();\n    this.http = http;\n    this.lastRequestCount = 0;\n    this.conf = new ServerSourceConf(conf);\n\n    if (!this.conf.endPoint) {\n      throw new Error('At least endPoint must be specified as a configuration of the server data source.');\n    }\n  }\n\n  count() {\n    return this.lastRequestCount;\n  }\n\n  getElements() {\n    return this.requestElements().pipe(map(res => {\n      this.lastRequestCount = this.extractTotalFromResponse(res);\n      this.data = this.extractDataFromResponse(res);\n      return this.data;\n    })).toPromise();\n  }\n  /**\n   * Extracts array of data from server response\n   * @param res\n   * @returns {any}\n   */\n\n\n  extractDataFromResponse(res) {\n    const rawData = res.body;\n    const data = !!this.conf.dataKey ? getDeepFromObject(rawData, this.conf.dataKey, []) : rawData;\n\n    if (data instanceof Array) {\n      return data;\n    }\n\n    throw new Error(`Data must be an array.\n    Please check that data extracted from the server response by the key '${this.conf.dataKey}' exists and is array.`);\n  }\n  /**\n   * Extracts total rows count from the server response\n   * Looks for the count in the heders first, then in the response body\n   * @param res\n   * @returns {any}\n   */\n\n\n  extractTotalFromResponse(res) {\n    if (res.headers.has(this.conf.totalKey)) {\n      return +res.headers.get(this.conf.totalKey);\n    } else {\n      const rawData = res.body;\n      return getDeepFromObject(rawData, this.conf.totalKey, 0);\n    }\n  }\n\n  requestElements() {\n    let httpParams = this.createRequesParams();\n    return this.http.get(this.conf.endPoint, {\n      params: httpParams,\n      observe: 'response'\n    });\n  }\n\n  createRequesParams() {\n    let httpParams = new HttpParams();\n    httpParams = this.addSortRequestParams(httpParams);\n    httpParams = this.addFilterRequestParams(httpParams);\n    return this.addPagerRequestParams(httpParams);\n  }\n\n  addSortRequestParams(httpParams) {\n    if (this.sortConf) {\n      this.sortConf.forEach(fieldConf => {\n        httpParams = httpParams.set(this.conf.sortFieldKey, fieldConf.field);\n        httpParams = httpParams.set(this.conf.sortDirKey, fieldConf.direction.toUpperCase());\n      });\n    }\n\n    return httpParams;\n  }\n\n  addFilterRequestParams(httpParams) {\n    if (this.filterConf.filters) {\n      this.filterConf.filters.forEach(fieldConf => {\n        if (fieldConf['search']) {\n          httpParams = httpParams.set(this.conf.filterFieldKey.replace('#field#', fieldConf['field']), fieldConf['search']);\n        }\n      });\n    }\n\n    return httpParams;\n  }\n\n  addPagerRequestParams(httpParams) {\n    if (this.pagingConf && this.pagingConf['page'] && this.pagingConf['perPage']) {\n      httpParams = httpParams.set(this.conf.pagerPageKey, this.pagingConf['page']);\n      httpParams = httpParams.set(this.conf.pagerLimitKey, this.pagingConf['perPage']);\n    }\n\n    return httpParams;\n  }\n\n}\n/*\n * Public API Surface of angular2-smart-table\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { Angular2SmartTableComponent, Angular2SmartTableModule, Cell, DataSet, DefaultEditor, DefaultFilter, IColumnType, LocalDataSource, Row, SelectModeOptions, ServerDataSource };","map":{"version":3,"names":["i2","CommonModule","i0","EventEmitter","Component","Input","Output","Injectable","Directive","HostListener","ViewContainerRef","ViewChild","ChangeDetectionStrategy","ViewChildren","NgModule","i1","NgControl","FormControl","FormsModule","ReactiveFormsModule","__awaiter","Subject","of","combineLatest","takeUntil","filter","skip","distinctUntilChanged","debounceTime","map","delay","cloneDeep","i1$1","Ng2CompleterModule","i1$2","HttpParams","i2$1","AngularMultiSelectModule","DataSource","constructor","onChangedSource","onAddedSource","onUpdatedSource","onRemovedSource","refresh","emitOnChanged","load","data","Promise","resolve","onChanged","asObservable","onAdded","onUpdated","onRemoved","prepend","element","emitOnAdded","append","add","remove","emitOnRemoved","update","values","emitOnUpdated","empty","setSort","conf","doEmit","setFilter","andOperator","addFilter","fieldConf","setPaging","page","perPage","setPage","next","action","getElements","then","elements","paging","getPaging","getFilter","sort","getSort","defaultObjectComparator","direction","left","right","defaultNumberComparator","defaultStringComparator","localeCompare","defaultComparator","leftIsNumeric","isNaN","parseFloat","rightIsNumeric","leftIsString","rightIsString","Number","LocalSorter","field","customCompare","dir","compare","a","b","parts","split","propA","i","length","propB","call","defaultStringInclusionFilter","cellValue","search","cellName","_a","_b","sanitizedCellValue","toString","sanitizedSearchString","toLowerCase","includes","LocalFilter","customFilter","el","prop","LocalPager","paginate","slice","deepExtend","objects","arguments","target","args","Array","prototype","val","src","forEach","obj","isArray","Object","keys","key","Deferred","promise","reject","getDeepFromObject","object","name","defaultValue","level","k","getPageForRowIndex","index","Math","floor","LocalDataSource","filteredAndSorted","sortConf","filterConf","filters","pagingConf","selectedItems","reset","unshift","push","find","found","catch","Error","prepareData","getFilteredAndSorted","getAll","silent","count","toggleItem","row","isSelected","selectAllItems","checked","allItems","getSelectedItems","currentFieldConf","mergedData","concat","elem","pos","arr","indexOf","prepareValue","value","Cell","column","dataSet","newValue","getColumn","getRow","getValue","valid","getValuePrepareFunction","Function","prepare","PREPARE","getData","setValue","getId","id","getTitle","title","isEditable","isAddable","resetValue","Row","_dataSet","isInEditing","isExpanded","cells","process","getCell","theCell","getCells","getIsSelected","getIsExpanded","getNewData","assign","cell","setData","getColumns","createCell","defValue","settings","SelectModeOptions","IColumnType","Column","hide","type","Text","class","width","isSortable","isFilterable","sortDirection","defaultSortDirection","undefined","editor","config","component","renderComponent","getOnComponentInitFunction","onComponentInitFunction","getCompareFunction","compareFunction","valuePrepareFunction","getFilterFunction","filterFunction","getConfig","getFilterType","getFilterConfig","lookupSetting","compatKeys","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","placeholder","determineType","DataSet","columnSettings","columns","rows","willSelect","createColumns","createNewRow","selectedRows","createRows","getExpandedRow","expandedRow","console","warn","getSelectedRow","selectedRow","getRows","getFirstRow","getLastRow","findRowByData","deselectAll","clearExpandAll","selectRow","previousIsSelected","multipleSelectRow","expandRow","previousIsExpanded","selectPreviousRow","selectFirstRow","selectLastRow","selectRowByIndex","rowsLength","willSelectFirstRow","willSelectLastRow","select","selectedRowIndex","newRow","hasOwnProperty","Grid","source","createFormShown","onSelectRowSource","onDeselectRowSource","setSettings","setSource","detach","sourceOnChangedSubscription","unsubscribe","sourceOnUpdatedSubscription","showActionColumn","position","isCurrentActionsPosition","isActionsVisible","getSetting","isMultiSelectVisible","getNewRow","getDataSet","prepareSource","subscribe","changes","processDataChange","changedRow","onSelectRow","onDeselectRow","edit","create","confirmEmitter","deferred","newData","skipAdd","err","emit","confirm","save","skipEdit","delete","shouldProcessChange","determineRowToSelect","e","getRowIndexToSelect","shouldSkipSelection","initialSource","getInitialSort","getPageToSelect","getSelectedRows","r","selectAllRows","status","getSelectionInfo","switchPageToSelectedRowPage","dataAmount","pageToSelect","max","maxPageAmount","ceil","min","TagComponent","close","closeClicked","evt","stopPropagation","item","ɵfac","ɵcmp","selector","template","styles","TagsListComponent","closedTag","tag","NgForOf","tags","TableService","mouseMoveEvent$","ɵprov","providedIn","CheckboxSelectAllComponent","CheckboxControlValueAccessor","NgControlStatus","NgModel","grid","isAllSelected","ActionsTitleComponent","ref","ngAfterViewInit","nativeElement","classList","ngOnChanges","actionsColumnTitle","ElementRef","TitleComponent","currentDirection","firstChange","dataChangedSub","dataChanges","_sort","event","preventDefault","changeSortDirection","_hideColumnClicked","newDirection","NgIf","NgClass","isHideable","ColumnTitleComponent","NgxResizerDirective","elementRef","renderer","tableService","destroyed$","ngOnInit","pipe","isClicked","offset","pointerOffset","pageX","parentOffset","setStyle","parentElement","siblingElement","siblingOffset","onMouseEnter","parentNode","nextSibling","offsetWidth","onMouseDown","ngOnDestroy","Renderer2","ɵdir","TheadTitlesRowComponent","showActionColumnLeft","showActionColumnRight","isResizable","getVisibleColumns","AddButtonComponent","isActionAdd","addNewButtonContent","onAdd","FilterDefault","inputClass","query","onFilter","CustomFilterComponent","resolver","customComponent","componentFactory","resolveComponentFactory","dynamicTarget","createComponent","instance","destroy","ComponentFactoryResolver","read","static","DefaultFilter","changesSubscription","changesSubscription2","SelectFilterComponent","exist","inputControl","valueChanges","SelectControlValueAccessor","NgSelectOption","ɵNgSelectMultipleOption","CheckboxFilterComponent","filterActive","trueVal","true","falseVal","false","resetFilter","emitEvent","FormControlDirective","CompleterFilterComponent","completerService","completerContent","completer","dataService","local","searchFields","titleField","descriptionField","ev","inputTextChanged","CompleterService","CompleterCmp","DateFilterComponent","startDate","endDate","dateBefore","dateAfter","dateEqual","filterTypeSelect","filterType","filterOptions","val1","val2","NgSwitch","NgSwitchCase","DefaultValueAccessor","MselectFilterComponent","http","dropdownList","dropdownSettings","onfilterValues","bind","setting","singleSelection","text","selectAllText","unSelectAllText","enableSearchFilter","classes","maxHeight","autoPosition","searchArray","onItemSelect","updateQuery","OnItemDeSelect","onSelectAll","items","onDeSelectAll","join","HttpClient","AngularMultiSelect","InputFilterComponent","DefaultFilterComponent","NgSwitchDefault","FilterComponent","v","TheadFitlersRowComponent","filterInputClass","ActionsComponent","createButtonContent","cancelButtonContent","CustomViewComponent","createCustomComponent","callOnComponentInit","patchInstance","getPatch","rowData","ViewCellComponent","changeDetection","OnPush","EditCellDefault","edited","onEdited","onStopEditing","onClick","CustomEditComponent","DefaultEditor","disableEnterKeySave","SelectEditorComponent","SelectMultipleControlValueAccessor","TextareaEditorComponent","CheckboxEditorComponent","onChange","CompleterEditorComponent","completerStr","onEditedCompleter","InputEditorComponent","DefaultEditComponent","getEditorType","EditCellComponent","CellComponent","mode","isNew","createConfirm","editConfirm","TheadFormRowComponent","onCreate","addInputClass","getVisibleCells","NgxSmartTableTheadComponent","isHideHeader","isHideSubHeader","mouseMove","TbodyCustomItemComponent","TbodyCustomComponent","custom","onCustom","TbodyExpandRowComponent","onExpandRow","onExpand","expandRowButtonContent","TbodyEditDeleteComponent","editRowSelect","onEdit","onDelete","deleteConfirm","isActionEdit","isActionDelete","editRowButtonContent","deleteRowButtonContent","TbodyCreateCancelComponent","onSave","onCancelEdit","saveButtonContent","NgxSmartTableTbodyComponent","vcRef","cancel","userSelectRow","rowHover","hasChildComponent","cmp","expandedRowComponent","expandedRowChild","c","clear","first","tableColumnsCount","actionColumns","editInputClass","noDataMessage","onExpandRowClick","rowClassFunction","PagerComponent","perPageSelect","changePage","currentPerPage","isPageOutOfBounce","processPageChange","initPages","getLast","shouldShow","getPage","prev","getPages","pages","pagesCount","showPagesCount","middleOne","lastOne","firstOne","onChangePerPage","Angular2SmartTableComponent","rowSelect","rowDeselect","userRowSelect","afterGridInit","defaultSettings","selectMode","Single","hideHeader","hideSubHeader","resizable","hideable","actions","columnTitle","editButtonContent","confirmSave","addButtonContent","confirmCreate","deleteButtonContent","confirmDelete","expand","attr","pager","display","prepareSettings","initGrid","tableId","tableClass","isPagerDisplay","isIndexOutOfRange","deselectAllRows","emitDeselectRow","onMultipleSelectRow","onUserSelectRow","emitUserSelectRow","emitSelectRow","onRowHover","onSelectAllRows","$event","subscribeToOnSelectRow","subscribeToOnDeselectRow","setTimeout","resetAllSelector","getNotVisibleColumns","toggleColumnVisibility","columnId","onHideHeader","selected","onSelectRowSubscription","onDeselectRowSubscription","CELL_COMPONENTS","CellModule","ɵmod","ɵinj","imports","declarations","exports","FILTER_COMPONENTS","FilterModule","PagerModule","TabsModule","TBODY_COMPONENTS","TBodyModule","DIRECTIVES","DirectivesModule","THEAD_COMPONENTS","THeadModule","Angular2SmartTableModule","ServerSourceConf","endPoint","sortFieldKey","sortDirKey","pagerPageKey","pagerLimitKey","filterFieldKey","totalKey","dataKey","SORT_FIELD_KEY","SORT_DIR_KEY","PAGER_PAGE_KEY","PAGER_LIMIT_KEY","FILTER_FIELD_KEY","TOTAL_KEY","DATA_KEY","ServerDataSource","lastRequestCount","requestElements","res","extractTotalFromResponse","extractDataFromResponse","toPromise","rawData","body","headers","has","get","httpParams","createRequesParams","params","observe","addSortRequestParams","addFilterRequestParams","addPagerRequestParams","set","toUpperCase","replace"],"sources":["D:/temp/Projects/AddressBook/Contact/node_modules/angular2-smart-table/fesm2015/angular2-smart-table.mjs"],"sourcesContent":["import * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, Injectable, Directive, HostListener, ViewContainerRef, ViewChild, ChangeDetectionStrategy, ViewChildren, NgModule } from '@angular/core';\nimport * as i1 from '@angular/forms';\nimport { NgControl, FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { __awaiter } from 'tslib';\nimport { Subject, of, combineLatest } from 'rxjs';\nimport { takeUntil, filter, skip, distinctUntilChanged, debounceTime, map, delay } from 'rxjs/operators';\nimport { cloneDeep } from 'lodash-es';\nimport * as i1$1 from 'ng2-completer';\nimport { Ng2CompleterModule } from 'ng2-completer';\nimport * as i1$2 from '@angular/common/http';\nimport { HttpParams } from '@angular/common/http';\nimport * as i2$1 from 'angular2-multiselect-dropdown';\nimport { AngularMultiSelectModule } from 'angular2-multiselect-dropdown';\n\nclass DataSource {\n    constructor() {\n        this.onChangedSource = new Subject();\n        this.onAddedSource = new Subject();\n        this.onUpdatedSource = new Subject();\n        this.onRemovedSource = new Subject();\n    }\n    refresh() {\n        this.emitOnChanged('refresh');\n    }\n    load(data) {\n        this.emitOnChanged('load');\n        return Promise.resolve();\n    }\n    onChanged() {\n        return this.onChangedSource.asObservable();\n    }\n    onAdded() {\n        return this.onAddedSource.asObservable();\n    }\n    onUpdated() {\n        return this.onUpdatedSource.asObservable();\n    }\n    onRemoved() {\n        return this.onRemovedSource.asObservable();\n    }\n    prepend(element) {\n        this.emitOnAdded(element);\n        this.emitOnChanged('prepend');\n        return Promise.resolve();\n    }\n    append(element) {\n        this.emitOnAdded(element);\n        this.emitOnChanged('append');\n        return Promise.resolve();\n    }\n    add(element) {\n        this.emitOnAdded(element);\n        this.emitOnChanged('add');\n        return Promise.resolve();\n    }\n    remove(element) {\n        this.emitOnRemoved(element);\n        this.emitOnChanged('remove');\n        return Promise.resolve();\n    }\n    update(element, values) {\n        this.emitOnUpdated(element);\n        this.emitOnChanged('update');\n        return Promise.resolve();\n    }\n    empty() {\n        this.emitOnChanged('empty');\n        return Promise.resolve();\n    }\n    setSort(conf, doEmit) {\n        if (doEmit) {\n            this.emitOnChanged('sort');\n        }\n    }\n    setFilter(conf, andOperator, doEmit) {\n        if (doEmit) {\n            this.emitOnChanged('filter');\n        }\n    }\n    addFilter(fieldConf, andOperator, doEmit) {\n        if (doEmit) {\n            this.emitOnChanged('filter');\n        }\n    }\n    setPaging(page, perPage, doEmit) {\n        if (doEmit) {\n            this.emitOnChanged('paging');\n        }\n    }\n    setPage(page, doEmit) {\n        if (doEmit) {\n            this.emitOnChanged('page');\n        }\n    }\n    emitOnRemoved(element) {\n        this.onRemovedSource.next(element);\n    }\n    emitOnUpdated(element) {\n        this.onUpdatedSource.next(element);\n    }\n    emitOnAdded(element) {\n        this.onAddedSource.next(element);\n    }\n    emitOnChanged(action) {\n        this.getElements().then((elements) => this.onChangedSource.next({\n            action: action,\n            elements: elements,\n            paging: this.getPaging(),\n            filter: this.getFilter(),\n            sort: this.getSort(),\n        }));\n    }\n}\n\nfunction defaultObjectComparator(direction, left, right) {\n    if (left == null && right == null) {\n        return 0;\n    }\n    // only one of them can be null now\n    if (left == null || left < right) {\n        return -1 * direction;\n    }\n    if (right == null || right < left) {\n        return direction;\n    }\n    // none of them can be null now, and they must be equal\n    return 0;\n}\nfunction defaultNumberComparator(direction, left, right) {\n    // the default comparator already does what we want, so this function is merely a type-safe alias\n    return defaultObjectComparator(direction, left, right);\n}\nfunction defaultStringComparator(direction, left, right) {\n    if (left == null && right == null) {\n        return 0;\n    }\n    else if (left == null) {\n        return -1 * direction;\n    }\n    else if (right == null) {\n        return direction;\n    }\n    else {\n        return left.localeCompare(right) * direction;\n    }\n}\n/**\n * Compares two values with special treatment for numbers and strings.\n *\n * The rule is: if both values are of type number (or null), they are compared as if they were numbers.\n * If both values are either null, undefined or typeof string, they are compared as strings using the current locale.\n * Otherwise, they are compared using their natural ordering.\n *\n * Null values are considered less than any non-null element. Null and undefined are considered equal.\n *\n * @param direction 1 for ascending and -1 for descending (other values are not allowed)\n * @param left the left value\n * @param right the right value\n */\nfunction defaultComparator(direction, left, right) {\n    const leftIsNumeric = left == null || !isNaN(parseFloat(left));\n    const rightIsNumeric = right == null || !isNaN(parseFloat(right));\n    const leftIsString = left == null || (typeof left === 'string');\n    const rightIsString = right == null || (typeof right === 'string');\n    if (leftIsNumeric && rightIsNumeric) {\n        return defaultNumberComparator(direction, Number(left), Number(right));\n    }\n    else if (leftIsString && rightIsString) {\n        return defaultStringComparator(direction, left, right);\n    }\n    else {\n        return defaultObjectComparator(direction, left, right);\n    }\n}\nclass LocalSorter {\n    static sort(data, field, direction, customCompare) {\n        const dir = (direction === 'asc') ? 1 : -1;\n        const compare = customCompare ? customCompare : defaultComparator;\n        return data.sort((a, b) => {\n            let parts = field.split(\".\");\n            let propA = a;\n            for (let i = 0; i < parts.length && typeof propA !== 'undefined'; i++) {\n                propA = propA[parts[i]];\n            }\n            let propB = b;\n            for (let i = 0; i < parts.length && typeof propB !== 'undefined'; i++) {\n                propB = propB[parts[i]];\n            }\n            return compare.call(null, dir, propA, propB);\n        });\n    }\n}\n\n/**\n * A filter predicate that implements a case-insensitive string inclusion.\n *\n * @param cellValue the cell value to check\n * @param search the search/filter string to check against\n * @param data ignored\n * @param cellName ignored\n */\nfunction defaultStringInclusionFilter(cellValue, search, data, cellName) {\n    var _a, _b;\n    /* Implementation note: we declared the parameters as strings, but this does NOT mean they\n     * are actually strings because Typescript does NOT check the types. Therefore, we call toString() on the inputs.\n     */\n    const sanitizedCellValue = (_a = cellValue === null || cellValue === void 0 ? void 0 : cellValue.toString()) !== null && _a !== void 0 ? _a : '';\n    const sanitizedSearchString = (_b = search === null || search === void 0 ? void 0 : search.toString()) !== null && _b !== void 0 ? _b : '';\n    return sanitizedCellValue.toLowerCase().includes(sanitizedSearchString.toLowerCase());\n}\nclass LocalFilter {\n    static filter(data, field, search, customFilter) {\n        const filter = customFilter ? customFilter : defaultStringInclusionFilter;\n        return data.filter((el) => {\n            //const value = typeof el[field] === 'undefined' || el[field] === null ? '' : el[field];\n            //return filter.call(null, value, search, el);\n            let parts = field.split(\".\");\n            let prop = el;\n            for (var i = 0; i < parts.length && typeof prop !== 'undefined'; i++) {\n                prop = prop[parts[i]];\n            }\n            return filter.call(null, prop, search, data, field, el);\n        });\n    }\n}\n\nclass LocalPager {\n    static paginate(data, page, perPage) {\n        return data.slice(perPage * (page - 1), perPage * page);\n    }\n}\n\n/**\n * Extending object that entered in first argument.\n *\n * Returns extended object or false if have no target object or incorrect type.\n *\n * If you wish to clone source object (without modify it), just use empty new\n * object as first argument, like this:\n *   deepExtend({}, yourObj_1, [yourObj_N]);\n */\nconst deepExtend = function (...objects) {\n    if (arguments.length < 1 || typeof arguments[0] !== 'object') {\n        return false;\n    }\n    if (arguments.length < 2) {\n        return arguments[0];\n    }\n    const target = arguments[0];\n    // convert arguments to array and cut off target object\n    const args = Array.prototype.slice.call(arguments, 1);\n    let val, src;\n    args.forEach((obj) => {\n        // skip argument if it is array or isn't object\n        if (typeof obj !== 'object' || Array.isArray(obj)) {\n            return;\n        }\n        Object.keys(obj).forEach(function (key) {\n            src = target[key]; // source value\n            val = obj[key]; // new value\n            // recursion prevention\n            if (val === target) {\n                return;\n                /**\n                 * if new value isn't object then just overwrite by new value\n                 * instead of extending.\n                 */\n            }\n            else if (typeof val !== 'object' || val === null) {\n                target[key] = val;\n                return;\n                // just clone arrays (and recursive clone objects inside)\n            }\n            else if (Array.isArray(val)) {\n                target[key] = cloneDeep(val);\n                return;\n                // overwrite by new value if source isn't object or array\n            }\n            else if (typeof src !== 'object' || src === null || Array.isArray(src)) {\n                target[key] = deepExtend({}, val);\n                return;\n                // source value and new value is objects both, extending...\n            }\n            else {\n                target[key] = deepExtend(src, val);\n                return;\n            }\n        });\n    });\n    return target;\n};\nclass Deferred {\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\n// getDeepFromObject({result: {data: 1}}, 'result.data', 2); // returns 1\nfunction getDeepFromObject(object = {}, name, defaultValue) {\n    const keys = name.split('.');\n    // clone the object\n    let level = deepExtend({}, object);\n    keys.forEach((k) => {\n        if (level && typeof level[k] !== 'undefined') {\n            level = level[k];\n        }\n    });\n    return typeof level === 'undefined' ? defaultValue : level;\n}\nfunction getPageForRowIndex(index, perPage) {\n    // we need to add 1 to convert 0-based index to 1-based page number.\n    return Math.floor(index / perPage) + 1;\n}\n\nclass LocalDataSource extends DataSource {\n    constructor(data = []) {\n        super();\n        this.data = [];\n        this.filteredAndSorted = [];\n        this.sortConf = [];\n        this.filterConf = {\n            filters: [],\n            andOperator: true,\n        };\n        this.pagingConf = {};\n        this.selectedItems = [];\n        this.data = data;\n    }\n    load(data) {\n        this.data = data;\n        return super.load(data);\n    }\n    prepend(element) {\n        this.reset(true);\n        this.data.unshift(element);\n        return super.prepend(element);\n    }\n    append(element) {\n        this.reset(true);\n        this.data.push(element);\n        return super.append(element);\n    }\n    add(element) {\n        this.data.push(element);\n        return super.add(element);\n    }\n    remove(element) {\n        this.data = this.data.filter(el => el !== element);\n        return super.remove(element);\n    }\n    update(element, values) {\n        return new Promise((resolve, reject) => {\n            this.find(element).then((found) => {\n                found = deepExtend(found, values);\n                super.update(found, values).then(resolve).catch(reject);\n            }).catch(reject);\n        });\n    }\n    find(element) {\n        const found = this.data.find(el => el === element);\n        if (found) {\n            return Promise.resolve(found);\n        }\n        return Promise.reject(new Error('Element was not found in the dataset'));\n    }\n    getElements() {\n        const data = this.data.slice(0);\n        return Promise.resolve(this.prepareData(data));\n    }\n    getFilteredAndSorted() {\n        let data = this.data.slice(0);\n        this.prepareData(data);\n        return Promise.resolve(this.filteredAndSorted);\n    }\n    getAll() {\n        const data = this.data.slice(0);\n        return Promise.resolve(data);\n    }\n    reset(silent = false) {\n        if (silent) {\n            this.filterConf = {\n                filters: [],\n                andOperator: true,\n            };\n            this.sortConf = [];\n            this.pagingConf['page'] = 1;\n        }\n        else {\n            this.setFilter([], true, false);\n            this.setSort([], false);\n            this.setPage(1);\n        }\n    }\n    empty() {\n        this.data = [];\n        return super.empty();\n    }\n    count() {\n        return this.filteredAndSorted.length;\n    }\n    toggleItem(row, isSelected) {\n        if (isSelected)\n            this.selectedItems.push(row);\n        else\n            this.selectedItems = this.selectedItems.filter((i) => i !== row);\n    }\n    selectAllItems(checked) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (checked) {\n                const allItems = yield this.getAll();\n                this.selectedItems = allItems.slice(0);\n            }\n            else\n                this.selectedItems = [];\n        });\n    }\n    getSelectedItems() {\n        return this.selectedItems;\n    }\n    /**\n     *\n     * Array of conf objects\n     * [\n     *  {field: string, direction: asc|desc|null, compare: Function|null},\n     * ]\n     * @param conf\n     * @param doEmit\n     * @returns {LocalDataSource}\n     */\n    setSort(conf, doEmit = true) {\n        if (conf !== null) {\n            conf.forEach((fieldConf) => {\n                if (!fieldConf['field'] || typeof fieldConf['direction'] === 'undefined') {\n                    throw new Error('Sort configuration object is not valid');\n                }\n            });\n            this.sortConf = conf;\n        }\n        super.setSort(conf, doEmit);\n        return this;\n    }\n    /**\n     *\n     * Array of conf objects\n     * [\n     *  {field: string, search: string, filter: Function|null},\n     * ]\n     * @param conf\n     * @param andOperator\n     * @param doEmit\n     * @returns {LocalDataSource}\n     */\n    setFilter(conf, andOperator = true, doEmit = true) {\n        if (conf && conf.length > 0) {\n            conf.forEach((fieldConf) => {\n                this.addFilter(fieldConf, andOperator, false);\n            });\n        }\n        else {\n            this.filterConf = {\n                filters: [],\n                andOperator: true,\n            };\n        }\n        this.filterConf.andOperator = andOperator;\n        this.pagingConf['page'] = 1;\n        super.setFilter(conf, andOperator, doEmit);\n        return this;\n    }\n    addFilter(fieldConf, andOperator = true, doEmit = true) {\n        if (!fieldConf['field'] || typeof fieldConf['search'] === 'undefined') {\n            throw new Error('Filter configuration object is not valid');\n        }\n        let found = false;\n        this.filterConf.filters.forEach((currentFieldConf, index) => {\n            if (currentFieldConf['field'] === fieldConf['field']) {\n                this.filterConf.filters[index] = fieldConf;\n                found = true;\n            }\n        });\n        if (!found) {\n            this.filterConf.filters.push(fieldConf);\n        }\n        this.filterConf.andOperator = andOperator;\n        super.addFilter(fieldConf, andOperator, doEmit);\n        return this;\n    }\n    setPaging(page, perPage, doEmit = true) {\n        this.pagingConf['page'] = page;\n        this.pagingConf['perPage'] = perPage;\n        super.setPaging(page, perPage, doEmit);\n        return this;\n    }\n    setPage(page, doEmit = true) {\n        this.pagingConf['page'] = page;\n        super.setPage(page, doEmit);\n        return this;\n    }\n    getSort() {\n        return this.sortConf;\n    }\n    getFilter() {\n        return this.filterConf;\n    }\n    getPaging() {\n        return this.pagingConf;\n    }\n    prepareData(data) {\n        data = this.filter(data);\n        data = this.sort(data);\n        this.filteredAndSorted = data.slice(0);\n        return this.paginate(data);\n    }\n    sort(data) {\n        if (this.sortConf) {\n            this.sortConf.forEach((fieldConf) => {\n                data = LocalSorter\n                    .sort(data, fieldConf['field'], fieldConf['direction'], fieldConf['compare']);\n            });\n        }\n        return data;\n    }\n    // TODO: refactor?\n    filter(data) {\n        if (this.filterConf.filters) {\n            if (this.filterConf.andOperator) {\n                this.filterConf.filters.forEach((fieldConf) => {\n                    if (fieldConf['search'].length > 0) {\n                        data = LocalFilter\n                            .filter(data, fieldConf['field'], fieldConf['search'], fieldConf['filter']);\n                    }\n                });\n            }\n            else {\n                let mergedData = [];\n                this.filterConf.filters.forEach((fieldConf) => {\n                    if (fieldConf['search'].length > 0) {\n                        mergedData = mergedData.concat(LocalFilter\n                            .filter(data, fieldConf['field'], fieldConf['search'], fieldConf['filter']));\n                    }\n                });\n                // remove non unique items\n                data = mergedData.filter((elem, pos, arr) => {\n                    return arr.indexOf(elem) === pos;\n                });\n            }\n        }\n        return data;\n    }\n    paginate(data) {\n        if (this.pagingConf && this.pagingConf['page'] && this.pagingConf['perPage']) {\n            data = LocalPager.paginate(data, this.pagingConf['page'], this.pagingConf['perPage']);\n        }\n        return data;\n    }\n}\n\nfunction prepareValue(value) { return value; }\nclass Cell {\n    constructor(value, row, column, dataSet) {\n        this.value = value;\n        this.row = row;\n        this.column = column;\n        this.dataSet = dataSet;\n        this.newValue = '';\n        this.newValue = value;\n    }\n    getColumn() {\n        return this.column;\n    }\n    getRow() {\n        return this.row;\n    }\n    getValue() {\n        const valid = this.column.getValuePrepareFunction() instanceof Function;\n        const prepare = valid ? this.column.getValuePrepareFunction() : Cell.PREPARE;\n        return prepare.call(null, this.value, this.row.getData(), this);\n    }\n    setValue(value) {\n        this.newValue = value;\n    }\n    getId() {\n        return this.getColumn().id;\n    }\n    getTitle() {\n        return this.getColumn().title;\n    }\n    isEditable() {\n        var _a, _b;\n        if (this.getRow().index === -1) {\n            return (_a = this.getColumn().isAddable) !== null && _a !== void 0 ? _a : false;\n        }\n        else {\n            return (_b = this.getColumn().isEditable) !== null && _b !== void 0 ? _b : false;\n        }\n    }\n    resetValue() {\n        // directly access this.value to get raw value,\n        // because this.getValue() will go through valuePrepareFunction (if any)\n        this.setValue(this.value);\n    }\n}\nCell.PREPARE = prepareValue;\n\nclass Row {\n    constructor(index, data, _dataSet) {\n        this.index = index;\n        this.data = data;\n        this._dataSet = _dataSet;\n        this.isSelected = false;\n        this.isInEditing = false;\n        this.isExpanded = false;\n        this.cells = [];\n        this.process();\n    }\n    getCell(column) {\n        const theCell = this.cells.find(el => el.getColumn() === column);\n        if (!theCell)\n            throw new Error('There is no cell with such Column');\n        return theCell;\n    }\n    getCells() {\n        return this.cells;\n    }\n    getData() {\n        return this.data;\n    }\n    getIsSelected() {\n        return this.isSelected;\n    }\n    getIsExpanded() {\n        return this.isExpanded;\n    }\n    getNewData() {\n        const values = Object.assign({}, this.data);\n        this.getCells().forEach((cell) => values[cell.getColumn().id] = cell.newValue);\n        return values;\n    }\n    setData(data) {\n        this.data = data;\n        this.process();\n    }\n    process() {\n        this.cells = [];\n        this._dataSet.getColumns().forEach((column) => {\n            const cell = this.createCell(column);\n            this.cells.push(cell);\n        });\n    }\n    createCell(column) {\n        const defValue = column.settings.defaultValue ? column.settings.defaultValue : '';\n        const value = typeof this.data[column.id] === 'undefined' ? defValue : this.data[column.id];\n        return new Cell(value, this, column, this._dataSet);\n    }\n}\n\nvar SelectModeOptions;\n(function (SelectModeOptions) {\n    SelectModeOptions[\"Single\"] = \"single\";\n    SelectModeOptions[\"Multi\"] = \"multi\";\n})(SelectModeOptions || (SelectModeOptions = {}));\nvar IColumnType;\n(function (IColumnType) {\n    IColumnType[\"Text\"] = \"text\";\n    IColumnType[\"Html\"] = \"html\";\n    IColumnType[\"Custom\"] = \"custom\";\n})(IColumnType || (IColumnType = {}));\n\nclass Column {\n    constructor(id, settings, dataSet) {\n        this.id = id;\n        this.settings = settings;\n        this.dataSet = dataSet;\n        this.title = '';\n        this.hide = false;\n        this.type = IColumnType.Text;\n        this.class = '';\n        this.width = '';\n        this.isSortable = true;\n        this.isEditable = true;\n        this.isAddable = true;\n        this.isFilterable = false;\n        this.sortDirection = 'asc';\n        this.defaultSortDirection = undefined;\n        this.editor = { type: '', config: {}, component: null };\n        this.filter = { type: '', config: {}, component: null };\n        this.renderComponent = null;\n        this.process();\n    }\n    getOnComponentInitFunction() {\n        return this.onComponentInitFunction;\n    }\n    getCompareFunction() {\n        return this.compareFunction;\n    }\n    getValuePrepareFunction() {\n        return this.valuePrepareFunction;\n    }\n    getFilterFunction() {\n        return this.filterFunction;\n    }\n    getConfig() {\n        return this.editor && this.editor.config;\n    }\n    getFilterType() {\n        return this.filter && this.filter.type;\n    }\n    getFilterConfig() {\n        return this.filter && this.filter.config;\n    }\n    /**\n     * Retrieves a setting by name.\n     *\n     * @param key the current key name\n     * @param compatKeys key names for backwards compatibility\n     * @private\n     */\n    lookupSetting(key, compatKeys = []) {\n        if (typeof this.settings[key] === undefined) {\n            for (const k of compatKeys) {\n                if (typeof this.settings[k] !== undefined) {\n                    return this.settings[k];\n                }\n            }\n            return undefined;\n        }\n        else {\n            return this.settings[key];\n        }\n    }\n    process() {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n        // the pattern is \"X = lookup(key) ?? X\" - this keeps the default value in case the setting is undefined\n        this.placeholder = this.lookupSetting('placeholder');\n        this.title = (_a = this.lookupSetting('title')) !== null && _a !== void 0 ? _a : this.title;\n        this.class = (_b = this.lookupSetting('class')) !== null && _b !== void 0 ? _b : this.class;\n        this.width = (_c = this.lookupSetting('width')) !== null && _c !== void 0 ? _c : this.width;\n        this.hide = (_d = this.lookupSetting('hide')) !== null && _d !== void 0 ? _d : this.hide;\n        this.type = (_e = this.lookupSetting('type')) !== null && _e !== void 0 ? _e : this.determineType();\n        this.editor = (_f = this.lookupSetting('editor')) !== null && _f !== void 0 ? _f : this.editor;\n        this.filter = (_g = this.lookupSetting('filter')) !== null && _g !== void 0 ? _g : this.filter;\n        this.renderComponent = (_h = this.lookupSetting('renderComponent')) !== null && _h !== void 0 ? _h : this.renderComponent;\n        this.isFilterable = this.filter !== undefined && !!this.filter;\n        this.isSortable = (_j = this.lookupSetting('isSortable', ['sort'])) !== null && _j !== void 0 ? _j : this.isSortable;\n        this.isEditable = (_k = this.lookupSetting('isEditable', ['editable'])) !== null && _k !== void 0 ? _k : this.isEditable;\n        this.isAddable = (_l = this.lookupSetting('isAddable')) !== null && _l !== void 0 ? _l : this.isAddable;\n        this.defaultSortDirection = (_m = this.lookupSetting('sortDirection')) !== null && _m !== void 0 ? _m : this.defaultSortDirection;\n        this.sortDirection = (_o = this.defaultSortDirection) !== null && _o !== void 0 ? _o : this.sortDirection;\n        this.compareFunction = this.lookupSetting('compareFunction');\n        this.valuePrepareFunction = this.lookupSetting('valuePrepareFunction');\n        this.filterFunction = this.lookupSetting('filterFunction');\n        this.onComponentInitFunction = this.lookupSetting('onComponentInitFunction');\n    }\n    determineType() {\n        // TODO: determine type by data\n        return IColumnType.Text;\n    }\n}\n\nclass DataSet {\n    constructor(data = [], columnSettings) {\n        this.columnSettings = columnSettings;\n        this.data = [];\n        this.columns = [];\n        this.rows = [];\n        this.willSelect = '';\n        this.createColumns(columnSettings);\n        this.setData(data);\n        this.createNewRow();\n    }\n    setData(data, selectedRows = []) {\n        const rows = data.map((el, index) => {\n            const row = new Row(index, el, this);\n            row.isSelected = selectedRows.indexOf(el) > -1;\n            return row;\n        });\n        this.data = rows;\n        this.createRows();\n    }\n    getColumns() {\n        return this.columns;\n    }\n    getExpandedRow() {\n        if (!this.expandedRow) {\n            console.warn('Expanded row not found');\n            throw new Error('Expanded row not found');\n        }\n        return this.expandedRow;\n    }\n    getSelectedRow() {\n        if (!this.selectedRow) {\n            console.warn('Selected row not found');\n            throw new Error('Selected row not found');\n        }\n        return this.selectedRow;\n    }\n    getRows() {\n        var _a;\n        return (_a = this.rows) !== null && _a !== void 0 ? _a : [];\n    }\n    getFirstRow() {\n        return this.rows[0];\n    }\n    getLastRow() {\n        return this.rows[this.rows.length - 1];\n    }\n    findRowByData(data) {\n        const row = this.rows.find((row) => row.getData() === data);\n        if (!row) {\n            console.warn('Data row not found', data);\n            throw new Error('Row not found');\n        }\n        return row;\n    }\n    deselectAll() {\n        this.rows.forEach((row) => {\n            row.isSelected = false;\n        });\n        // we need to clear selectedRow field because no one row selected\n        this.selectedRow = undefined;\n    }\n    clearExpandAll() {\n        this.rows.forEach((row) => {\n            row.isExpanded = false;\n        });\n        // we need to clear selectedRow field because no one row selected\n        this.expandedRow = undefined;\n    }\n    selectRow(row) {\n        const previousIsSelected = row.isSelected;\n        this.deselectAll();\n        row.isSelected = !previousIsSelected;\n        this.selectedRow = row;\n        //return this.selectedRow;\n    }\n    multipleSelectRow(row) {\n        row.isSelected = !row.isSelected;\n        this.selectedRow = row;\n        return this.selectedRow;\n    }\n    expandRow(row) {\n        var _a;\n        const previousIsExpanded = row.isExpanded;\n        this.clearExpandAll();\n        if (row.index !== ((_a = this.expandedRow) === null || _a === void 0 ? void 0 : _a.index)) {\n            this.expandedRow = undefined;\n        }\n        row.isExpanded = !previousIsExpanded;\n        this.expandedRow = row;\n        return this.expandedRow;\n    }\n    selectPreviousRow() {\n        if (this.rows.length > 0) {\n            let index = this.selectedRow ? this.selectedRow.index : 0;\n            if (index > this.rows.length - 1) {\n                index = this.rows.length - 1;\n            }\n            this.selectRow(this.rows[index]);\n            return this.getSelectedRow();\n        }\n        throw new Error('There are no rows inside the data table');\n    }\n    selectFirstRow() {\n        if (this.rows.length > 0) {\n            this.selectRow(this.rows[0]);\n            return this.getSelectedRow();\n        }\n        throw new Error('There are no rows inside the data table');\n    }\n    selectLastRow() {\n        if (this.rows.length > 0) {\n            this.selectRow(this.rows[this.rows.length - 1]);\n            return this.getSelectedRow();\n        }\n        throw new Error('There are no rows inside the data table');\n    }\n    selectRowByIndex(index) {\n        const rowsLength = this.rows.length;\n        if (rowsLength === 0) {\n            throw new Error('There are no rows inside the data table');\n        }\n        if (!index) {\n            this.selectFirstRow();\n        }\n        else if (index > 0 && index < rowsLength) {\n            this.selectRow(this.rows[index]);\n        }\n        else\n            // we need to deselect all rows if we got an incorrect index\n            this.deselectAll();\n    }\n    willSelectFirstRow() {\n        this.willSelect = 'first';\n    }\n    willSelectLastRow() {\n        this.willSelect = 'last';\n    }\n    select(selectedRowIndex) {\n        if (this.getRows().length === 0) {\n            throw new Error('There are no rows inside the data table');\n        }\n        if (this.willSelect) {\n            if (this.willSelect === 'first') {\n                this.selectFirstRow();\n            }\n            if (this.willSelect === 'last') {\n                this.selectLastRow();\n            }\n            this.willSelect = '';\n        }\n        else {\n            this.selectRowByIndex(selectedRowIndex);\n        }\n        return this.getSelectedRow();\n    }\n    createNewRow() {\n        this.newRow = new Row(-1, {}, this);\n        this.newRow.isInEditing = true;\n    }\n    /**\n     * Create columns by mapping from the settings\n     * @param settings\n     * @private\n     */\n    createColumns(settings) {\n        for (const id in settings) {\n            if (settings.hasOwnProperty(id)) {\n                this.columns.push(new Column(id, settings[id], this));\n            }\n        }\n    }\n    /**\n     * Create rows based on current data prepared in data source\n     * @private\n     */\n    createRows() {\n        this.rows = [];\n        this.data.forEach((el) => {\n            this.rows.push(el);\n        });\n    }\n}\n\nclass Grid {\n    constructor(source, settings) {\n        this.createFormShown = false;\n        this.onSelectRowSource = new Subject();\n        this.onDeselectRowSource = new Subject();\n        this.setSettings(settings);\n        this.setSource(source);\n    }\n    detach() {\n        if (this.sourceOnChangedSubscription) {\n            this.sourceOnChangedSubscription.unsubscribe();\n        }\n        if (this.sourceOnUpdatedSubscription) {\n            this.sourceOnUpdatedSubscription.unsubscribe();\n        }\n    }\n    showActionColumn(position) {\n        return this.isCurrentActionsPosition(position) && this.isActionsVisible();\n    }\n    isCurrentActionsPosition(position) {\n        return position == this.getSetting('actions.position');\n    }\n    isActionsVisible() {\n        return this.getSetting('actions.add') || this.getSetting('actions.edit') || this.getSetting('actions.delete') || this.getSetting('actions.custom').length;\n    }\n    isMultiSelectVisible() {\n        return this.getSetting('selectMode') === 'multi';\n    }\n    getNewRow() {\n        return this.dataSet.newRow;\n    }\n    setSettings(settings) {\n        this.settings = settings;\n        this.dataSet = new DataSet([], this.getSetting('columns'));\n        if (this.source) {\n            this.source.refresh();\n        }\n    }\n    getDataSet() {\n        return this.dataSet;\n    }\n    setSource(source) {\n        this.source = this.prepareSource(source);\n        this.detach();\n        this.sourceOnChangedSubscription = this.source.onChanged().subscribe((changes) => this.processDataChange(changes));\n        this.sourceOnUpdatedSubscription = this.source.onUpdated().subscribe((data) => {\n            const changedRow = this.dataSet.findRowByData(data);\n            changedRow.setData(data);\n        });\n    }\n    getSetting(name, defaultValue) {\n        return getDeepFromObject(this.settings, name, defaultValue);\n    }\n    getColumns() {\n        return this.dataSet.getColumns();\n    }\n    getRows() {\n        return this.dataSet.getRows();\n    }\n    selectRow(row) {\n        this.dataSet.selectRow(row);\n        this.source.toggleItem(row.getData(), row.isSelected);\n    }\n    multipleSelectRow(row) {\n        this.dataSet.multipleSelectRow(row);\n        this.source.toggleItem(row.getData(), row.isSelected);\n    }\n    onSelectRow() {\n        return this.onSelectRowSource.asObservable();\n    }\n    expandRow(row) {\n        this.dataSet.expandRow(row);\n    }\n    onDeselectRow() {\n        return this.onDeselectRowSource.asObservable();\n    }\n    edit(row) {\n        row.isInEditing = true;\n    }\n    create(row, confirmEmitter) {\n        const deferred = new Deferred();\n        deferred.promise.then((newData) => {\n            newData = newData ? newData : row.getNewData();\n            if (deferred.resolve.skipAdd) {\n                this.createFormShown = false;\n            }\n            else {\n                this.source.prepend(newData).then(() => {\n                    this.createFormShown = false;\n                    this.dataSet.createNewRow();\n                });\n            }\n        }).catch((err) => {\n            // doing nothing\n        });\n        if (this.getSetting('add.confirmCreate')) {\n            confirmEmitter.emit({\n                newData: row.getNewData(),\n                source: this.source,\n                confirm: deferred,\n            });\n        }\n        else {\n            deferred.resolve();\n        }\n    }\n    save(row, confirmEmitter) {\n        const deferred = new Deferred();\n        deferred.promise.then((newData) => {\n            newData = newData ? newData : row.getNewData();\n            if (deferred.resolve.skipEdit) {\n                row.isInEditing = false;\n            }\n            else {\n                this.source.update(row.getData(), newData).then(() => {\n                    row.isInEditing = false;\n                });\n            }\n        }).catch((err) => {\n            // doing nothing\n        });\n        if (this.getSetting('edit.confirmSave')) {\n            confirmEmitter.emit({\n                data: row.getData(),\n                newData: row.getNewData(),\n                source: this.source,\n                confirm: deferred,\n            });\n        }\n        else {\n            deferred.resolve();\n        }\n    }\n    delete(row, confirmEmitter) {\n        const deferred = new Deferred();\n        deferred.promise.then(() => {\n            this.source.remove(row.getData());\n        }).catch((err) => {\n            // doing nothing\n        });\n        if (this.getSetting('delete.confirmDelete')) {\n            confirmEmitter.emit({\n                data: row.getData(),\n                source: this.source,\n                confirm: deferred,\n            });\n        }\n        else {\n            deferred.resolve();\n        }\n    }\n    processDataChange(changes) {\n        if (this.shouldProcessChange(changes)) {\n            this.dataSet.setData(changes['elements'], this.getSelectedItems());\n            if (this.getSetting('selectMode') !== 'multi') {\n                try {\n                    const row = this.determineRowToSelect(changes);\n                    this.onSelectRowSource.next(row);\n                }\n                catch (e) {\n                    this.onDeselectRowSource.next(null);\n                }\n            }\n        }\n    }\n    shouldProcessChange(changes) {\n        if (['filter', 'sort', 'page', 'remove', 'refresh', 'load', 'empty', 'paging'].indexOf(changes['action']) !== -1) {\n            return true;\n        }\n        else if (['prepend', 'append'].indexOf(changes['action']) !== -1 && !this.getSetting('pager.display')) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * @breaking-change 1.8.0\n     * Need to add `| null` in return type\n     *\n     * TODO: move to selectable? Separate directive\n     */\n    determineRowToSelect(changes) {\n        if (['load', 'page', 'filter', 'sort', 'refresh'].indexOf(changes['action']) !== -1) {\n            return this.dataSet.select(this.getRowIndexToSelect());\n        }\n        if (this.shouldSkipSelection()) {\n            return null;\n        }\n        if (changes['action'] === 'remove') {\n            if (changes['elements'].length === 0) {\n                // we have to store which one to select as the data will be reloaded\n                this.dataSet.willSelectLastRow();\n            }\n            else {\n                return this.dataSet.selectPreviousRow();\n            }\n        }\n        if (changes['action'] === 'append') {\n            // we have to store which one to select as the data will be reloaded\n            this.dataSet.willSelectLastRow();\n        }\n        if (changes['action'] === 'add') {\n            return this.dataSet.selectFirstRow();\n        }\n        if (changes['action'] === 'update') {\n            return this.dataSet.selectFirstRow();\n        }\n        if (changes['action'] === 'prepend') {\n            // we have to store which one to select as the data will be reloaded\n            this.dataSet.willSelectFirstRow();\n        }\n        return null;\n    }\n    prepareSource(source) {\n        const initialSource = this.getInitialSort();\n        if (initialSource && initialSource['field'] && initialSource['direction']) {\n            source.setSort([initialSource], false);\n        }\n        if (this.getSetting('pager.display') === true) {\n            source.setPaging(this.getPageToSelect(source), this.getSetting('pager.perPage'), false);\n        }\n        source.refresh();\n        return source;\n    }\n    getInitialSort() {\n        const sortConf = {};\n        this.getColumns().forEach((column) => {\n            if (column.isSortable && column.defaultSortDirection) {\n                sortConf['field'] = column.id;\n                sortConf['direction'] = column.defaultSortDirection;\n                sortConf['compare'] = column.getCompareFunction();\n            }\n        });\n        return sortConf;\n    }\n    getSelectedRows() {\n        return this.dataSet.getRows()\n            .filter(r => r.isSelected);\n    }\n    getSelectedItems() {\n        return this.source.getSelectedItems();\n    }\n    selectAllRows(status) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.dataSet.getRows()\n                .forEach(r => r.isSelected = status);\n            yield this.source.selectAllItems(status);\n        });\n    }\n    getFirstRow() {\n        return this.dataSet.getFirstRow();\n    }\n    getLastRow() {\n        return this.dataSet.getLastRow();\n    }\n    getSelectionInfo() {\n        const switchPageToSelectedRowPage = this.getSetting('switchPageToSelectedRowPage');\n        const selectedRowIndex = Number(this.getSetting('selectedRowIndex', 0)) || 0;\n        const { perPage, page } = this.getSetting('pager');\n        return { perPage, page, selectedRowIndex, switchPageToSelectedRowPage };\n    }\n    getRowIndexToSelect() {\n        const { switchPageToSelectedRowPage, selectedRowIndex, perPage } = this.getSelectionInfo();\n        const dataAmount = this.source.count();\n        /**\n         * source - contains all table data\n         * dataSet - contains data for current page\n         * selectedRowIndex - contains index for data in all data\n         *\n         * because of that, we need to count index for a specific row in page\n         * if\n         * `switchPageToSelectedRowPage` - we need to change page automatically\n         * `selectedRowIndex < dataAmount && selectedRowIndex >= 0` - index points to existing data\n         * (if index points to non-existing data and we calculate index for current page - we will get wrong selected row.\n         *  if we return index witch not points to existing data - no line will be highlighted)\n         */\n        return (switchPageToSelectedRowPage &&\n            selectedRowIndex < dataAmount &&\n            selectedRowIndex >= 0) ?\n            selectedRowIndex % perPage :\n            selectedRowIndex;\n    }\n    getPageToSelect(source) {\n        const { switchPageToSelectedRowPage, selectedRowIndex, perPage, page } = this.getSelectionInfo();\n        let pageToSelect = Math.max(1, page);\n        if (switchPageToSelectedRowPage && selectedRowIndex >= 0) {\n            pageToSelect = getPageForRowIndex(selectedRowIndex, perPage);\n        }\n        const maxPageAmount = Math.ceil(source.count() / perPage);\n        return maxPageAmount ? Math.min(pageToSelect, maxPageAmount) : pageToSelect;\n    }\n    shouldSkipSelection() {\n        /**\n         * For backward compatibility when using `selectedRowIndex` with non-number values - ignored.\n         *\n         * Therefore, in order to select a row after some changes,\n         * the `selectedRowIndex` value must be invalid or >= 0 (< 0 means that no row is selected).\n         *\n         * `Number(value)` returns `NaN` on all invalid cases, and comparisons with `NaN` always return `false`.\n         *\n         * !!! We should skip a row only in cases when `selectedRowIndex` < 0\n         * because when < 0 all lines must be deselected\n         */\n        const selectedRowIndex = Number(this.getSetting('selectedRowIndex'));\n        return selectedRowIndex < 0;\n    }\n}\n\nclass TagComponent {\n    constructor() {\n        this.close = new EventEmitter();\n    }\n    closeClicked(evt) {\n        evt.stopPropagation();\n        this.close.emit(this.item.id);\n    }\n}\nTagComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: TagComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nTagComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: TagComponent, selector: \"angular2-smart-table-tag\", inputs: { item: \"item\" }, outputs: { close: \"close\" }, ngImport: i0, template: \"<div style=\\\"padding: 5px; display: inline; white-space: nowrap\\\">\\n  <svg\\n    style=\\\"width: 15px\\\"\\n    (click)=\\\"closeClicked($event)\\\"\\n    aria-hidden=\\\"true\\\"\\n    focusable=\\\"false\\\"\\n    data-prefix=\\\"fas\\\"\\n    data-icon=\\\"times-circle\\\"\\n    class=\\\"svg-inline--fa fa-times-circle fa-w-16\\\"\\n    role=\\\"img\\\"\\n    xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n    viewBox=\\\"0 0 512 512\\\"\\n  >\\n    <path\\n      fill=\\\"currentColor\\\"\\n      d=\\\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z\\\"\\n    ></path>\\n  </svg>\\n  <span style=\\\"margin-left: 3px\\\" class=\\\"itemText\\\">{{ item.title }}</span>\\n</div>\\n\", styles: [\"*{box-sizing:border-box}*{padding:0;margin:0}ul{list-style-type:none}.add-tag-list{font-family:font8272;font-size:1.5em}.add-tag-list ul li{padding-left:20px;padding-right:20px;padding-bottom:8px;display:flex;flex-direction:row-reverse;float:left}.add-tag-list ul li:last-child{padding-right:0}.closeButton{display:inline}.closeButton:after{content:\\\"\\\\f057\\\";padding-left:4px;font-family:FontAwesome;color:#df0024;cursor:pointer}.closeButton:hover:after{color:#900110;transition:.6s linear}\\n\"] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: TagComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'angular2-smart-table-tag', template: \"<div style=\\\"padding: 5px; display: inline; white-space: nowrap\\\">\\n  <svg\\n    style=\\\"width: 15px\\\"\\n    (click)=\\\"closeClicked($event)\\\"\\n    aria-hidden=\\\"true\\\"\\n    focusable=\\\"false\\\"\\n    data-prefix=\\\"fas\\\"\\n    data-icon=\\\"times-circle\\\"\\n    class=\\\"svg-inline--fa fa-times-circle fa-w-16\\\"\\n    role=\\\"img\\\"\\n    xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n    viewBox=\\\"0 0 512 512\\\"\\n  >\\n    <path\\n      fill=\\\"currentColor\\\"\\n      d=\\\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z\\\"\\n    ></path>\\n  </svg>\\n  <span style=\\\"margin-left: 3px\\\" class=\\\"itemText\\\">{{ item.title }}</span>\\n</div>\\n\", styles: [\"*{box-sizing:border-box}*{padding:0;margin:0}ul{list-style-type:none}.add-tag-list{font-family:font8272;font-size:1.5em}.add-tag-list ul li{padding-left:20px;padding-right:20px;padding-bottom:8px;display:flex;flex-direction:row-reverse;float:left}.add-tag-list ul li:last-child{padding-right:0}.closeButton{display:inline}.closeButton:after{content:\\\"\\\\f057\\\";padding-left:4px;font-family:FontAwesome;color:#df0024;cursor:pointer}.closeButton:hover:after{color:#900110;transition:.6s linear}\\n\"] }]\n        }], propDecorators: { item: [{\n                type: Input\n            }], close: [{\n                type: Output\n            }] } });\n\nclass TagsListComponent {\n    constructor() {\n        this.close = new EventEmitter();\n    }\n    closedTag(tag) {\n        this.close.emit(tag);\n    }\n}\nTagsListComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: TagsListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nTagsListComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: TagsListComponent, selector: \"angular2-smart-table-tags-list\", inputs: { tags: \"tags\" }, outputs: { close: \"close\" }, ngImport: i0, template: \"<div class=\\\"add-tag-list\\\" id=\\\"tagslist\\\">\\n  <angular2-smart-table-tag\\n    *ngFor=\\\"let tag of tags\\\"\\n    [item]=\\\"tag\\\"\\n    (close)=\\\"closedTag($event)\\\"\\n  ></angular2-smart-table-tag>\\n</div>\\n\", styles: [\"*{box-sizing:border-box}*{padding:0;margin:0}ul{list-style-type:none}.add-tag-list{font-family:font8272;font-size:1.5em}.add-tag-list ul li{padding-left:20px;padding-right:20px;padding-bottom:8px;display:flex;flex-direction:row-reverse;float:left}.add-tag-list ul li:last-child{padding-right:0}.closeButton{display:inline}.closeButton:after{content:\\\"\\\\f057\\\";padding-left:4px;font-family:FontAwesome;color:#df0024;cursor:pointer}.closeButton:hover:after{color:#900110;transition:.6s linear}\\n\"], components: [{ type: TagComponent, selector: \"angular2-smart-table-tag\", inputs: [\"item\"], outputs: [\"close\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: TagsListComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'angular2-smart-table-tags-list', template: \"<div class=\\\"add-tag-list\\\" id=\\\"tagslist\\\">\\n  <angular2-smart-table-tag\\n    *ngFor=\\\"let tag of tags\\\"\\n    [item]=\\\"tag\\\"\\n    (close)=\\\"closedTag($event)\\\"\\n  ></angular2-smart-table-tag>\\n</div>\\n\", styles: [\"*{box-sizing:border-box}*{padding:0;margin:0}ul{list-style-type:none}.add-tag-list{font-family:font8272;font-size:1.5em}.add-tag-list ul li{padding-left:20px;padding-right:20px;padding-bottom:8px;display:flex;flex-direction:row-reverse;float:left}.add-tag-list ul li:last-child{padding-right:0}.closeButton{display:inline}.closeButton:after{content:\\\"\\\\f057\\\";padding-left:4px;font-family:FontAwesome;color:#df0024;cursor:pointer}.closeButton:hover:after{color:#900110;transition:.6s linear}\\n\"] }]\n        }], propDecorators: { tags: [{\n                type: Input\n            }], close: [{\n                type: Output\n            }] } });\n\nclass TableService {\n    constructor() {\n        this.mouseMoveEvent$ = new Subject();\n    }\n}\nTableService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: TableService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nTableService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: TableService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: TableService, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nclass CheckboxSelectAllComponent {\n}\nCheckboxSelectAllComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: CheckboxSelectAllComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCheckboxSelectAllComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: CheckboxSelectAllComponent, selector: \"[angular2-st-checkbox-select-all]\", inputs: { grid: \"grid\", source: \"source\", isAllSelected: \"isAllSelected\" }, ngImport: i0, template: `\n    <input type=\"checkbox\" [ngModel]=\"isAllSelected\">\n  `, isInline: true, directives: [{ type: i1.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { type: i1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i1.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: CheckboxSelectAllComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[angular2-st-checkbox-select-all]',\n                    template: `\n    <input type=\"checkbox\" [ngModel]=\"isAllSelected\">\n  `,\n                }]\n        }], propDecorators: { grid: [{\n                type: Input\n            }], source: [{\n                type: Input\n            }], isAllSelected: [{\n                type: Input\n            }] } });\n\nclass ActionsTitleComponent {\n    constructor(ref) {\n        this.ref = ref;\n    }\n    ngAfterViewInit() {\n        this.ref.nativeElement.classList.add('angular2-smart-actions');\n    }\n    ngOnChanges() {\n        this.actionsColumnTitle = this.grid.getSetting('actions.columnTitle');\n    }\n}\nActionsTitleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: ActionsTitleComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nActionsTitleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: ActionsTitleComponent, selector: \"[angular2-st-actions-title]\", inputs: { grid: \"grid\" }, usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"angular2-smart-title\">{{ actionsColumnTitle }}</div>\n  `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: ActionsTitleComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[angular2-st-actions-title]',\n                    template: `\n    <div class=\"angular2-smart-title\">{{ actionsColumnTitle }}</div>\n  `,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { grid: [{\n                type: Input\n            }] } });\n\nclass TitleComponent {\n    constructor() {\n        this.currentDirection = '';\n        this.sort = new EventEmitter();\n        this.hide = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        if (changes.source) {\n            if (!changes.source.firstChange) {\n                this.dataChangedSub.unsubscribe();\n            }\n            this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\n                const sortConf = this.source.getSort();\n                if (sortConf.length > 0 && sortConf[0]['field'] === this.column.id) {\n                    this.currentDirection = sortConf[0]['direction'];\n                }\n                else {\n                    this.currentDirection = '';\n                }\n                sortConf.forEach((fieldConf) => {\n                });\n            });\n        }\n    }\n    _sort(event) {\n        event.preventDefault();\n        this.changeSortDirection();\n        this.source.setSort([\n            {\n                field: this.column.id,\n                direction: this.currentDirection,\n                compare: this.column.getCompareFunction(),\n            },\n        ]);\n        this.sort.emit(null);\n    }\n    _hideColumnClicked(event) {\n        event.preventDefault();\n        this.hide.emit(this.column.id);\n    }\n    changeSortDirection() {\n        var _a;\n        if (this.currentDirection) {\n            const newDirection = this.currentDirection === 'asc' ? 'desc' : 'asc';\n            this.currentDirection = newDirection;\n        }\n        else {\n            this.currentDirection = (_a = this.column.sortDirection) !== null && _a !== void 0 ? _a : 'asc';\n        }\n        return this.currentDirection;\n    }\n}\nTitleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: TitleComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nTitleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: TitleComponent, selector: \"angular2-smart-table-title\", inputs: { column: \"column\", source: \"source\", isHideable: \"isHideable\" }, outputs: { sort: \"sort\", hide: \"hide\" }, usesOnChanges: true, ngImport: i0, template: `\n    <a href=\"#\" *ngIf=\"column.isSortable\"\n                (click)=\"_sort($event)\"\n                class=\"angular2-smart-sort-link sort\"\n                [ngClass]=\"currentDirection\">\n      {{ column.title }}\n    </a>\n    <span class=\"angular2-smart-sort\" *ngIf=\"!column.isSortable\">{{ column.title }}</span>\n    <button style=\"position: absolute; top:0; right:0; border:none\" *ngIf=\"isHideable\" (click)=\"_hideColumnClicked($event)\">X</button>\n  `, isInline: true, styles: [\"a.sort.asc,a.sort.desc{font-weight:700}a.sort.asc:after,a.sort.desc:after{content:\\\"\\\";display:inline-block;width:0;height:0;border-bottom:4px solid rgba(0,0,0,.3);border-top:4px solid transparent;border-left:4px solid transparent;border-right:4px solid transparent;margin-bottom:2px}a.sort.desc:after{transform:rotate(-180deg);margin-bottom:-2px}\\n\"], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: TitleComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'angular2-smart-table-title', template: `\n    <a href=\"#\" *ngIf=\"column.isSortable\"\n                (click)=\"_sort($event)\"\n                class=\"angular2-smart-sort-link sort\"\n                [ngClass]=\"currentDirection\">\n      {{ column.title }}\n    </a>\n    <span class=\"angular2-smart-sort\" *ngIf=\"!column.isSortable\">{{ column.title }}</span>\n    <button style=\"position: absolute; top:0; right:0; border:none\" *ngIf=\"isHideable\" (click)=\"_hideColumnClicked($event)\">X</button>\n  `, styles: [\"a.sort.asc,a.sort.desc{font-weight:700}a.sort.asc:after,a.sort.desc:after{content:\\\"\\\";display:inline-block;width:0;height:0;border-bottom:4px solid rgba(0,0,0,.3);border-top:4px solid transparent;border-left:4px solid transparent;border-right:4px solid transparent;margin-bottom:2px}a.sort.desc:after{transform:rotate(-180deg);margin-bottom:-2px}\\n\"] }]\n        }], propDecorators: { column: [{\n                type: Input\n            }], source: [{\n                type: Input\n            }], isHideable: [{\n                type: Input\n            }], sort: [{\n                type: Output\n            }], hide: [{\n                type: Output\n            }] } });\n\nclass ColumnTitleComponent {\n    constructor() {\n        this.sort = new EventEmitter();\n        this.hide = new EventEmitter();\n    }\n}\nColumnTitleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: ColumnTitleComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nColumnTitleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: ColumnTitleComponent, selector: \"angular2-st-column-title\", inputs: { column: \"column\", source: \"source\", isHideable: \"isHideable\" }, outputs: { sort: \"sort\", hide: \"hide\" }, ngImport: i0, template: `\n    <div class=\"angular2-smart-title\">\n      <angular2-smart-table-title [source]=\"source\" [column]=\"column\" [isHideable]=\"isHideable\" (sort)=\"sort.emit($event)\" (hide)=\"hide.emit($event)\"></angular2-smart-table-title>\n    </div>\n  `, isInline: true, components: [{ type: TitleComponent, selector: \"angular2-smart-table-title\", inputs: [\"column\", \"source\", \"isHideable\"], outputs: [\"sort\", \"hide\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: ColumnTitleComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'angular2-st-column-title',\n                    template: `\n    <div class=\"angular2-smart-title\">\n      <angular2-smart-table-title [source]=\"source\" [column]=\"column\" [isHideable]=\"isHideable\" (sort)=\"sort.emit($event)\" (hide)=\"hide.emit($event)\"></angular2-smart-table-title>\n    </div>\n  `,\n                }]\n        }], propDecorators: { column: [{\n                type: Input\n            }], source: [{\n                type: Input\n            }], isHideable: [{\n                type: Input\n            }], sort: [{\n                type: Output\n            }], hide: [{\n                type: Output\n            }] } });\n\nclass NgxResizerDirective {\n    constructor(elementRef, renderer, tableService) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.tableService = tableService;\n        this.destroyed$ = new Subject();\n    }\n    ngOnInit() {\n        this.tableService.mouseMoveEvent$\n            .pipe(takeUntil(this.destroyed$), filter(() => this.isClicked))\n            .subscribe((event) => {\n            const offset = this.pointerOffset - event.pageX;\n            const width = this.parentOffset - offset;\n            this.renderer.setStyle(this.parentElement, 'width', width + 'px');\n            this.renderer.setStyle(this.siblingElement, 'width', this.siblingOffset + offset + 'px');\n        });\n    }\n    onMouseEnter(event) {\n        this.isClicked = true;\n        this.parentElement = this.renderer.parentNode(this.elementRef.nativeElement);\n        this.siblingElement = this.renderer.nextSibling(this.parentElement);\n        this.pointerOffset = event.pageX;\n        this.parentOffset = this.parentElement.offsetWidth;\n        this.siblingOffset = this.siblingElement.offsetWidth;\n    }\n    onMouseDown() {\n        this.isClicked = false;\n    }\n    ngOnDestroy() {\n        this.destroyed$.next(null);\n    }\n}\nNgxResizerDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: NgxResizerDirective, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: TableService }], target: i0.ɵɵFactoryTarget.Directive });\nNgxResizerDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.6\", type: NgxResizerDirective, selector: \"[angular2-resizer]\", host: { listeners: { \"mousedown\": \"onMouseEnter($event)\", \"document:mouseup\": \"onMouseDown()\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: NgxResizerDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[angular2-resizer]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: TableService }]; }, propDecorators: { onMouseEnter: [{\n                type: HostListener,\n                args: ['mousedown', ['$event']]\n            }], onMouseDown: [{\n                type: HostListener,\n                args: ['document:mouseup']\n            }] } });\n\nclass TheadTitlesRowComponent {\n    constructor() {\n        this.sort = new EventEmitter();\n        this.hide = new EventEmitter();\n        this.selectAllRows = new EventEmitter();\n        this.isHideable = false;\n    }\n    ngOnChanges() {\n        this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n        this.showActionColumnLeft = this.grid.showActionColumn('left');\n        this.showActionColumnRight = this.grid.showActionColumn('right');\n        this.isResizable = this.grid.getSetting('resizable');\n        this.isHideable = this.grid.getSetting('hideable');\n    }\n    getVisibleColumns(columns) {\n        return (columns || []).filter((column) => !column.hide);\n    }\n}\nTheadTitlesRowComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: TheadTitlesRowComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nTheadTitlesRowComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: TheadTitlesRowComponent, selector: \"[angular2-st-thead-titles-row]\", inputs: { grid: \"grid\", isAllSelected: \"isAllSelected\", source: \"source\" }, outputs: { sort: \"sort\", hide: \"hide\", selectAllRows: \"selectAllRows\" }, usesOnChanges: true, ngImport: i0, template: `\n    <th angular2-st-checkbox-select-all *ngIf=\"isMultiSelectVisible\"\n                                   [grid]=\"grid\"\n                                   [source]=\"source\"\n                                   [isAllSelected]=\"isAllSelected\"\n                                   (click)=\"selectAllRows.emit($event)\">\n    </th>\n    <th angular2-st-actions-title *ngIf=\"showActionColumnLeft\" [grid]=\"grid\"></th>\n    <th *ngFor=\"let column of getVisibleColumns(grid.getColumns())\"\n        class=\"angular2-smart-th {{ column.id }}\"\n        [ngClass]=\"column.class ?? ''\"\n        [style.width]=\"column.width\">\n      <angular2-st-column-title [source]=\"source\" [column]=\"column\" [isHideable]=\"isHideable\" (sort)=\"sort.emit($event)\" (hide)=\"hide.emit($event)\"></angular2-st-column-title>\n      <div *ngIf=\"isResizable\" angular2-resizer class=\"angular2-resizer-block\"></div>\n    </th>\n    <th angular2-st-actions-title *ngIf=\"showActionColumnRight\" [grid]=\"grid\"></th>\n  `, isInline: true, components: [{ type: CheckboxSelectAllComponent, selector: \"[angular2-st-checkbox-select-all]\", inputs: [\"grid\", \"source\", \"isAllSelected\"] }, { type: ActionsTitleComponent, selector: \"[angular2-st-actions-title]\", inputs: [\"grid\"] }, { type: ColumnTitleComponent, selector: \"angular2-st-column-title\", inputs: [\"column\", \"source\", \"isHideable\"], outputs: [\"sort\", \"hide\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: NgxResizerDirective, selector: \"[angular2-resizer]\" }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: TheadTitlesRowComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[angular2-st-thead-titles-row]',\n                    template: `\n    <th angular2-st-checkbox-select-all *ngIf=\"isMultiSelectVisible\"\n                                   [grid]=\"grid\"\n                                   [source]=\"source\"\n                                   [isAllSelected]=\"isAllSelected\"\n                                   (click)=\"selectAllRows.emit($event)\">\n    </th>\n    <th angular2-st-actions-title *ngIf=\"showActionColumnLeft\" [grid]=\"grid\"></th>\n    <th *ngFor=\"let column of getVisibleColumns(grid.getColumns())\"\n        class=\"angular2-smart-th {{ column.id }}\"\n        [ngClass]=\"column.class ?? ''\"\n        [style.width]=\"column.width\">\n      <angular2-st-column-title [source]=\"source\" [column]=\"column\" [isHideable]=\"isHideable\" (sort)=\"sort.emit($event)\" (hide)=\"hide.emit($event)\"></angular2-st-column-title>\n      <div *ngIf=\"isResizable\" angular2-resizer class=\"angular2-resizer-block\"></div>\n    </th>\n    <th angular2-st-actions-title *ngIf=\"showActionColumnRight\" [grid]=\"grid\"></th>\n  `,\n                }]\n        }], propDecorators: { grid: [{\n                type: Input\n            }], isAllSelected: [{\n                type: Input\n            }], source: [{\n                type: Input\n            }], sort: [{\n                type: Output\n            }], hide: [{\n                type: Output\n            }], selectAllRows: [{\n                type: Output\n            }] } });\n\nclass AddButtonComponent {\n    constructor(ref) {\n        this.ref = ref;\n        this.create = new EventEmitter();\n    }\n    ngAfterViewInit() {\n        this.ref.nativeElement.classList.add('angular2-smart-actions-title', 'angular2-smart-actions-title-add');\n    }\n    ngOnChanges() {\n        this.isActionAdd = this.grid.getSetting('actions.add');\n        this.addNewButtonContent = this.grid.getSetting('add.addButtonContent');\n    }\n    onAdd(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        if (this.grid.getSetting('mode') === 'external') {\n            this.create.emit({\n                source: this.source,\n            });\n        }\n        else {\n            this.grid.createFormShown = true;\n        }\n    }\n}\nAddButtonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: AddButtonComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nAddButtonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: AddButtonComponent, selector: \"[angular2-st-add-button]\", inputs: { grid: \"grid\", source: \"source\" }, outputs: { create: \"create\" }, usesOnChanges: true, ngImport: i0, template: `\n    <a *ngIf=\"isActionAdd\" href=\"#\" class=\"angular2-smart-action angular2-smart-action-add-add\"\n        [innerHTML]=\"addNewButtonContent\" (click)=\"onAdd($event)\"></a>\n  `, isInline: true, directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: AddButtonComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[angular2-st-add-button]',\n                    template: `\n    <a *ngIf=\"isActionAdd\" href=\"#\" class=\"angular2-smart-action angular2-smart-action-add-add\"\n        [innerHTML]=\"addNewButtonContent\" (click)=\"onAdd($event)\"></a>\n  `,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { grid: [{\n                type: Input\n            }], source: [{\n                type: Input\n            }], create: [{\n                type: Output\n            }] } });\n\nclass FilterDefault {\n    constructor() {\n        this.inputClass = '';\n        this.filter = new EventEmitter();\n        this.query = '';\n    }\n    onFilter(query) {\n        this.source.addFilter({\n            field: this.column.id,\n            search: query,\n            filter: this.column.getFilterFunction(),\n        });\n    }\n}\nFilterDefault.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: FilterDefault, deps: [], target: i0.ɵɵFactoryTarget.Component });\nFilterDefault.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: FilterDefault, selector: \"ng-component\", inputs: { column: \"column\", source: \"source\", inputClass: \"inputClass\" }, outputs: { filter: \"filter\" }, ngImport: i0, template: '', isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: FilterDefault, decorators: [{\n            type: Component,\n            args: [{\n                    template: '',\n                }]\n        }], propDecorators: { column: [{\n                type: Input\n            }], source: [{\n                type: Input\n            }], inputClass: [{\n                type: Input\n            }], filter: [{\n                type: Output\n            }] } });\n\nclass CustomFilterComponent extends FilterDefault {\n    constructor(resolver) {\n        super();\n        this.resolver = resolver;\n    }\n    ngOnChanges(changes) {\n        if (this.column && !this.customComponent) {\n            const filter = this.column.filter;\n            if (!filter) {\n                return;\n            }\n            const componentFactory = this.resolver.resolveComponentFactory(filter.component);\n            this.customComponent = this.dynamicTarget.createComponent(componentFactory);\n            // set @Inputs and @Outputs of custom component\n            this.customComponent.instance.query = this.query;\n            this.customComponent.instance.column = this.column;\n            this.customComponent.instance.source = this.source;\n            this.customComponent.instance.inputClass = this.inputClass;\n            this.customComponent.instance.filter.subscribe((event) => { this.onFilter(event); });\n        }\n        if (this.customComponent) {\n            this.customComponent.instance.ngOnChanges(changes);\n        }\n    }\n    ngOnDestroy() {\n        if (this.customComponent) {\n            this.customComponent.destroy();\n        }\n    }\n}\nCustomFilterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: CustomFilterComponent, deps: [{ token: i0.ComponentFactoryResolver }], target: i0.ɵɵFactoryTarget.Component });\nCustomFilterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: CustomFilterComponent, selector: \"custom-table-filter\", inputs: { query: \"query\" }, viewQueries: [{ propertyName: \"dynamicTarget\", first: true, predicate: [\"dynamicTarget\"], descendants: true, read: ViewContainerRef, static: true }], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `<ng-template #dynamicTarget></ng-template>`, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: CustomFilterComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'custom-table-filter',\n                    template: `<ng-template #dynamicTarget></ng-template>`,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ComponentFactoryResolver }]; }, propDecorators: { query: [{\n                type: Input\n            }], dynamicTarget: [{\n                type: ViewChild,\n                args: ['dynamicTarget', { read: ViewContainerRef, static: true }]\n            }] } });\n\nclass DefaultFilter {\n    constructor() {\n        this.delay = 300;\n        this.filter = new EventEmitter();\n    }\n    ngOnDestroy() {\n        if (this.changesSubscription) {\n            this.changesSubscription.unsubscribe();\n        }\n        if (this.changesSubscription2) {\n            this.changesSubscription2.unsubscribe();\n        }\n    }\n    setFilter() {\n        this.filter.emit(this.query);\n    }\n}\nDefaultFilter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: DefaultFilter, deps: [], target: i0.ɵɵFactoryTarget.Component });\nDefaultFilter.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: DefaultFilter, selector: \"ng-component\", inputs: { query: \"query\", inputClass: \"inputClass\", column: \"column\" }, outputs: { filter: \"filter\" }, ngImport: i0, template: '', isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: DefaultFilter, decorators: [{\n            type: Component,\n            args: [{\n                    template: '',\n                }]\n        }], propDecorators: { query: [{\n                type: Input\n            }], inputClass: [{\n                type: Input\n            }], column: [{\n                type: Input\n            }], filter: [{\n                type: Output\n            }] } });\n\nclass SelectFilterComponent extends DefaultFilter {\n    constructor() {\n        super();\n    }\n    ngOnInit() {\n        const exist = this.inputControl.valueChanges;\n        if (!exist) {\n            return;\n        }\n        exist\n            .pipe(skip(1), distinctUntilChanged(), debounceTime(this.delay))\n            .subscribe((value) => this.setFilter());\n    }\n}\nSelectFilterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: SelectFilterComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nSelectFilterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: SelectFilterComponent, selector: \"select-filter\", viewQueries: [{ propertyName: \"inputControl\", first: true, predicate: [\"inputControl\"], descendants: true, read: NgControl, static: true }], usesInheritance: true, ngImport: i0, template: `\n    <select [ngClass]=\"inputClass\"\n            class=\"form-control\"\n            #inputControl\n            [(ngModel)]=\"query\">\n\n        <option value=\"\">{{ column.getFilterConfig().selectText }}</option>\n        <option *ngFor=\"let option of column.getFilterConfig().list\" [value]=\"option.value\">\n          {{ option.title }}\n        </option>\n    </select>\n  `, isInline: true, directives: [{ type: i1.SelectControlValueAccessor, selector: \"select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]\", inputs: [\"compareWith\"] }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i1.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: i1.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { type: i1.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: SelectFilterComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'select-filter',\n                    template: `\n    <select [ngClass]=\"inputClass\"\n            class=\"form-control\"\n            #inputControl\n            [(ngModel)]=\"query\">\n\n        <option value=\"\">{{ column.getFilterConfig().selectText }}</option>\n        <option *ngFor=\"let option of column.getFilterConfig().list\" [value]=\"option.value\">\n          {{ option.title }}\n        </option>\n    </select>\n  `,\n                }]\n        }], ctorParameters: function () { return []; }, propDecorators: { inputControl: [{\n                type: ViewChild,\n                args: ['inputControl', { read: NgControl, static: true }]\n            }] } });\n\nclass CheckboxFilterComponent extends DefaultFilter {\n    constructor() {\n        super();\n        this.filterActive = false;\n        this.inputControl = new FormControl();\n    }\n    ngOnInit() {\n        this.changesSubscription = this.inputControl.valueChanges\n            .pipe(debounceTime(this.delay))\n            .subscribe((checked) => {\n            this.filterActive = true;\n            const trueVal = (this.column.getFilterConfig() && this.column.getFilterConfig().true) || true;\n            const falseVal = (this.column.getFilterConfig() && this.column.getFilterConfig().false) || false;\n            this.query = checked ? trueVal : falseVal;\n            this.setFilter();\n        });\n    }\n    resetFilter(event) {\n        event.preventDefault();\n        this.query = '';\n        this.inputControl.setValue(false, { emitEvent: false });\n        this.filterActive = false;\n        this.setFilter();\n    }\n}\nCheckboxFilterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: CheckboxFilterComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCheckboxFilterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: CheckboxFilterComponent, selector: \"checkbox-filter\", usesInheritance: true, ngImport: i0, template: `\n    <input type=\"checkbox\" [formControl]=\"inputControl\" [ngClass]=\"inputClass\" class=\"form-control\">\n    <a href=\"#\" *ngIf=\"filterActive\"\n                (click)=\"resetFilter($event)\">{{column.getFilterConfig()?.resetText || 'reset'}}</a>\n  `, isInline: true, directives: [{ type: i1.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { type: i1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i1.FormControlDirective, selector: \"[formControl]\", inputs: [\"formControl\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: CheckboxFilterComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'checkbox-filter',\n                    template: `\n    <input type=\"checkbox\" [formControl]=\"inputControl\" [ngClass]=\"inputClass\" class=\"form-control\">\n    <a href=\"#\" *ngIf=\"filterActive\"\n                (click)=\"resetFilter($event)\">{{column.getFilterConfig()?.resetText || 'reset'}}</a>\n  `,\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass CompleterFilterComponent extends DefaultFilter {\n    constructor(completerService) {\n        super();\n        this.completerService = completerService;\n        this.completerContent = new Subject();\n    }\n    ngOnInit() {\n        const config = this.column.getFilterConfig().completer;\n        config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\n        config.dataService.descriptionField(config.descriptionField);\n        this.changesSubscription = this.completerContent\n            .pipe(map((ev) => (ev && ev.title) || ev || ''), distinctUntilChanged(), debounceTime(this.delay))\n            .subscribe((search) => {\n            this.query = search;\n            this.setFilter();\n        });\n    }\n    inputTextChanged(event) {\n        // workaround to trigger the search event when the home/end buttons are clicked\n        // when this happens the [(ngModel)]=\"query\" is set to \"\" but the (selected) method is not called\n        // so here it gets called manually\n        if (event === '') {\n            this.completerContent.next(event);\n        }\n    }\n}\nCompleterFilterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: CompleterFilterComponent, deps: [{ token: i1$1.CompleterService }], target: i0.ɵɵFactoryTarget.Component });\nCompleterFilterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: CompleterFilterComponent, selector: \"completer-filter\", usesInheritance: true, ngImport: i0, template: `\n    <ng2-completer [(ngModel)]=\"query\"\n                   (ngModelChange)=\"inputTextChanged($event)\"\n                   [dataService]=\"column.getFilterConfig().completer.dataService\"\n                   [minSearchLength]=\"column.getFilterConfig().completer.minSearchLength || 0\"\n                   [pause]=\"column.getFilterConfig().completer.pause || 0\"\n                   [placeholder]=\"column.getFilterConfig().completer.placeholder || 'Start typing...'\"\n                   (selected)=\"completerContent.next($event)\">\n    </ng2-completer>\n  `, isInline: true, components: [{ type: i1$1.CompleterCmp, selector: \"ng2-completer\", inputs: [\"inputName\", \"inputId\", \"pause\", \"minSearchLength\", \"maxChars\", \"overrideSuggested\", \"clearSelected\", \"clearUnselected\", \"fillHighlighted\", \"placeholder\", \"autoMatch\", \"disableInput\", \"autofocus\", \"openOnFocus\", \"openOnClick\", \"selectOnClick\", \"selectOnFocus\", \"autoHighlight\", \"datasource\", \"dataService\", \"textNoResults\", \"textSearching\", \"matchClass\", \"fieldTabindex\", \"inputClass\", \"initialValue\"], outputs: [\"selected\", \"highlighted\", \"blur\", \"click\", \"focus\", \"opened\", \"keyup\", \"keydown\"] }], directives: [{ type: i1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i1.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: CompleterFilterComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'completer-filter',\n                    template: `\n    <ng2-completer [(ngModel)]=\"query\"\n                   (ngModelChange)=\"inputTextChanged($event)\"\n                   [dataService]=\"column.getFilterConfig().completer.dataService\"\n                   [minSearchLength]=\"column.getFilterConfig().completer.minSearchLength || 0\"\n                   [pause]=\"column.getFilterConfig().completer.pause || 0\"\n                   [placeholder]=\"column.getFilterConfig().completer.placeholder || 'Start typing...'\"\n                   (selected)=\"completerContent.next($event)\">\n    </ng2-completer>\n  `,\n                }]\n        }], ctorParameters: function () { return [{ type: i1$1.CompleterService }]; } });\n\nclass DateFilterComponent extends DefaultFilter {\n    constructor() {\n        super();\n        this.startDate = new FormControl();\n        this.endDate = new FormControl();\n        this.dateBefore = new FormControl();\n        this.dateAfter = new FormControl();\n        this.dateEqual = new FormControl();\n        this.filterTypeSelect = new FormControl();\n        this.filterType = 'after';\n        this.filterOptions = ['before', 'after', 'equal', 'between'];\n    }\n    ngOnInit() {\n        this.changesSubscription2 = this.filterTypeSelect.valueChanges.subscribe(value => {\n            this.filterType = value;\n            if (this.changesSubscription) {\n                this.changesSubscription.unsubscribe();\n            }\n            this.changesSubscription = this.getFilterType()\n                .subscribe((value) => {\n                this.query = value;\n                this.setFilter();\n            });\n        });\n    }\n    getFilterType() {\n        switch (this.filterType) {\n            case 'before': {\n                return this.dateBefore.valueChanges.pipe(map((value) => '_date_before_' + value));\n            }\n            case 'after': {\n                return this.dateAfter.valueChanges.pipe(map((value) => '_date_after_' + value));\n            }\n            case 'equal': {\n                return this.dateEqual.valueChanges.pipe(map((value) => '_date_equal_' + value));\n            }\n            case 'between': {\n                return combineLatest([this.startDate.valueChanges, this.endDate.valueChanges])\n                    .pipe(map(([val1, val2]) => {\n                    return '_start_date_' + val1 + '_end_date_' + val2;\n                }));\n            }\n            default:\n                return of('');\n        }\n    }\n}\nDateFilterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: DateFilterComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nDateFilterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: DateFilterComponent, selector: \"date-filter\", usesInheritance: true, ngImport: i0, template: `\n    <select [formControl]=\"filterTypeSelect\">\n      <option [value]=\"option\" *ngFor=\"let  option of filterOptions\">{{option}}</option>\n    </select>\n    <div [ngSwitch]=\"filterType\">\n     <input *ngSwitchCase=\"'before'\" type=\"date\" [formControl]=\"dateBefore\" [ngClass]=\"inputClass\" class=\"form-control\">\n     <input *ngSwitchCase=\"'after'\" type=\"date\" [formControl]=\"dateAfter\" [ngClass]=\"inputClass\" class=\"form-control\">\n     <input *ngSwitchCase=\"'equal'\" type=\"date\" [formControl]=\"dateEqual\" [ngClass]=\"inputClass\" class=\"form-control\">\n     <input *ngSwitchCase=\"'between'\" type=\"date\" [formControl]=\"startDate\" [ngClass]=\"inputClass\" class=\"form-control\">\n     <input *ngSwitchCase=\"'between'\" type=\"date\" [formControl]=\"endDate\" [ngClass]=\"inputClass\" class=\"form-control\">\n    </div>\n  `, isInline: true, directives: [{ type: i1.SelectControlValueAccessor, selector: \"select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]\", inputs: [\"compareWith\"] }, { type: i1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i1.FormControlDirective, selector: \"[formControl]\", inputs: [\"formControl\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i1.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { type: i1.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { type: i2.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i2.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: i1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: DateFilterComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'date-filter',\n                    template: `\n    <select [formControl]=\"filterTypeSelect\">\n      <option [value]=\"option\" *ngFor=\"let  option of filterOptions\">{{option}}</option>\n    </select>\n    <div [ngSwitch]=\"filterType\">\n     <input *ngSwitchCase=\"'before'\" type=\"date\" [formControl]=\"dateBefore\" [ngClass]=\"inputClass\" class=\"form-control\">\n     <input *ngSwitchCase=\"'after'\" type=\"date\" [formControl]=\"dateAfter\" [ngClass]=\"inputClass\" class=\"form-control\">\n     <input *ngSwitchCase=\"'equal'\" type=\"date\" [formControl]=\"dateEqual\" [ngClass]=\"inputClass\" class=\"form-control\">\n     <input *ngSwitchCase=\"'between'\" type=\"date\" [formControl]=\"startDate\" [ngClass]=\"inputClass\" class=\"form-control\">\n     <input *ngSwitchCase=\"'between'\" type=\"date\" [formControl]=\"endDate\" [ngClass]=\"inputClass\" class=\"form-control\">\n    </div>\n  `,\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass MselectFilterComponent extends DefaultFilter {\n    constructor(http) {\n        super();\n        this.http = http;\n        this.selector = \"*;*\";\n        this.dropdownList = [];\n        this.selectedItems = [];\n        this.dropdownSettings = {};\n    }\n    ngOnInit() {\n        this.column.filterFunction = this.onfilterValues.bind(this);\n        const config = this.column.getFilterConfig();\n        this.dropdownList = config.dropdownList || [];\n        this.selectedItems = config.selectedItems || [];\n        let setting = {\n            singleSelection: false,\n            text: \"Select\",\n            selectAllText: \"Select All\",\n            unSelectAllText: 'UnSelect All',\n            enableSearchFilter: true,\n            classes: \"myclass\",\n            maxHeight: 200,\n            position: 'top',\n            autoPosition: true,\n        };\n        this.dropdownSettings = Object.assign(setting, config.dropdownSettings);\n    }\n    onfilterValues(cellValue, search, data, cellName) {\n        if (search.indexOf(this.selector) != -1) {\n            let searchArray = search.split(this.selector);\n            return searchArray.indexOf(cellValue) != -1;\n        }\n        return defaultStringInclusionFilter(cellValue, search, data, cellName);\n    }\n    onItemSelect(item) {\n        this.updateQuery();\n    }\n    OnItemDeSelect(item) {\n        this.updateQuery();\n    }\n    onSelectAll(items) {\n        this.updateQuery();\n    }\n    onDeSelectAll(items) {\n        this.updateQuery();\n    }\n    updateQuery() {\n        this.query = this.selectedItems.map(item => item.id).join(this.selector); //.replace(/ /g, '')\n        this.setFilter();\n    }\n}\nMselectFilterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: MselectFilterComponent, deps: [{ token: i1$2.HttpClient }], target: i0.ɵɵFactoryTarget.Component });\nMselectFilterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: MselectFilterComponent, selector: \"mselect-filter\", usesInheritance: true, ngImport: i0, template: `<angular2-multiselect [data]=\"dropdownList\"\n    [(ngModel)]=\"selectedItems\"\n    [settings]=\"dropdownSettings\"\n    (onSelect)=\"onItemSelect($event)\"\n    (onDeSelect)=\"OnItemDeSelect($event)\"\n    (onSelectAll)=\"onSelectAll($event)\"\n    (onDeSelectAll)=\"onDeSelectAll($event)\">\n    </angular2-multiselect>`, isInline: true, components: [{ type: i2$1.AngularMultiSelect, selector: \"angular2-multiselect\", inputs: [\"settings\", \"data\", \"loading\"], outputs: [\"onSelect\", \"onDeSelect\", \"onSelectAll\", \"onDeSelectAll\", \"onOpen\", \"onClose\", \"onScrollToEnd\", \"onFilterSelectAll\", \"onFilterDeSelectAll\", \"onAddFilterNewItem\", \"onGroupSelect\", \"onGroupDeSelect\"] }], directives: [{ type: i1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i1.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: MselectFilterComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mselect-filter',\n                    template: `<angular2-multiselect [data]=\"dropdownList\"\n    [(ngModel)]=\"selectedItems\"\n    [settings]=\"dropdownSettings\"\n    (onSelect)=\"onItemSelect($event)\"\n    (onDeSelect)=\"OnItemDeSelect($event)\"\n    (onSelectAll)=\"onSelectAll($event)\"\n    (onDeSelectAll)=\"onDeSelectAll($event)\">\n    </angular2-multiselect>`\n                }]\n        }], ctorParameters: function () { return [{ type: i1$2.HttpClient }]; } });\n\nclass InputFilterComponent extends DefaultFilter {\n    constructor() {\n        super();\n        this.inputControl = new FormControl();\n    }\n    ngOnInit() {\n        if (this.query) {\n            this.inputControl.setValue(this.query);\n        }\n        this.inputControl.valueChanges\n            .pipe(distinctUntilChanged(), debounceTime(this.delay))\n            .subscribe((value) => {\n            this.query = this.inputControl.value;\n            this.setFilter();\n        });\n    }\n    ngOnChanges(changes) {\n        if (changes.query) {\n            this.inputControl.setValue(this.query);\n        }\n    }\n}\nInputFilterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: InputFilterComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nInputFilterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: InputFilterComponent, selector: \"input-filter\", usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `\n    <input\n      [ngClass]=\"inputClass\"\n      [formControl]=\"inputControl\"\n      class=\"form-control\"\n      type=\"text\"\n      placeholder=\"{{ column.placeholder || column.title }}\"/>\n  `, isInline: true, directives: [{ type: i1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i1.FormControlDirective, selector: \"[formControl]\", inputs: [\"formControl\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: InputFilterComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'input-filter',\n                    template: `\n    <input\n      [ngClass]=\"inputClass\"\n      [formControl]=\"inputControl\"\n      class=\"form-control\"\n      type=\"text\"\n      placeholder=\"{{ column.placeholder || column.title }}\"/>\n  `,\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass DefaultFilterComponent extends FilterDefault {\n}\nDefaultFilterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: DefaultFilterComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nDefaultFilterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: DefaultFilterComponent, selector: \"default-table-filter\", inputs: { query: \"query\" }, usesInheritance: true, ngImport: i0, template: `\n    <ng-container [ngSwitch]=\"column.getFilterType()\">\n      <select-filter *ngSwitchCase=\"'list'\"\n                     [query]=\"query\"\n                     [ngClass]=\"inputClass\"\n                     [column]=\"column\"\n                     (filter)=\"onFilter($event)\">\n      </select-filter>\n      <checkbox-filter *ngSwitchCase=\"'checkbox'\"\n                       [query]=\"query\"\n                       [ngClass]=\"inputClass\"\n                       [column]=\"column\"\n                       (filter)=\"onFilter($event)\">\n      </checkbox-filter>\n      <completer-filter *ngSwitchCase=\"'completer'\"\n                        [query]=\"query\"\n                        [ngClass]=\"inputClass\"\n                        [column]=\"column\"\n                        (filter)=\"onFilter($event)\">\n      </completer-filter>\n      <date-filter *ngSwitchCase=\"'date'\"\n                        [query]=\"query\"\n                        [ngClass]=\"inputClass\"\n                        [column]=\"column\"\n                        (filter)=\"onFilter($event)\">\n      </date-filter>\n      <mselect-filter *ngSwitchCase=\"'multiple'\"\n                        [query]=\"query\"\n                        [ngClass]=\"inputClass\"\n                        [column]=\"column\"\n                        (filter)=\"onFilter($event)\">\n      </mselect-filter>\n      <input-filter *ngSwitchDefault\n                    [query]=\"query\"\n                    [ngClass]=\"inputClass\"\n                    [column]=\"column\"\n                    (filter)=\"onFilter($event)\">\n      </input-filter>\n    </ng-container>\n  `, isInline: true, components: [{ type: SelectFilterComponent, selector: \"select-filter\" }, { type: CheckboxFilterComponent, selector: \"checkbox-filter\" }, { type: CompleterFilterComponent, selector: \"completer-filter\" }, { type: DateFilterComponent, selector: \"date-filter\" }, { type: MselectFilterComponent, selector: \"mselect-filter\" }, { type: InputFilterComponent, selector: \"input-filter\" }], directives: [{ type: i2.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i2.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i2.NgSwitchDefault, selector: \"[ngSwitchDefault]\" }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: DefaultFilterComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'default-table-filter',\n                    template: `\n    <ng-container [ngSwitch]=\"column.getFilterType()\">\n      <select-filter *ngSwitchCase=\"'list'\"\n                     [query]=\"query\"\n                     [ngClass]=\"inputClass\"\n                     [column]=\"column\"\n                     (filter)=\"onFilter($event)\">\n      </select-filter>\n      <checkbox-filter *ngSwitchCase=\"'checkbox'\"\n                       [query]=\"query\"\n                       [ngClass]=\"inputClass\"\n                       [column]=\"column\"\n                       (filter)=\"onFilter($event)\">\n      </checkbox-filter>\n      <completer-filter *ngSwitchCase=\"'completer'\"\n                        [query]=\"query\"\n                        [ngClass]=\"inputClass\"\n                        [column]=\"column\"\n                        (filter)=\"onFilter($event)\">\n      </completer-filter>\n      <date-filter *ngSwitchCase=\"'date'\"\n                        [query]=\"query\"\n                        [ngClass]=\"inputClass\"\n                        [column]=\"column\"\n                        (filter)=\"onFilter($event)\">\n      </date-filter>\n      <mselect-filter *ngSwitchCase=\"'multiple'\"\n                        [query]=\"query\"\n                        [ngClass]=\"inputClass\"\n                        [column]=\"column\"\n                        (filter)=\"onFilter($event)\">\n      </mselect-filter>\n      <input-filter *ngSwitchDefault\n                    [query]=\"query\"\n                    [ngClass]=\"inputClass\"\n                    [column]=\"column\"\n                    (filter)=\"onFilter($event)\">\n      </input-filter>\n    </ng-container>\n  `,\n                }]\n        }], propDecorators: { query: [{\n                type: Input\n            }] } });\n\nclass FilterComponent extends FilterDefault {\n    constructor() {\n        super(...arguments);\n        this.query = '';\n    }\n    ngOnChanges(changes) {\n        if (changes.source) {\n            if (!changes.source.firstChange) {\n                this.dataChangedSub.unsubscribe();\n            }\n            this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\n                const filterConf = this.source.getFilter();\n                if (filterConf && filterConf.filters && filterConf.filters.length === 0) {\n                    this.query = '';\n                    // add a check for existing filters an set the query if one exists for this column\n                    // this covers instances where the filter is set by user code while maintaining existing functionality\n                }\n                else if (filterConf && filterConf.filters && filterConf.filters.length > 0) {\n                    filterConf.filters.forEach((k, v) => {\n                        if (k.field == this.column.id) {\n                            this.query = k.search;\n                        }\n                    });\n                }\n            });\n        }\n    }\n}\nFilterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: FilterComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });\nFilterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: FilterComponent, selector: \"angular2-smart-table-filter\", usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `\n      <div class=\"angular2-smart-filter\" *ngIf=\"column.isFilterable\" [ngSwitch]=\"column.getFilterType()\">\n        <custom-table-filter *ngSwitchCase=\"'custom'\"\n                             [query]=\"query\"\n                             [column]=\"column\"\n                             [source]=\"source\"\n                             [inputClass]=\"inputClass\"\n                             (filter)=\"onFilter($event)\">\n        </custom-table-filter>\n        <default-table-filter *ngSwitchDefault\n                              [query]=\"query\"\n                              [column]=\"column\"\n                              [source]=\"source\"\n                              [inputClass]=\"inputClass\"\n                              (filter)=\"onFilter($event)\">\n        </default-table-filter>\n      </div>\n    `, isInline: true, styles: [\":host .angular2-smart-filter ::ng-deep input,:host .angular2-smart-filter ::ng-deep select{width:100%;line-height:normal;padding:.375em .75em;font-weight:400}:host .angular2-smart-filter ::ng-deep input[type=search]{box-sizing:inherit}:host .angular2-smart-filter ::ng-deep .completer-dropdown-holder{font-weight:400}:host .angular2-smart-filter ::ng-deep a{font-weight:400}\\n\"], components: [{ type: CustomFilterComponent, selector: \"custom-table-filter\", inputs: [\"query\"] }, { type: DefaultFilterComponent, selector: \"default-table-filter\", inputs: [\"query\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i2.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: i2.NgSwitchDefault, selector: \"[ngSwitchDefault]\" }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: FilterComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'angular2-smart-table-filter', template: `\n      <div class=\"angular2-smart-filter\" *ngIf=\"column.isFilterable\" [ngSwitch]=\"column.getFilterType()\">\n        <custom-table-filter *ngSwitchCase=\"'custom'\"\n                             [query]=\"query\"\n                             [column]=\"column\"\n                             [source]=\"source\"\n                             [inputClass]=\"inputClass\"\n                             (filter)=\"onFilter($event)\">\n        </custom-table-filter>\n        <default-table-filter *ngSwitchDefault\n                              [query]=\"query\"\n                              [column]=\"column\"\n                              [source]=\"source\"\n                              [inputClass]=\"inputClass\"\n                              (filter)=\"onFilter($event)\">\n        </default-table-filter>\n      </div>\n    `, styles: [\":host .angular2-smart-filter ::ng-deep input,:host .angular2-smart-filter ::ng-deep select{width:100%;line-height:normal;padding:.375em .75em;font-weight:400}:host .angular2-smart-filter ::ng-deep input[type=search]{box-sizing:inherit}:host .angular2-smart-filter ::ng-deep .completer-dropdown-holder{font-weight:400}:host .angular2-smart-filter ::ng-deep a{font-weight:400}\\n\"] }]\n        }] });\n\nclass TheadFitlersRowComponent {\n    constructor() {\n        this.create = new EventEmitter();\n        this.filter = new EventEmitter();\n    }\n    ngOnChanges() {\n        this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n        this.showActionColumnLeft = this.grid.showActionColumn('left');\n        this.showActionColumnRight = this.grid.showActionColumn('right');\n        this.filterInputClass = this.grid.getSetting('filter.inputClass');\n    }\n    getVisibleColumns(columns) {\n        return (columns || []).filter((column) => !column.hide);\n    }\n}\nTheadFitlersRowComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: TheadFitlersRowComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nTheadFitlersRowComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: TheadFitlersRowComponent, selector: \"[angular2-st-thead-filters-row]\", inputs: { grid: \"grid\", source: \"source\" }, outputs: { create: \"create\", filter: \"filter\" }, usesOnChanges: true, ngImport: i0, template: `\n    <th *ngIf=\"isMultiSelectVisible\"></th>\n    <th angular2-st-add-button *ngIf=\"showActionColumnLeft\"\n                          [grid]=\"grid\"\n                          (create)=\"create.emit($event)\">\n    </th>\n    <th *ngFor=\"let column of getVisibleColumns(grid.getColumns())\" class=\"angular2-smart-th {{ column.id }}\">\n      <angular2-smart-table-filter [source]=\"source\"\n                              [column]=\"column\"\n                              [inputClass]=\"filterInputClass\"\n                              (filter)=\"filter.emit($event)\">\n      </angular2-smart-table-filter>\n    </th>\n    <th angular2-st-add-button *ngIf=\"showActionColumnRight\"\n                          [grid]=\"grid\"\n                          [source]=\"source\"\n                          (create)=\"create.emit($event)\">\n    </th>\n  `, isInline: true, components: [{ type: AddButtonComponent, selector: \"[angular2-st-add-button]\", inputs: [\"grid\", \"source\"], outputs: [\"create\"] }, { type: FilterComponent, selector: \"angular2-smart-table-filter\" }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: TheadFitlersRowComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[angular2-st-thead-filters-row]',\n                    template: `\n    <th *ngIf=\"isMultiSelectVisible\"></th>\n    <th angular2-st-add-button *ngIf=\"showActionColumnLeft\"\n                          [grid]=\"grid\"\n                          (create)=\"create.emit($event)\">\n    </th>\n    <th *ngFor=\"let column of getVisibleColumns(grid.getColumns())\" class=\"angular2-smart-th {{ column.id }}\">\n      <angular2-smart-table-filter [source]=\"source\"\n                              [column]=\"column\"\n                              [inputClass]=\"filterInputClass\"\n                              (filter)=\"filter.emit($event)\">\n      </angular2-smart-table-filter>\n    </th>\n    <th angular2-st-add-button *ngIf=\"showActionColumnRight\"\n                          [grid]=\"grid\"\n                          [source]=\"source\"\n                          (create)=\"create.emit($event)\">\n    </th>\n  `,\n                }]\n        }], propDecorators: { grid: [{\n                type: Input\n            }], source: [{\n                type: Input\n            }], create: [{\n                type: Output\n            }], filter: [{\n                type: Output\n            }] } });\n\nclass ActionsComponent {\n    constructor() {\n        this.create = new EventEmitter();\n    }\n    ngOnChanges() {\n        this.createButtonContent = this.grid.getSetting('add.createButtonContent');\n        this.cancelButtonContent = this.grid.getSetting('add.cancelButtonContent');\n    }\n}\nActionsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: ActionsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nActionsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: ActionsComponent, selector: \"angular2-st-actions\", inputs: { grid: \"grid\" }, outputs: { create: \"create\" }, usesOnChanges: true, ngImport: i0, template: `\n    <a href=\"#\" class=\"angular2-smart-action angular2-smart-action-add-create\"\n        [innerHTML]=\"createButtonContent\"\n        (click)=\"$event.preventDefault();create.emit($event)\"></a>\n    <a href=\"#\" class=\"angular2-smart-action angular2-smart-action-add-cancel\"\n        [innerHTML]=\"cancelButtonContent\"\n        (click)=\"$event.preventDefault();grid.createFormShown = false;\"></a>\n  `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: ActionsComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'angular2-st-actions',\n                    template: `\n    <a href=\"#\" class=\"angular2-smart-action angular2-smart-action-add-create\"\n        [innerHTML]=\"createButtonContent\"\n        (click)=\"$event.preventDefault();create.emit($event)\"></a>\n    <a href=\"#\" class=\"angular2-smart-action angular2-smart-action-add-cancel\"\n        [innerHTML]=\"cancelButtonContent\"\n        (click)=\"$event.preventDefault();grid.createFormShown = false;\"></a>\n  `,\n                }]\n        }], propDecorators: { grid: [{\n                type: Input\n            }], create: [{\n                type: Output\n            }] } });\n\nclass CustomViewComponent {\n    constructor(resolver) {\n        this.resolver = resolver;\n    }\n    ngOnInit() {\n        if (this.cell && !this.customComponent) {\n            this.createCustomComponent();\n            this.callOnComponentInit();\n            this.patchInstance();\n        }\n    }\n    ngOnDestroy() {\n        if (this.customComponent) {\n            this.customComponent.destroy();\n        }\n    }\n    createCustomComponent() {\n        const componentFactory = this.resolver.resolveComponentFactory(this.cell.getColumn().renderComponent);\n        this.customComponent = this.dynamicTarget.createComponent(componentFactory);\n    }\n    callOnComponentInit() {\n        const onComponentInitFunction = this.cell.getColumn().getOnComponentInitFunction();\n        onComponentInitFunction && onComponentInitFunction(this.customComponent.instance, this.getPatch());\n    }\n    patchInstance() {\n        Object.assign(this.customComponent.instance, this.getPatch());\n    }\n    getPatch() {\n        return {\n            value: this.cell.getValue(),\n            rowData: this.cell.getRow().getData()\n        };\n    }\n}\nCustomViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: CustomViewComponent, deps: [{ token: i0.ComponentFactoryResolver }], target: i0.ɵɵFactoryTarget.Component });\nCustomViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: CustomViewComponent, selector: \"custom-view-component\", inputs: { cell: \"cell\" }, viewQueries: [{ propertyName: \"dynamicTarget\", first: true, predicate: [\"dynamicTarget\"], descendants: true, read: ViewContainerRef, static: true }], ngImport: i0, template: `\n    <ng-template #dynamicTarget></ng-template>\n  `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: CustomViewComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'custom-view-component',\n                    template: `\n    <ng-template #dynamicTarget></ng-template>\n  `,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ComponentFactoryResolver }]; }, propDecorators: { cell: [{\n                type: Input\n            }], dynamicTarget: [{\n                type: ViewChild,\n                args: ['dynamicTarget', { read: ViewContainerRef, static: true }]\n            }] } });\n\nclass ViewCellComponent {\n}\nViewCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: ViewCellComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nViewCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: ViewCellComponent, selector: \"table-cell-view-mode\", inputs: { cell: \"cell\" }, ngImport: i0, template: `\n    <div [ngSwitch]=\"cell.getColumn().type\">\n        <custom-view-component *ngSwitchCase=\"'custom'\" [cell]=\"cell\"></custom-view-component>\n        <div *ngSwitchCase=\"'html'\" [innerHTML]=\"cell.getValue()\"></div>\n        <div *ngSwitchDefault>{{ cell.getValue() }}</div>\n    </div>\n    `, isInline: true, components: [{ type: CustomViewComponent, selector: \"custom-view-component\", inputs: [\"cell\"] }], directives: [{ type: i2.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i2.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: i2.NgSwitchDefault, selector: \"[ngSwitchDefault]\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: ViewCellComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'table-cell-view-mode',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: `\n    <div [ngSwitch]=\"cell.getColumn().type\">\n        <custom-view-component *ngSwitchCase=\"'custom'\" [cell]=\"cell\"></custom-view-component>\n        <div *ngSwitchCase=\"'html'\" [innerHTML]=\"cell.getValue()\"></div>\n        <div *ngSwitchDefault>{{ cell.getValue() }}</div>\n    </div>\n    `,\n                }]\n        }], propDecorators: { cell: [{\n                type: Input\n            }] } });\n\nclass EditCellDefault {\n    constructor() {\n        this.inputClass = '';\n        this.edited = new EventEmitter();\n    }\n    onEdited(event) {\n        this.edited.next(event);\n        return false;\n    }\n    onStopEditing() {\n        this.cell.getRow().isInEditing = false;\n        return false;\n    }\n    onClick(event) {\n        event.stopPropagation();\n    }\n}\nEditCellDefault.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: EditCellDefault, deps: [], target: i0.ɵɵFactoryTarget.Component });\nEditCellDefault.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: EditCellDefault, selector: \"ng-component\", inputs: { cell: \"cell\", inputClass: \"inputClass\" }, outputs: { edited: \"edited\" }, ngImport: i0, template: '', isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: EditCellDefault, decorators: [{\n            type: Component,\n            args: [{\n                    template: ''\n                }]\n        }], propDecorators: { cell: [{\n                type: Input\n            }], inputClass: [{\n                type: Input\n            }], edited: [{\n                type: Output\n            }] } });\n\nclass CustomEditComponent extends EditCellDefault {\n    constructor(resolver) {\n        super();\n        this.resolver = resolver;\n    }\n    ngOnChanges(changes) {\n        if (this.cell && !this.customComponent) {\n            const editor = this.cell.getColumn().editor;\n            if (!editor)\n                return;\n            const componentFactory = this.resolver.resolveComponentFactory(editor.component);\n            this.customComponent = this.dynamicTarget.createComponent(componentFactory);\n            // set @Inputs and @Outputs of custom component\n            this.customComponent.instance.cell = this.cell;\n            this.customComponent.instance.inputClass = this.inputClass;\n            this.customComponent.instance.onStopEditing.subscribe(() => this.onStopEditing());\n            this.customComponent.instance.onEdited.subscribe((event) => this.onEdited(event));\n            this.customComponent.instance.onClick.subscribe((event) => this.onClick(event));\n        }\n    }\n    ngOnDestroy() {\n        if (this.customComponent) {\n            this.customComponent.destroy();\n        }\n    }\n}\nCustomEditComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: CustomEditComponent, deps: [{ token: i0.ComponentFactoryResolver }], target: i0.ɵɵFactoryTarget.Component });\nCustomEditComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: CustomEditComponent, selector: \"table-cell-custom-editor\", viewQueries: [{ propertyName: \"dynamicTarget\", first: true, predicate: [\"dynamicTarget\"], descendants: true, read: ViewContainerRef, static: true }], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `\n    <ng-template #dynamicTarget></ng-template>\n  `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: CustomEditComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'table-cell-custom-editor',\n                    template: `\n    <ng-template #dynamicTarget></ng-template>\n  `,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ComponentFactoryResolver }]; }, propDecorators: { dynamicTarget: [{\n                type: ViewChild,\n                args: ['dynamicTarget', { read: ViewContainerRef, static: true }]\n            }] } });\n\nclass DefaultEditor {\n    constructor() {\n        this.onStopEditing = new EventEmitter();\n        this.onEdited = new EventEmitter();\n        this.onClick = new EventEmitter();\n    }\n    get disableEnterKeySave() {\n        return this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().disableEnterKeySave;\n    }\n}\nDefaultEditor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: DefaultEditor, deps: [], target: i0.ɵɵFactoryTarget.Component });\nDefaultEditor.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: DefaultEditor, selector: \"ng-component\", inputs: { cell: \"cell\", inputClass: \"inputClass\" }, outputs: { onStopEditing: \"onStopEditing\", onEdited: \"onEdited\", onClick: \"onClick\" }, ngImport: i0, template: '', isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: DefaultEditor, decorators: [{\n            type: Component,\n            args: [{\n                    template: '',\n                }]\n        }], propDecorators: { cell: [{\n                type: Input\n            }], inputClass: [{\n                type: Input\n            }], onStopEditing: [{\n                type: Output\n            }], onEdited: [{\n                type: Output\n            }], onClick: [{\n                type: Output\n            }] } });\n\nclass SelectEditorComponent extends DefaultEditor {\n    constructor() {\n        super();\n    }\n}\nSelectEditorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: SelectEditorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nSelectEditorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: SelectEditorComponent, selector: \"select-editor\", usesInheritance: true, ngImport: i0, template: `\n    <select [ngClass]=\"inputClass\"\n            class=\"form-control\"\n            [(ngModel)]=\"cell.newValue\"\n            [name]=\"cell.getId()\"\n            [disabled]=\"!cell.isEditable()\"\n            (click)=\"onClick.emit($event)\"\n            [multiple]=\"cell.getColumn().getConfig()?.multiple\">\n            (keydown.enter)=\"disableEnterKeySave || onEdited.emit($event)\"\n            (keydown.esc)=\"onStopEditing.emit()\">\n\n        <option *ngFor=\"let option of cell.getColumn().getConfig()?.list\" [value]=\"option.value\"\n                [selected]=\"option.value === cell.getValue()\">{{ option.title }}\n        </option>\n    </select>\n    `, isInline: true, directives: [{ type: i1.SelectMultipleControlValueAccessor, selector: \"select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]\", inputs: [\"compareWith\"] }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i1.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i1.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { type: i1.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: SelectEditorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'select-editor',\n                    template: `\n    <select [ngClass]=\"inputClass\"\n            class=\"form-control\"\n            [(ngModel)]=\"cell.newValue\"\n            [name]=\"cell.getId()\"\n            [disabled]=\"!cell.isEditable()\"\n            (click)=\"onClick.emit($event)\"\n            [multiple]=\"cell.getColumn().getConfig()?.multiple\">\n            (keydown.enter)=\"disableEnterKeySave || onEdited.emit($event)\"\n            (keydown.esc)=\"onStopEditing.emit()\">\n\n        <option *ngFor=\"let option of cell.getColumn().getConfig()?.list\" [value]=\"option.value\"\n                [selected]=\"option.value === cell.getValue()\">{{ option.title }}\n        </option>\n    </select>\n    `,\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass TextareaEditorComponent extends DefaultEditor {\n    constructor() {\n        super();\n    }\n}\nTextareaEditorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: TextareaEditorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nTextareaEditorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: TextareaEditorComponent, selector: \"textarea-editor\", usesInheritance: true, ngImport: i0, template: `\n    <textarea [ngClass]=\"inputClass\"\n              class=\"form-control\"\n              [(ngModel)]=\"cell.newValue\"\n              [name]=\"cell.getId()\"\n              [disabled]=\"!cell.isEditable()\"\n              [placeholder]=\"cell.getTitle()\"\n              (click)=\"onClick.emit($event)\"\n              (keydown.enter)=\"disableEnterKeySave || onEdited.emit($event)\"\n              (keydown.esc)=\"onStopEditing.emit()\">\n    </textarea>\n    `, isInline: true, styles: [\":host input,:host textarea{width:100%;line-height:normal;padding:.375em .75em}\\n\"], directives: [{ type: i1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i1.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: TextareaEditorComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'textarea-editor', template: `\n    <textarea [ngClass]=\"inputClass\"\n              class=\"form-control\"\n              [(ngModel)]=\"cell.newValue\"\n              [name]=\"cell.getId()\"\n              [disabled]=\"!cell.isEditable()\"\n              [placeholder]=\"cell.getTitle()\"\n              (click)=\"onClick.emit($event)\"\n              (keydown.enter)=\"disableEnterKeySave || onEdited.emit($event)\"\n              (keydown.esc)=\"onStopEditing.emit()\">\n    </textarea>\n    `, styles: [\":host input,:host textarea{width:100%;line-height:normal;padding:.375em .75em}\\n\"] }]\n        }], ctorParameters: function () { return []; } });\n\nclass CheckboxEditorComponent extends DefaultEditor {\n    constructor() {\n        super();\n    }\n    onChange(event) {\n        const trueVal = (this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().true) || true;\n        const falseVal = (this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().false) || false;\n        this.cell.newValue = event.target.checked ? trueVal : falseVal;\n    }\n}\nCheckboxEditorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: CheckboxEditorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCheckboxEditorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: CheckboxEditorComponent, selector: \"checkbox-editor\", usesInheritance: true, ngImport: i0, template: `\n    <input [ngClass]=\"inputClass\"\n           type=\"checkbox\"\n           class=\"form-control\"\n           [name]=\"cell.getId()\"\n           [disabled]=\"!cell.isEditable()\"\n           [checked]=\"cell.getValue() == (cell.getColumn().getConfig()?.true || true)\"\n           (click)=\"onClick.emit($event)\"\n           (change)=\"onChange($event)\">\n    `, isInline: true, styles: [\":host input,:host textarea{width:100%;line-height:normal;padding:.375em .75em}\\n\"], directives: [{ type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: CheckboxEditorComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'checkbox-editor', template: `\n    <input [ngClass]=\"inputClass\"\n           type=\"checkbox\"\n           class=\"form-control\"\n           [name]=\"cell.getId()\"\n           [disabled]=\"!cell.isEditable()\"\n           [checked]=\"cell.getValue() == (cell.getColumn().getConfig()?.true || true)\"\n           (click)=\"onClick.emit($event)\"\n           (change)=\"onChange($event)\">\n    `, styles: [\":host input,:host textarea{width:100%;line-height:normal;padding:.375em .75em}\\n\"] }]\n        }], ctorParameters: function () { return []; } });\n\nclass CompleterEditorComponent extends DefaultEditor {\n    constructor(completerService) {\n        super();\n        this.completerService = completerService;\n        this.completerStr = '';\n    }\n    ngOnInit() {\n        const editor = this.cell.getColumn().editor;\n        if (editor && editor.type === 'completer') {\n            const config = this.cell.getColumn().getConfig().completer;\n            config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\n            config.dataService.descriptionField(config.descriptionField);\n        }\n    }\n    onEditedCompleter(event) {\n        this.cell.newValue = event.title;\n        return false;\n    }\n}\nCompleterEditorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: CompleterEditorComponent, deps: [{ token: i1$1.CompleterService }], target: i0.ɵɵFactoryTarget.Component });\nCompleterEditorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: CompleterEditorComponent, selector: \"completer-editor\", usesInheritance: true, ngImport: i0, template: `\n    <ng2-completer [(ngModel)]=\"completerStr\"\n                   [dataService]=\"cell.getColumn().getConfig().completer.dataService\"\n                   [minSearchLength]=\"cell.getColumn().getConfig().completer.minSearchLength || 0\"\n                   [pause]=\"cell.getColumn().getConfig().completer.pause || 0\"\n                   [placeholder]=\"cell.getColumn().getConfig().completer.placeholder || 'Start typing...'\"\n                   (selected)=\"onEditedCompleter($event)\">\n    </ng2-completer>\n    `, isInline: true, components: [{ type: i1$1.CompleterCmp, selector: \"ng2-completer\", inputs: [\"inputName\", \"inputId\", \"pause\", \"minSearchLength\", \"maxChars\", \"overrideSuggested\", \"clearSelected\", \"clearUnselected\", \"fillHighlighted\", \"placeholder\", \"autoMatch\", \"disableInput\", \"autofocus\", \"openOnFocus\", \"openOnClick\", \"selectOnClick\", \"selectOnFocus\", \"autoHighlight\", \"datasource\", \"dataService\", \"textNoResults\", \"textSearching\", \"matchClass\", \"fieldTabindex\", \"inputClass\", \"initialValue\"], outputs: [\"selected\", \"highlighted\", \"blur\", \"click\", \"focus\", \"opened\", \"keyup\", \"keydown\"] }], directives: [{ type: i1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i1.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: CompleterEditorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'completer-editor',\n                    template: `\n    <ng2-completer [(ngModel)]=\"completerStr\"\n                   [dataService]=\"cell.getColumn().getConfig().completer.dataService\"\n                   [minSearchLength]=\"cell.getColumn().getConfig().completer.minSearchLength || 0\"\n                   [pause]=\"cell.getColumn().getConfig().completer.pause || 0\"\n                   [placeholder]=\"cell.getColumn().getConfig().completer.placeholder || 'Start typing...'\"\n                   (selected)=\"onEditedCompleter($event)\">\n    </ng2-completer>\n    `,\n                }]\n        }], ctorParameters: function () { return [{ type: i1$1.CompleterService }]; } });\n\nclass InputEditorComponent extends DefaultEditor {\n    constructor() {\n        super();\n    }\n}\nInputEditorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: InputEditorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nInputEditorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: InputEditorComponent, selector: \"input-editor\", usesInheritance: true, ngImport: i0, template: `\n    <input [ngClass]=\"inputClass\"\n           class=\"form-control\"\n           [(ngModel)]=\"cell.newValue\"\n           [name]=\"cell.getId()\"\n           [placeholder]=\"cell.getTitle()\"\n           [disabled]=\"!cell.isEditable()\"\n           (click)=\"onClick.emit($event)\"\n           (keydown.enter)=\"disableEnterKeySave || onEdited.emit($event)\"\n           (keydown.esc)=\"onStopEditing.emit()\">\n    `, isInline: true, styles: [\":host input,:host textarea{width:100%;line-height:normal;padding:.375em .75em}\\n\"], directives: [{ type: i1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i1.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: InputEditorComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'input-editor', template: `\n    <input [ngClass]=\"inputClass\"\n           class=\"form-control\"\n           [(ngModel)]=\"cell.newValue\"\n           [name]=\"cell.getId()\"\n           [placeholder]=\"cell.getTitle()\"\n           [disabled]=\"!cell.isEditable()\"\n           (click)=\"onClick.emit($event)\"\n           (keydown.enter)=\"disableEnterKeySave || onEdited.emit($event)\"\n           (keydown.esc)=\"onStopEditing.emit()\">\n    `, styles: [\":host input,:host textarea{width:100%;line-height:normal;padding:.375em .75em}\\n\"] }]\n        }], ctorParameters: function () { return []; } });\n\nclass DefaultEditComponent extends EditCellDefault {\n    constructor() {\n        super();\n    }\n    getEditorType() {\n        const editor = this.cell.getColumn().editor;\n        if (!editor) {\n            return 'default';\n        }\n        return editor.type;\n    }\n}\nDefaultEditComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: DefaultEditComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nDefaultEditComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: DefaultEditComponent, selector: \"table-cell-default-editor\", usesInheritance: true, ngImport: i0, template: \"<div [ngSwitch]=\\\"getEditorType()\\\">\\n    <select-editor *ngSwitchCase=\\\"'list'\\\"\\n                   [cell]=\\\"cell\\\"\\n                   [inputClass]=\\\"inputClass\\\"\\n                   (onClick)=\\\"onClick($event)\\\"\\n                   (onEdited)=\\\"onEdited($event)\\\"\\n                   (onStopEditing)=\\\"onStopEditing()\\\">\\n    </select-editor>\\n\\n    <textarea-editor *ngSwitchCase=\\\"'textarea'\\\"\\n                     [cell]=\\\"cell\\\"\\n                     [inputClass]=\\\"inputClass\\\"\\n                     (onClick)=\\\"onClick($event)\\\"\\n                     (onEdited)=\\\"onEdited($event)\\\"\\n                     (onStopEditing)=\\\"onStopEditing()\\\">\\n    </textarea-editor>\\n\\n    <checkbox-editor *ngSwitchCase=\\\"'checkbox'\\\"\\n                     [cell]=\\\"cell\\\"\\n                     [inputClass]=\\\"inputClass\\\"\\n                     (onClick)=\\\"onClick($event)\\\">\\n    </checkbox-editor>\\n\\n    <completer-editor *ngSwitchCase=\\\"'completer'\\\"\\n                      [cell]=\\\"cell\\\">\\n    </completer-editor>\\n\\n    <input-editor *ngSwitchDefault\\n                  [cell]=\\\"cell\\\"\\n                  [inputClass]=\\\"inputClass\\\"\\n                  (onClick)=\\\"onClick($event)\\\"\\n                  (onEdited)=\\\"onEdited($event)\\\"\\n                  (onStopEditing)=\\\"onStopEditing()\\\">\\n    </input-editor>\\n</div>\", components: [{ type: SelectEditorComponent, selector: \"select-editor\" }, { type: TextareaEditorComponent, selector: \"textarea-editor\" }, { type: CheckboxEditorComponent, selector: \"checkbox-editor\" }, { type: CompleterEditorComponent, selector: \"completer-editor\" }, { type: InputEditorComponent, selector: \"input-editor\" }], directives: [{ type: i2.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i2.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: i2.NgSwitchDefault, selector: \"[ngSwitchDefault]\" }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: DefaultEditComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'table-cell-default-editor', template: \"<div [ngSwitch]=\\\"getEditorType()\\\">\\n    <select-editor *ngSwitchCase=\\\"'list'\\\"\\n                   [cell]=\\\"cell\\\"\\n                   [inputClass]=\\\"inputClass\\\"\\n                   (onClick)=\\\"onClick($event)\\\"\\n                   (onEdited)=\\\"onEdited($event)\\\"\\n                   (onStopEditing)=\\\"onStopEditing()\\\">\\n    </select-editor>\\n\\n    <textarea-editor *ngSwitchCase=\\\"'textarea'\\\"\\n                     [cell]=\\\"cell\\\"\\n                     [inputClass]=\\\"inputClass\\\"\\n                     (onClick)=\\\"onClick($event)\\\"\\n                     (onEdited)=\\\"onEdited($event)\\\"\\n                     (onStopEditing)=\\\"onStopEditing()\\\">\\n    </textarea-editor>\\n\\n    <checkbox-editor *ngSwitchCase=\\\"'checkbox'\\\"\\n                     [cell]=\\\"cell\\\"\\n                     [inputClass]=\\\"inputClass\\\"\\n                     (onClick)=\\\"onClick($event)\\\">\\n    </checkbox-editor>\\n\\n    <completer-editor *ngSwitchCase=\\\"'completer'\\\"\\n                      [cell]=\\\"cell\\\">\\n    </completer-editor>\\n\\n    <input-editor *ngSwitchDefault\\n                  [cell]=\\\"cell\\\"\\n                  [inputClass]=\\\"inputClass\\\"\\n                  (onClick)=\\\"onClick($event)\\\"\\n                  (onEdited)=\\\"onEdited($event)\\\"\\n                  (onStopEditing)=\\\"onStopEditing()\\\">\\n    </input-editor>\\n</div>\" }]\n        }], ctorParameters: function () { return []; } });\n\nclass EditCellComponent {\n    constructor() {\n        this.inputClass = '';\n        this.edited = new EventEmitter();\n    }\n    ngOnInit() {\n        this.cell.resetValue();\n    }\n    onEdited(event) {\n        this.edited.next(event);\n        return false;\n    }\n    getEditorType() {\n        const editor = this.cell.getColumn().editor;\n        if (!editor) {\n            return 'default';\n        }\n        return editor.type;\n    }\n}\nEditCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: EditCellComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nEditCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: EditCellComponent, selector: \"table-cell-edit-mode\", inputs: { cell: \"cell\", inputClass: \"inputClass\" }, outputs: { edited: \"edited\" }, ngImport: i0, template: `\n      <div [ngSwitch]=\"getEditorType()\">\n        <table-cell-custom-editor *ngSwitchCase=\"'custom'\"\n                                  [cell]=\"cell\"\n                                  [inputClass]=\"inputClass\"\n                                  (edited)=\"onEdited($event)\">\n        </table-cell-custom-editor>\n        <table-cell-default-editor *ngSwitchDefault\n                                  [cell]=\"cell\"\n                                  [inputClass]=\"inputClass\"\n                                  (edited)=\"onEdited($event)\">\n        </table-cell-default-editor>\n      </div>\n    `, isInline: true, components: [{ type: CustomEditComponent, selector: \"table-cell-custom-editor\" }, { type: DefaultEditComponent, selector: \"table-cell-default-editor\" }], directives: [{ type: i2.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i2.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: i2.NgSwitchDefault, selector: \"[ngSwitchDefault]\" }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: EditCellComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'table-cell-edit-mode',\n                    template: `\n      <div [ngSwitch]=\"getEditorType()\">\n        <table-cell-custom-editor *ngSwitchCase=\"'custom'\"\n                                  [cell]=\"cell\"\n                                  [inputClass]=\"inputClass\"\n                                  (edited)=\"onEdited($event)\">\n        </table-cell-custom-editor>\n        <table-cell-default-editor *ngSwitchDefault\n                                  [cell]=\"cell\"\n                                  [inputClass]=\"inputClass\"\n                                  (edited)=\"onEdited($event)\">\n        </table-cell-default-editor>\n      </div>\n    `,\n                }]\n        }], propDecorators: { cell: [{\n                type: Input\n            }], inputClass: [{\n                type: Input\n            }], edited: [{\n                type: Output\n            }] } });\n\nclass CellComponent {\n    constructor() {\n        this.inputClass = '';\n        this.mode = 'inline';\n        this.isInEditing = false;\n        this.edited = new EventEmitter();\n    }\n    onEdited(event) {\n        if (this.isNew) {\n            this.grid.create(this.grid.getNewRow(), this.createConfirm);\n        }\n        else {\n            this.grid.save(this.row, this.editConfirm);\n        }\n    }\n}\nCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: CellComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: CellComponent, selector: \"angular2-smart-table-cell\", inputs: { grid: \"grid\", row: \"row\", editConfirm: \"editConfirm\", createConfirm: \"createConfirm\", isNew: \"isNew\", cell: \"cell\", inputClass: \"inputClass\", mode: \"mode\", isInEditing: \"isInEditing\" }, outputs: { edited: \"edited\" }, ngImport: i0, template: `\n    <table-cell-view-mode *ngIf=\"!isInEditing\" [cell]=\"cell\"></table-cell-view-mode>\n    <table-cell-edit-mode *ngIf=\"isInEditing\" [cell]=\"cell\"\n                          [inputClass]=\"inputClass\"\n                          (edited)=\"onEdited($event)\">\n    </table-cell-edit-mode>\n  `, isInline: true, components: [{ type: ViewCellComponent, selector: \"table-cell-view-mode\", inputs: [\"cell\"] }, { type: EditCellComponent, selector: \"table-cell-edit-mode\", inputs: [\"cell\", \"inputClass\"], outputs: [\"edited\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: CellComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'angular2-smart-table-cell',\n                    template: `\n    <table-cell-view-mode *ngIf=\"!isInEditing\" [cell]=\"cell\"></table-cell-view-mode>\n    <table-cell-edit-mode *ngIf=\"isInEditing\" [cell]=\"cell\"\n                          [inputClass]=\"inputClass\"\n                          (edited)=\"onEdited($event)\">\n    </table-cell-edit-mode>\n  `,\n                }]\n        }], propDecorators: { grid: [{\n                type: Input\n            }], row: [{\n                type: Input\n            }], editConfirm: [{\n                type: Input\n            }], createConfirm: [{\n                type: Input\n            }], isNew: [{\n                type: Input\n            }], cell: [{\n                type: Input\n            }], inputClass: [{\n                type: Input\n            }], mode: [{\n                type: Input\n            }], isInEditing: [{\n                type: Input\n            }], edited: [{\n                type: Output\n            }] } });\n\nclass TheadFormRowComponent {\n    constructor() {\n        this.create = new EventEmitter();\n    }\n    onCreate(event) {\n        event.stopPropagation();\n        this.grid.create(this.grid.getNewRow(), this.createConfirm);\n    }\n    ngOnChanges() {\n        this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n        this.showActionColumnLeft = this.grid.showActionColumn('left');\n        this.showActionColumnRight = this.grid.showActionColumn('right');\n        this.addInputClass = this.grid.getSetting('add.inputClass');\n    }\n    getVisibleCells(cells) {\n        return (cells || []).filter((cell) => !cell.getColumn().hide);\n    }\n}\nTheadFormRowComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: TheadFormRowComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nTheadFormRowComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: TheadFormRowComponent, selector: \"[angular2-st-thead-form-row]\", inputs: { grid: \"grid\", row: \"row\", createConfirm: \"createConfirm\" }, outputs: { create: \"create\" }, usesOnChanges: true, ngImport: i0, template: `\n      <td *ngIf=\"\"></td>\n      <td  *ngIf=\"showActionColumnLeft\"  class=\"angular2-smart-actions\">\n        <angular2-st-actions [grid]=\"grid\" (create)=\"onCreate($event)\"></angular2-st-actions>\n      </td>\n      <td *ngFor=\"let cell of getVisibleCells(grid.getNewRow().getCells())\">\n        <angular2-smart-table-cell [cell]=\"cell\"\n                              [grid]=\"grid\"\n                              [isNew]=\"true\"\n                              [createConfirm]=\"createConfirm\"\n                              [inputClass]=\"addInputClass\"\n                              [isInEditing]=\"grid.getNewRow().isInEditing\"\n                              (edited)=\"onCreate($event)\">\n        </angular2-smart-table-cell>\n      </td>\n      <td  *ngIf=\"showActionColumnRight\"  class=\"angular2-smart-actions\">\n        <angular2-st-actions [grid]=\"grid\" (create)=\"onCreate($event)\"></angular2-st-actions>\n      </td>\n  `, isInline: true, components: [{ type: ActionsComponent, selector: \"angular2-st-actions\", inputs: [\"grid\"], outputs: [\"create\"] }, { type: CellComponent, selector: \"angular2-smart-table-cell\", inputs: [\"grid\", \"row\", \"editConfirm\", \"createConfirm\", \"isNew\", \"cell\", \"inputClass\", \"mode\", \"isInEditing\"], outputs: [\"edited\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: TheadFormRowComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[angular2-st-thead-form-row]',\n                    template: `\n      <td *ngIf=\"\"></td>\n      <td  *ngIf=\"showActionColumnLeft\"  class=\"angular2-smart-actions\">\n        <angular2-st-actions [grid]=\"grid\" (create)=\"onCreate($event)\"></angular2-st-actions>\n      </td>\n      <td *ngFor=\"let cell of getVisibleCells(grid.getNewRow().getCells())\">\n        <angular2-smart-table-cell [cell]=\"cell\"\n                              [grid]=\"grid\"\n                              [isNew]=\"true\"\n                              [createConfirm]=\"createConfirm\"\n                              [inputClass]=\"addInputClass\"\n                              [isInEditing]=\"grid.getNewRow().isInEditing\"\n                              (edited)=\"onCreate($event)\">\n        </angular2-smart-table-cell>\n      </td>\n      <td  *ngIf=\"showActionColumnRight\"  class=\"angular2-smart-actions\">\n        <angular2-st-actions [grid]=\"grid\" (create)=\"onCreate($event)\"></angular2-st-actions>\n      </td>\n  `,\n                }]\n        }], propDecorators: { grid: [{\n                type: Input\n            }], row: [{\n                type: Input\n            }], createConfirm: [{\n                type: Input\n            }], create: [{\n                type: Output\n            }] } });\n\nclass NgxSmartTableTheadComponent {\n    constructor(tableService) {\n        this.tableService = tableService;\n        this.sort = new EventEmitter();\n        this.hide = new EventEmitter();\n        this.selectAllRows = new EventEmitter();\n        this.create = new EventEmitter();\n        this.filter = new EventEmitter();\n    }\n    ngOnChanges() {\n        this.isHideHeader = this.grid.getSetting('hideHeader');\n        this.isHideSubHeader = this.grid.getSetting('hideSubHeader');\n    }\n    mouseMove(event) {\n        this.tableService.mouseMoveEvent$.next(event);\n    }\n}\nNgxSmartTableTheadComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: NgxSmartTableTheadComponent, deps: [{ token: TableService }], target: i0.ɵɵFactoryTarget.Component });\nNgxSmartTableTheadComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: NgxSmartTableTheadComponent, selector: \"[angular2-st-thead]\", inputs: { grid: \"grid\", source: \"source\", isAllSelected: \"isAllSelected\", createConfirm: \"createConfirm\" }, outputs: { sort: \"sort\", hide: \"hide\", selectAllRows: \"selectAllRows\", create: \"create\", filter: \"filter\" }, host: { listeners: { \"mousemove\": \"mouseMove($event)\" } }, usesOnChanges: true, ngImport: i0, template: \"<tr angular2-st-thead-titles-row *ngIf=\\\"!isHideHeader\\\"\\n                            class=\\\"angular2-smart-titles\\\"\\n                            [grid]=\\\"grid\\\"\\n                            [isAllSelected]=\\\"isAllSelected\\\"\\n                            [source]=\\\"source\\\"\\n                            (sort)=\\\"sort.emit($event)\\\"\\n                            (hide)=\\\"hide.emit($event)\\\"\\n                            (selectAllRows)=\\\"selectAllRows.emit($event)\\\">\\n</tr>\\n\\n<tr angular2-st-thead-filters-row *ngIf=\\\"!isHideSubHeader\\\"\\n                              class=\\\"angular2-smart-filters\\\"\\n                              [grid]=\\\"grid\\\"\\n                              [source]=\\\"source\\\"\\n                              (create)=\\\"create.emit($event)\\\"\\n                              (filter)=\\\"filter.emit($event)\\\">\\n</tr>\\n\\n<tr angular2-st-thead-form-row *ngIf=\\\"grid.createFormShown\\\"\\n                          [grid]=\\\"grid\\\"\\n                          [createConfirm]=\\\"createConfirm\\\">\\n</tr>\\n\", components: [{ type: TheadTitlesRowComponent, selector: \"[angular2-st-thead-titles-row]\", inputs: [\"grid\", \"isAllSelected\", \"source\"], outputs: [\"sort\", \"hide\", \"selectAllRows\"] }, { type: TheadFitlersRowComponent, selector: \"[angular2-st-thead-filters-row]\", inputs: [\"grid\", \"source\"], outputs: [\"create\", \"filter\"] }, { type: TheadFormRowComponent, selector: \"[angular2-st-thead-form-row]\", inputs: [\"grid\", \"row\", \"createConfirm\"], outputs: [\"create\"] }], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: NgxSmartTableTheadComponent, decorators: [{\n            type: Component,\n            args: [{ selector: '[angular2-st-thead]', template: \"<tr angular2-st-thead-titles-row *ngIf=\\\"!isHideHeader\\\"\\n                            class=\\\"angular2-smart-titles\\\"\\n                            [grid]=\\\"grid\\\"\\n                            [isAllSelected]=\\\"isAllSelected\\\"\\n                            [source]=\\\"source\\\"\\n                            (sort)=\\\"sort.emit($event)\\\"\\n                            (hide)=\\\"hide.emit($event)\\\"\\n                            (selectAllRows)=\\\"selectAllRows.emit($event)\\\">\\n</tr>\\n\\n<tr angular2-st-thead-filters-row *ngIf=\\\"!isHideSubHeader\\\"\\n                              class=\\\"angular2-smart-filters\\\"\\n                              [grid]=\\\"grid\\\"\\n                              [source]=\\\"source\\\"\\n                              (create)=\\\"create.emit($event)\\\"\\n                              (filter)=\\\"filter.emit($event)\\\">\\n</tr>\\n\\n<tr angular2-st-thead-form-row *ngIf=\\\"grid.createFormShown\\\"\\n                          [grid]=\\\"grid\\\"\\n                          [createConfirm]=\\\"createConfirm\\\">\\n</tr>\\n\" }]\n        }], ctorParameters: function () { return [{ type: TableService }]; }, propDecorators: { grid: [{\n                type: Input\n            }], source: [{\n                type: Input\n            }], isAllSelected: [{\n                type: Input\n            }], createConfirm: [{\n                type: Input\n            }], sort: [{\n                type: Output\n            }], hide: [{\n                type: Output\n            }], selectAllRows: [{\n                type: Output\n            }], create: [{\n                type: Output\n            }], filter: [{\n                type: Output\n            }], mouseMove: [{\n                type: HostListener,\n                args: ['mousemove', ['$event']]\n            }] } });\n\nclass TbodyCustomItemComponent {\n    constructor(resolver) {\n        this.resolver = resolver;\n    }\n    ngOnInit() {\n        if (this.action && !this.customComponent) {\n            this.createCustomComponent();\n            this.patchInstance();\n        }\n    }\n    createCustomComponent() {\n        const componentFactory = this.resolver.resolveComponentFactory(this.action.renderComponent);\n        this.customComponent = this.dynamicTarget.createComponent(componentFactory);\n    }\n    patchInstance() {\n        Object.assign(this.customComponent.instance, this.getPatch());\n    }\n    getPatch() {\n        return {\n            action: this.action,\n            rowData: this.row.getData(),\n        };\n    }\n}\nTbodyCustomItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: TbodyCustomItemComponent, deps: [{ token: i0.ComponentFactoryResolver }], target: i0.ɵɵFactoryTarget.Component });\nTbodyCustomItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: TbodyCustomItemComponent, selector: \"angular2-st-tbody-custom-item\", inputs: { action: \"action\", row: \"row\" }, viewQueries: [{ propertyName: \"dynamicTarget\", first: true, predicate: [\"dynamicTarget\"], descendants: true, read: ViewContainerRef, static: true }], ngImport: i0, template: `\n    <ng-template #dynamicTarget></ng-template>\n  `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: TbodyCustomItemComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'angular2-st-tbody-custom-item',\n                    template: `\n    <ng-template #dynamicTarget></ng-template>\n  `,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ComponentFactoryResolver }]; }, propDecorators: { action: [{\n                type: Input\n            }], row: [{\n                type: Input\n            }], dynamicTarget: [{\n                type: ViewChild,\n                args: ['dynamicTarget', { read: ViewContainerRef, static: true }]\n            }] } });\n\nclass TbodyCustomComponent {\n    constructor() {\n        this.custom = new EventEmitter();\n    }\n    onCustom(action, event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.custom.emit({\n            action: action.name,\n            data: this.row.getData(),\n            source: this.source,\n        });\n    }\n}\nTbodyCustomComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: TbodyCustomComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nTbodyCustomComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: TbodyCustomComponent, selector: \"angular2-st-tbody-custom\", inputs: { grid: \"grid\", row: \"row\", source: \"source\" }, outputs: { custom: \"custom\" }, ngImport: i0, template: `\n    <ng-container *ngFor=\"let action of grid.getSetting('actions.custom')\">\n      <a href=\"#\" class=\"angular2-smart-action angular2-smart-action-custom-custom\"\n         *ngIf=\"!action.renderComponent\"\n         [innerHTML]=\"action.title\"\n         (click)=\"onCustom(action, $event)\"></a>\n      <a href=\"#\" class=\"angular2-smart-action angular2-smart-action-custom-custom\"\n         *ngIf=\"action.renderComponent\"\n         (click)=\"onCustom(action, $event)\">\n        <angular2-st-tbody-custom-item class=\"angular2-smart-action angular2-smart-action-custom-custom\"\n                                  [action]=\"action\"\n                                  [row]=\"row\"></angular2-st-tbody-custom-item>\n      </a>\n\n    </ng-container>\n  `, isInline: true, components: [{ type: TbodyCustomItemComponent, selector: \"angular2-st-tbody-custom-item\", inputs: [\"action\", \"row\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: TbodyCustomComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'angular2-st-tbody-custom',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: `\n    <ng-container *ngFor=\"let action of grid.getSetting('actions.custom')\">\n      <a href=\"#\" class=\"angular2-smart-action angular2-smart-action-custom-custom\"\n         *ngIf=\"!action.renderComponent\"\n         [innerHTML]=\"action.title\"\n         (click)=\"onCustom(action, $event)\"></a>\n      <a href=\"#\" class=\"angular2-smart-action angular2-smart-action-custom-custom\"\n         *ngIf=\"action.renderComponent\"\n         (click)=\"onCustom(action, $event)\">\n        <angular2-st-tbody-custom-item class=\"angular2-smart-action angular2-smart-action-custom-custom\"\n                                  [action]=\"action\"\n                                  [row]=\"row\"></angular2-st-tbody-custom-item>\n      </a>\n\n    </ng-container>\n  `,\n                }]\n        }], propDecorators: { grid: [{\n                type: Input\n            }], row: [{\n                type: Input\n            }], source: [{\n                type: Input\n            }], custom: [{\n                type: Output\n            }] } });\n\nclass TbodyExpandRowComponent {\n    constructor() {\n        this.onExpandRow = new EventEmitter();\n    }\n    onExpand(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.onExpandRow.emit(this.row);\n    }\n    ngOnChanges() {\n        this.expandRowButtonContent = this.grid.getSetting('expand.expandRowButtonContent');\n    }\n}\nTbodyExpandRowComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: TbodyExpandRowComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nTbodyExpandRowComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: TbodyExpandRowComponent, selector: \"angular2-st-tbody-expand\", inputs: { grid: \"grid\", row: \"row\" }, outputs: { onExpandRow: \"onExpandRow\" }, usesOnChanges: true, ngImport: i0, template: `\n      <a href=\"#\" class=\"angular2-smart-action angular2-smart-action-expand-expand\"\n          [innerHTML]=\"expandRowButtonContent\" (click)=\"onExpand($event)\"></a>\n    `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: TbodyExpandRowComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'angular2-st-tbody-expand',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: `\n      <a href=\"#\" class=\"angular2-smart-action angular2-smart-action-expand-expand\"\n          [innerHTML]=\"expandRowButtonContent\" (click)=\"onExpand($event)\"></a>\n    `,\n                }]\n        }], ctorParameters: function () { return []; }, propDecorators: { grid: [{\n                type: Input\n            }], row: [{\n                type: Input\n            }], onExpandRow: [{\n                type: Output\n            }] } });\n\nclass TbodyEditDeleteComponent {\n    constructor() {\n        this.edit = new EventEmitter();\n        this.delete = new EventEmitter();\n        this.editRowSelect = new EventEmitter();\n    }\n    onEdit(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.editRowSelect.emit(this.row);\n        if (this.grid.getSetting('mode') === 'external') {\n            this.edit.emit({\n                data: this.row.getData(),\n                source: this.source,\n            });\n        }\n        else {\n            this.grid.edit(this.row);\n        }\n    }\n    onDelete(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        if (this.grid.getSetting('mode') === 'external') {\n            this.delete.emit({\n                data: this.row.getData(),\n                source: this.source,\n            });\n        }\n        else {\n            this.grid.delete(this.row, this.deleteConfirm);\n        }\n    }\n    ngOnChanges() {\n        this.isActionEdit = this.grid.getSetting('actions.edit');\n        this.isActionDelete = this.grid.getSetting('actions.delete');\n        this.editRowButtonContent = this.grid.getSetting('edit.editButtonContent');\n        this.deleteRowButtonContent = this.grid.getSetting('delete.deleteButtonContent');\n    }\n}\nTbodyEditDeleteComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: TbodyEditDeleteComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nTbodyEditDeleteComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: TbodyEditDeleteComponent, selector: \"angular2-st-tbody-edit-delete\", inputs: { grid: \"grid\", row: \"row\", source: \"source\", deleteConfirm: \"deleteConfirm\", editConfirm: \"editConfirm\" }, outputs: { edit: \"edit\", delete: \"delete\", editRowSelect: \"editRowSelect\" }, usesOnChanges: true, ngImport: i0, template: `\n    <a href=\"#\" *ngIf=\"isActionEdit\" class=\"angular2-smart-action angular2-smart-action-edit-edit\"\n        [innerHTML]=\"editRowButtonContent\" (click)=\"onEdit($event)\"></a>\n    <a href=\"#\" *ngIf=\"isActionDelete\" class=\"angular2-smart-action angular2-smart-action-delete-delete\"\n        [innerHTML]=\"deleteRowButtonContent\" (click)=\"onDelete($event)\"></a>\n  `, isInline: true, directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: TbodyEditDeleteComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'angular2-st-tbody-edit-delete',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: `\n    <a href=\"#\" *ngIf=\"isActionEdit\" class=\"angular2-smart-action angular2-smart-action-edit-edit\"\n        [innerHTML]=\"editRowButtonContent\" (click)=\"onEdit($event)\"></a>\n    <a href=\"#\" *ngIf=\"isActionDelete\" class=\"angular2-smart-action angular2-smart-action-delete-delete\"\n        [innerHTML]=\"deleteRowButtonContent\" (click)=\"onDelete($event)\"></a>\n  `,\n                }]\n        }], propDecorators: { grid: [{\n                type: Input\n            }], row: [{\n                type: Input\n            }], source: [{\n                type: Input\n            }], deleteConfirm: [{\n                type: Input\n            }], editConfirm: [{\n                type: Input\n            }], edit: [{\n                type: Output\n            }], delete: [{\n                type: Output\n            }], editRowSelect: [{\n                type: Output\n            }] } });\n\nclass TbodyCreateCancelComponent {\n    onSave(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.grid.save(this.row, this.editConfirm);\n    }\n    onCancelEdit(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.row.isInEditing = false;\n    }\n    ngOnChanges() {\n        this.saveButtonContent = this.grid.getSetting('edit.saveButtonContent');\n        this.cancelButtonContent = this.grid.getSetting('edit.cancelButtonContent');\n    }\n}\nTbodyCreateCancelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: TbodyCreateCancelComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nTbodyCreateCancelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: TbodyCreateCancelComponent, selector: \"angular2-st-tbody-create-cancel\", inputs: { grid: \"grid\", row: \"row\", editConfirm: \"editConfirm\" }, usesOnChanges: true, ngImport: i0, template: `\n    <a href=\"#\" class=\"angular2-smart-action angular2-smart-action-edit-save\"\n        [innerHTML]=\"saveButtonContent\" (click)=\"onSave($event)\"></a>\n    <a href=\"#\" class=\"angular2-smart-action angular2-smart-action-edit-cancel\"\n        [innerHTML]=\"cancelButtonContent\" (click)=\"onCancelEdit($event)\"></a>\n  `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: TbodyCreateCancelComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'angular2-st-tbody-create-cancel',\n                    template: `\n    <a href=\"#\" class=\"angular2-smart-action angular2-smart-action-edit-save\"\n        [innerHTML]=\"saveButtonContent\" (click)=\"onSave($event)\"></a>\n    <a href=\"#\" class=\"angular2-smart-action angular2-smart-action-edit-cancel\"\n        [innerHTML]=\"cancelButtonContent\" (click)=\"onCancelEdit($event)\"></a>\n  `,\n                }]\n        }], propDecorators: { grid: [{\n                type: Input\n            }], row: [{\n                type: Input\n            }], editConfirm: [{\n                type: Input\n            }] } });\n\nclass NgxSmartTableTbodyComponent {\n    constructor(resolver, vcRef) {\n        this.resolver = resolver;\n        this.vcRef = vcRef;\n        this.save = new EventEmitter();\n        this.cancel = new EventEmitter();\n        this.edit = new EventEmitter();\n        this.delete = new EventEmitter();\n        this.custom = new EventEmitter();\n        this.edited = new EventEmitter();\n        this.userSelectRow = new EventEmitter();\n        this.editRowSelect = new EventEmitter();\n        this.multipleSelectRow = new EventEmitter();\n        this.rowHover = new EventEmitter();\n        this.onExpandRow = new EventEmitter();\n        this.hasChildComponent = false;\n    }\n    ngAfterViewInit() {\n        let cmp = this.grid.settings.expandedRowComponent;\n        if (cmp && !this.customComponent) {\n            this.expandedRowChild.forEach(c => c.clear());\n            this.hasChildComponent = true;\n            this.createCustomComponent();\n        }\n    }\n    ngOnDestroy() {\n        if (this.customComponent)\n            this.customComponent.destroy();\n    }\n    clear() {\n        this.vcRef.clear();\n    }\n    createCustomComponent() {\n        let cmp = this.grid.settings.expandedRowComponent;\n        if (cmp) {\n            const componentFactory = this.resolver.resolveComponentFactory(cmp);\n            this.expandedRowChild.changes\n                .pipe(delay(0))\n                .subscribe(item => {\n                if (item.length) {\n                    this.customComponent = item.first.createComponent(componentFactory);\n                    Object.assign(this.customComponent.instance, this.grid.dataSet.expandRow, {\n                        rowData: this.grid.dataSet.getExpandedRow().getData(),\n                    });\n                }\n            });\n        }\n    }\n    get tableColumnsCount() {\n        const actionColumns = this.isActionAdd || this.isActionEdit || this.isActionDelete ? 1 : 0;\n        return this.grid.getColumns().length + actionColumns;\n    }\n    ngOnChanges() {\n        this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n        this.showActionColumnLeft = this.grid.showActionColumn('left');\n        this.mode = this.grid.getSetting('mode');\n        this.editInputClass = this.grid.getSetting('edit.inputClass');\n        this.showActionColumnRight = this.grid.showActionColumn('right');\n        this.isActionAdd = this.grid.getSetting('actions.add');\n        this.isActionEdit = this.grid.getSetting('actions.edit');\n        this.isActionDelete = this.grid.getSetting('actions.delete');\n        this.noDataMessage = this.grid.getSetting('noDataMessage');\n    }\n    getVisibleCells(cells) {\n        return (cells || []).filter((cell) => !cell.getColumn().hide);\n    }\n    onExpandRowClick(row) {\n        this.onExpandRow.emit(row);\n    }\n}\nNgxSmartTableTbodyComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: NgxSmartTableTbodyComponent, deps: [{ token: i0.ComponentFactoryResolver }, { token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Component });\nNgxSmartTableTbodyComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: NgxSmartTableTbodyComponent, selector: \"[angular2-st-tbody]\", inputs: { grid: \"grid\", source: \"source\", deleteConfirm: \"deleteConfirm\", editConfirm: \"editConfirm\", rowClassFunction: \"rowClassFunction\" }, outputs: { save: \"save\", cancel: \"cancel\", edit: \"edit\", delete: \"delete\", custom: \"custom\", edited: \"edited\", userSelectRow: \"userSelectRow\", editRowSelect: \"editRowSelect\", multipleSelectRow: \"multipleSelectRow\", rowHover: \"rowHover\", onExpandRow: \"onExpandRow\" }, viewQueries: [{ propertyName: \"expandedRowChild\", predicate: [\"expandedRowChild\"], descendants: true, read: ViewContainerRef }], usesOnChanges: true, ngImport: i0, template: \"<ng-container  *ngFor=\\\"let row of grid.getRows()\\\">\\n  <tr (click)=\\\"userSelectRow.emit(row)\\\" (mouseover)=\\\"rowHover.emit(row)\\\" class=\\\"angular2-smart-row\\\" [className]=\\\"rowClassFunction(row)\\\" [ngClass]=\\\"{selected: row.isSelected}\\\">\\n    <td *ngIf=\\\"isMultiSelectVisible\\\" class=\\\"angular2-smart-actions angular2-smart-action-multiple-select\\\" (click)=\\\"multipleSelectRow.emit(row)\\\">\\n      <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" [ngModel]=\\\"row.isSelected\\\">\\n    </td>\\n    <td *ngIf=\\\"!row.isInEditing && showActionColumnLeft\\\" class=\\\"angular2-smart-actions\\\">\\n\\n      <angular2-st-tbody-custom \\n        [grid]=\\\"grid\\\" \\n        (custom)=\\\"custom.emit($event)\\\" \\n        [row]=\\\"row\\\" \\n        [source]=\\\"source\\\">\\n      </angular2-st-tbody-custom>\\n      \\n      <angular2-st-tbody-expand \\n          *ngIf=\\\"hasChildComponent\\\"\\n          [grid]=\\\"grid\\\" \\n          [row]=\\\"row\\\" \\n          (onExpandRow)=\\\"onExpandRow.emit(row)\\\">\\n      </angular2-st-tbody-expand>\\n\\n      <angular2-st-tbody-edit-delete [grid]=\\\"grid\\\"\\n                                [deleteConfirm]=\\\"deleteConfirm\\\"\\n                                [editConfirm]=\\\"editConfirm\\\"\\n                                (edit)=\\\"edit.emit(row)\\\"\\n                                (delete)=\\\"delete.emit(row)\\\"\\n                                (editRowSelect)=\\\"editRowSelect.emit($event)\\\"\\n                                [row]=\\\"row\\\"\\n                                [source]=\\\"source\\\">\\n      </angular2-st-tbody-edit-delete>\\n    </td>\\n    <td *ngIf=\\\"row.isInEditing && showActionColumnLeft\\\"  class=\\\"angular2-smart-actions\\\">\\n      <angular2-st-tbody-create-cancel [grid]=\\\"grid\\\" [row]=\\\"row\\\" [editConfirm]=\\\"editConfirm\\\"></angular2-st-tbody-create-cancel>\\n    </td>\\n    <td *ngFor=\\\"let cell of getVisibleCells(row.cells)\\\">\\n      <angular2-smart-table-cell [cell]=\\\"cell\\\"\\n                            [grid]=\\\"grid\\\"\\n                            [row]=\\\"row\\\"\\n                            [isNew]=\\\"false\\\"\\n                            [mode]=\\\"mode\\\"\\n                            [editConfirm]=\\\"editConfirm\\\"\\n                            [inputClass]=\\\"editInputClass\\\"\\n                            [isInEditing]=\\\"row.isInEditing\\\">\\n      </angular2-smart-table-cell>\\n    </td>\\n\\n    <td *ngIf=\\\"row.isInEditing && showActionColumnRight\\\"  class=\\\"angular2-smart-actions\\\">\\n      <angular2-st-tbody-create-cancel [grid]=\\\"grid\\\" [row]=\\\"row\\\" [editConfirm]=\\\"editConfirm\\\"></angular2-st-tbody-create-cancel>\\n    </td>\\n\\n    <td *ngIf=\\\"!row.isInEditing && showActionColumnRight\\\" class=\\\"angular2-smart-actions\\\">\\n      <angular2-st-tbody-custom [grid]=\\\"grid\\\" (custom)=\\\"custom.emit($event)\\\" [row]=\\\"row\\\" [source]=\\\"source\\\"></angular2-st-tbody-custom>\\n\\n      <angular2-st-tbody-expand \\n          *ngIf=\\\"hasChildComponent\\\"\\n          [grid]=\\\"grid\\\" \\n          [row]=\\\"row\\\" \\n          (onExpandRow)=\\\"onExpandRow.emit(row)\\\">\\n      </angular2-st-tbody-expand>\\n      \\n      <angular2-st-tbody-edit-delete [grid]=\\\"grid\\\"\\n                                [deleteConfirm]=\\\"deleteConfirm\\\"\\n                                [editConfirm]=\\\"editConfirm\\\"\\n                                [row]=\\\"row\\\"\\n                                [source]=\\\"source\\\"\\n                                (edit)=\\\"edit.emit(row)\\\"\\n                                (delete)=\\\"delete.emit(row)\\\"\\n                                (editRowSelect)=\\\"editRowSelect.emit($event)\\\">\\n      </angular2-st-tbody-edit-delete>\\n    </td>\\n  </tr>\\n  <tr class=\\\"angular2-smart-row angular2-smart-row-detail\\\" *ngIf=\\\"row.isExpanded\\\">\\n    <td [attr.colspan]=\\\"tableColumnsCount\\\" class=\\\"angular2-smart-column-expandedDetail\\\">\\n      <ng-template #expandedRowChild ></ng-template>\\n    </td>\\n  </tr>\\n</ng-container>\\n<tr *ngIf=\\\"grid.getRows().length == 0\\\">\\n  <td [attr.colspan]=\\\"tableColumnsCount\\\">\\n    {{ noDataMessage }}\\n  </td>\\n</tr>\\n\", styles: [\":host .angular2-smart-row.selected{background:rgba(0,0,0,.05)}:host .angular2-smart-row .angular2-smart-actions.angular2-smart-action-multiple-select{text-align:center}:host ::ng-deep angular2-st-tbody-edit-delete a:first-child,:host ::ng-deep angular2-st-tbody-create-cancel a:first-child,:host ::ng-deep angular2-smart-action-expand-expand a:first-child{margin-right:.25rem}\\n\"], components: [{ type: TbodyCustomComponent, selector: \"angular2-st-tbody-custom\", inputs: [\"grid\", \"row\", \"source\"], outputs: [\"custom\"] }, { type: TbodyExpandRowComponent, selector: \"angular2-st-tbody-expand\", inputs: [\"grid\", \"row\"], outputs: [\"onExpandRow\"] }, { type: TbodyEditDeleteComponent, selector: \"angular2-st-tbody-edit-delete\", inputs: [\"grid\", \"row\", \"source\", \"deleteConfirm\", \"editConfirm\"], outputs: [\"edit\", \"delete\", \"editRowSelect\"] }, { type: TbodyCreateCancelComponent, selector: \"angular2-st-tbody-create-cancel\", inputs: [\"grid\", \"row\", \"editConfirm\"] }, { type: CellComponent, selector: \"angular2-smart-table-cell\", inputs: [\"grid\", \"row\", \"editConfirm\", \"createConfirm\", \"isNew\", \"cell\", \"inputClass\", \"mode\", \"isInEditing\"], outputs: [\"edited\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { type: i1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i1.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: NgxSmartTableTbodyComponent, decorators: [{\n            type: Component,\n            args: [{ selector: '[angular2-st-tbody]', template: \"<ng-container  *ngFor=\\\"let row of grid.getRows()\\\">\\n  <tr (click)=\\\"userSelectRow.emit(row)\\\" (mouseover)=\\\"rowHover.emit(row)\\\" class=\\\"angular2-smart-row\\\" [className]=\\\"rowClassFunction(row)\\\" [ngClass]=\\\"{selected: row.isSelected}\\\">\\n    <td *ngIf=\\\"isMultiSelectVisible\\\" class=\\\"angular2-smart-actions angular2-smart-action-multiple-select\\\" (click)=\\\"multipleSelectRow.emit(row)\\\">\\n      <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" [ngModel]=\\\"row.isSelected\\\">\\n    </td>\\n    <td *ngIf=\\\"!row.isInEditing && showActionColumnLeft\\\" class=\\\"angular2-smart-actions\\\">\\n\\n      <angular2-st-tbody-custom \\n        [grid]=\\\"grid\\\" \\n        (custom)=\\\"custom.emit($event)\\\" \\n        [row]=\\\"row\\\" \\n        [source]=\\\"source\\\">\\n      </angular2-st-tbody-custom>\\n      \\n      <angular2-st-tbody-expand \\n          *ngIf=\\\"hasChildComponent\\\"\\n          [grid]=\\\"grid\\\" \\n          [row]=\\\"row\\\" \\n          (onExpandRow)=\\\"onExpandRow.emit(row)\\\">\\n      </angular2-st-tbody-expand>\\n\\n      <angular2-st-tbody-edit-delete [grid]=\\\"grid\\\"\\n                                [deleteConfirm]=\\\"deleteConfirm\\\"\\n                                [editConfirm]=\\\"editConfirm\\\"\\n                                (edit)=\\\"edit.emit(row)\\\"\\n                                (delete)=\\\"delete.emit(row)\\\"\\n                                (editRowSelect)=\\\"editRowSelect.emit($event)\\\"\\n                                [row]=\\\"row\\\"\\n                                [source]=\\\"source\\\">\\n      </angular2-st-tbody-edit-delete>\\n    </td>\\n    <td *ngIf=\\\"row.isInEditing && showActionColumnLeft\\\"  class=\\\"angular2-smart-actions\\\">\\n      <angular2-st-tbody-create-cancel [grid]=\\\"grid\\\" [row]=\\\"row\\\" [editConfirm]=\\\"editConfirm\\\"></angular2-st-tbody-create-cancel>\\n    </td>\\n    <td *ngFor=\\\"let cell of getVisibleCells(row.cells)\\\">\\n      <angular2-smart-table-cell [cell]=\\\"cell\\\"\\n                            [grid]=\\\"grid\\\"\\n                            [row]=\\\"row\\\"\\n                            [isNew]=\\\"false\\\"\\n                            [mode]=\\\"mode\\\"\\n                            [editConfirm]=\\\"editConfirm\\\"\\n                            [inputClass]=\\\"editInputClass\\\"\\n                            [isInEditing]=\\\"row.isInEditing\\\">\\n      </angular2-smart-table-cell>\\n    </td>\\n\\n    <td *ngIf=\\\"row.isInEditing && showActionColumnRight\\\"  class=\\\"angular2-smart-actions\\\">\\n      <angular2-st-tbody-create-cancel [grid]=\\\"grid\\\" [row]=\\\"row\\\" [editConfirm]=\\\"editConfirm\\\"></angular2-st-tbody-create-cancel>\\n    </td>\\n\\n    <td *ngIf=\\\"!row.isInEditing && showActionColumnRight\\\" class=\\\"angular2-smart-actions\\\">\\n      <angular2-st-tbody-custom [grid]=\\\"grid\\\" (custom)=\\\"custom.emit($event)\\\" [row]=\\\"row\\\" [source]=\\\"source\\\"></angular2-st-tbody-custom>\\n\\n      <angular2-st-tbody-expand \\n          *ngIf=\\\"hasChildComponent\\\"\\n          [grid]=\\\"grid\\\" \\n          [row]=\\\"row\\\" \\n          (onExpandRow)=\\\"onExpandRow.emit(row)\\\">\\n      </angular2-st-tbody-expand>\\n      \\n      <angular2-st-tbody-edit-delete [grid]=\\\"grid\\\"\\n                                [deleteConfirm]=\\\"deleteConfirm\\\"\\n                                [editConfirm]=\\\"editConfirm\\\"\\n                                [row]=\\\"row\\\"\\n                                [source]=\\\"source\\\"\\n                                (edit)=\\\"edit.emit(row)\\\"\\n                                (delete)=\\\"delete.emit(row)\\\"\\n                                (editRowSelect)=\\\"editRowSelect.emit($event)\\\">\\n      </angular2-st-tbody-edit-delete>\\n    </td>\\n  </tr>\\n  <tr class=\\\"angular2-smart-row angular2-smart-row-detail\\\" *ngIf=\\\"row.isExpanded\\\">\\n    <td [attr.colspan]=\\\"tableColumnsCount\\\" class=\\\"angular2-smart-column-expandedDetail\\\">\\n      <ng-template #expandedRowChild ></ng-template>\\n    </td>\\n  </tr>\\n</ng-container>\\n<tr *ngIf=\\\"grid.getRows().length == 0\\\">\\n  <td [attr.colspan]=\\\"tableColumnsCount\\\">\\n    {{ noDataMessage }}\\n  </td>\\n</tr>\\n\", styles: [\":host .angular2-smart-row.selected{background:rgba(0,0,0,.05)}:host .angular2-smart-row .angular2-smart-actions.angular2-smart-action-multiple-select{text-align:center}:host ::ng-deep angular2-st-tbody-edit-delete a:first-child,:host ::ng-deep angular2-st-tbody-create-cancel a:first-child,:host ::ng-deep angular2-smart-action-expand-expand a:first-child{margin-right:.25rem}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ComponentFactoryResolver }, { type: i0.ViewContainerRef }]; }, propDecorators: { grid: [{\n                type: Input\n            }], source: [{\n                type: Input\n            }], deleteConfirm: [{\n                type: Input\n            }], editConfirm: [{\n                type: Input\n            }], rowClassFunction: [{\n                type: Input\n            }], save: [{\n                type: Output\n            }], cancel: [{\n                type: Output\n            }], edit: [{\n                type: Output\n            }], delete: [{\n                type: Output\n            }], custom: [{\n                type: Output\n            }], edited: [{\n                type: Output\n            }], userSelectRow: [{\n                type: Output\n            }], editRowSelect: [{\n                type: Output\n            }], multipleSelectRow: [{\n                type: Output\n            }], rowHover: [{\n                type: Output\n            }], onExpandRow: [{\n                type: Output\n            }], expandedRowChild: [{\n                type: ViewChildren,\n                args: ['expandedRowChild', { read: ViewContainerRef }]\n            }] } });\n\nclass PagerComponent {\n    constructor() {\n        this.perPageSelect = [];\n        this.changePage = new EventEmitter();\n        this.count = 0;\n    }\n    ngOnChanges(changes) {\n        if (changes.source) {\n            if (!changes.source.firstChange) {\n                this.dataChangedSub.unsubscribe();\n            }\n            this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\n                this.page = this.source.getPaging().page;\n                this.perPage = this.source.getPaging().perPage;\n                this.currentPerPage = this.perPage;\n                this.count = this.source.count();\n                if (this.isPageOutOfBounce()) {\n                    this.source.setPage(--this.page);\n                }\n                this.processPageChange(dataChanges);\n                this.initPages();\n            });\n        }\n    }\n    /**\n     * We change the page here depending on the action performed against data source\n     * if a new element was added to the end of the table - then change the page to the last\n     * if a new element was added to the beginning of the table - then to the first page\n     * @param changes\n     */\n    processPageChange(changes) {\n        if (changes['action'] === 'prepend') {\n            this.source.setPage(1);\n        }\n        if (changes['action'] === 'append') {\n            this.source.setPage(this.getLast());\n        }\n    }\n    shouldShow() {\n        return this.source.count() > this.perPage;\n    }\n    paginate(page) {\n        this.source.setPage(page);\n        this.page = page;\n        this.changePage.emit({ page });\n        return false;\n    }\n    next() {\n        return this.paginate(this.getPage() + 1);\n    }\n    prev() {\n        return this.paginate(this.getPage() - 1);\n    }\n    getPage() {\n        return this.page;\n    }\n    getPages() {\n        return this.pages;\n    }\n    getLast() {\n        return Math.ceil(this.count / this.perPage);\n    }\n    isPageOutOfBounce() {\n        return (this.page * this.perPage) >= (this.count + this.perPage) && this.page > 1;\n    }\n    initPages() {\n        const pagesCount = this.getLast();\n        let showPagesCount = 4;\n        showPagesCount = pagesCount < showPagesCount ? pagesCount : showPagesCount;\n        this.pages = [];\n        if (this.shouldShow()) {\n            let middleOne = Math.ceil(showPagesCount / 2);\n            middleOne = this.page >= middleOne ? this.page : middleOne;\n            let lastOne = middleOne + Math.floor(showPagesCount / 2);\n            lastOne = lastOne >= pagesCount ? pagesCount : lastOne;\n            const firstOne = lastOne - showPagesCount + 1;\n            for (let i = firstOne; i <= lastOne; i++) {\n                this.pages.push(i);\n            }\n        }\n    }\n    onChangePerPage(event) {\n        if (this.currentPerPage) {\n            if (typeof this.currentPerPage === 'string' && this.currentPerPage.toLowerCase() === 'all') {\n                this.source.getPaging().perPage = null;\n            }\n            else {\n                this.source.getPaging().perPage = this.currentPerPage * 1;\n                this.source.refresh();\n            }\n            this.initPages();\n        }\n    }\n}\nPagerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: PagerComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nPagerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: PagerComponent, selector: \"angular2-smart-table-pager\", inputs: { source: \"source\", perPageSelect: \"perPageSelect\" }, outputs: { changePage: \"changePage\" }, usesOnChanges: true, ngImport: i0, template: `\n    <nav *ngIf=\"shouldShow()\" class=\"angular2-smart-pagination-nav\">\n      <ul class=\"angular2-smart-pagination pagination\">\n        <li class=\"angular2-smart-page-item page-item\" [ngClass]=\"{disabled: getPage() == 1}\">\n          <a class=\"angular2-smart-page-link page-link\" href=\"#\"\n          (click)=\"getPage() == 1 ? false : paginate(1)\" aria-label=\"First\">\n            <span aria-hidden=\"true\">&laquo;</span>\n            <span class=\"sr-only\">First</span>\n          </a>\n        </li>\n        <li class=\"angular2-smart-page-item page-item\" [ngClass]=\"{disabled: getPage() == 1}\">\n          <a class=\"angular2-smart-page-link page-link page-link-prev\" href=\"#\"\n             (click)=\"getPage() == 1 ? false : prev()\" aria-label=\"Prev\">\n            <span aria-hidden=\"true\">&lt;</span>\n            <span class=\"sr-only\">Prev</span>\n          </a>\n        </li>\n        <li class=\"angular2-smart-page-item page-item\"\n        [ngClass]=\"{active: getPage() == page}\" *ngFor=\"let page of getPages()\">\n          <span class=\"angular2-smart-page-link page-link\"\n          *ngIf=\"getPage() == page\">{{ page }} <span class=\"sr-only\">(current)</span></span>\n          <a class=\"angular2-smart-page-link page-link\" href=\"#\"\n          (click)=\"paginate(page)\" *ngIf=\"getPage() != page\">{{ page }}</a>\n        </li>\n\n        <li class=\"angular2-smart-page-item page-item\"\n            [ngClass]=\"{disabled: getPage() == getLast()}\">\n          <a class=\"angular2-smart-page-link page-link page-link-next\" href=\"#\"\n             (click)=\"getPage() == getLast() ? false : next()\" aria-label=\"Next\">\n            <span aria-hidden=\"true\">&gt;</span>\n            <span class=\"sr-only\">Next</span>\n          </a>\n        </li>\n        \n        <li class=\"angular2-smart-page-item page-item\"\n        [ngClass]=\"{disabled: getPage() == getLast()}\">\n          <a class=\"angular2-smart-page-link page-link\" href=\"#\"\n          (click)=\"getPage() == getLast() ? false : paginate(getLast())\" aria-label=\"Last\">\n            <span aria-hidden=\"true\">&raquo;</span>\n            <span class=\"sr-only\">Last</span>\n          </a>\n        </li>\n      </ul>\n    </nav>\n    \n    <nav *ngIf=\"perPageSelect && perPageSelect.length > 0\" class=\"angular2-smart-pagination-per-page\">\n      <label for=\"per-page\">\n        Per Page:\n      </label>\n      <select (change)=\"onChangePerPage($event)\" [(ngModel)]=\"currentPerPage\" id=\"per-page\">\n        <option *ngFor=\"let item of perPageSelect\" [value]=\"item\">{{ item }}</option>\n      </select>\n    </nav>\n  `, isInline: true, styles: [\".angular2-smart-pagination{display:inline-flex;font-size:.875em;padding:0}.angular2-smart-pagination .sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}.angular2-smart-pagination .angular2-smart-page-item{display:inline}.angular2-smart-pagination .page-link-next,.angular2-smart-pagination .page-link-prev{font-size:10px}:host{display:flex;justify-content:space-between}:host select{margin:1rem 0 1rem 1rem}:host label{margin:1rem 0 1rem 1rem;line-height:2.5rem}\\n\"], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i1.SelectControlValueAccessor, selector: \"select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]\", inputs: [\"compareWith\"] }, { type: i1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i1.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: i1.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { type: i1.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: PagerComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'angular2-smart-table-pager', template: `\n    <nav *ngIf=\"shouldShow()\" class=\"angular2-smart-pagination-nav\">\n      <ul class=\"angular2-smart-pagination pagination\">\n        <li class=\"angular2-smart-page-item page-item\" [ngClass]=\"{disabled: getPage() == 1}\">\n          <a class=\"angular2-smart-page-link page-link\" href=\"#\"\n          (click)=\"getPage() == 1 ? false : paginate(1)\" aria-label=\"First\">\n            <span aria-hidden=\"true\">&laquo;</span>\n            <span class=\"sr-only\">First</span>\n          </a>\n        </li>\n        <li class=\"angular2-smart-page-item page-item\" [ngClass]=\"{disabled: getPage() == 1}\">\n          <a class=\"angular2-smart-page-link page-link page-link-prev\" href=\"#\"\n             (click)=\"getPage() == 1 ? false : prev()\" aria-label=\"Prev\">\n            <span aria-hidden=\"true\">&lt;</span>\n            <span class=\"sr-only\">Prev</span>\n          </a>\n        </li>\n        <li class=\"angular2-smart-page-item page-item\"\n        [ngClass]=\"{active: getPage() == page}\" *ngFor=\"let page of getPages()\">\n          <span class=\"angular2-smart-page-link page-link\"\n          *ngIf=\"getPage() == page\">{{ page }} <span class=\"sr-only\">(current)</span></span>\n          <a class=\"angular2-smart-page-link page-link\" href=\"#\"\n          (click)=\"paginate(page)\" *ngIf=\"getPage() != page\">{{ page }}</a>\n        </li>\n\n        <li class=\"angular2-smart-page-item page-item\"\n            [ngClass]=\"{disabled: getPage() == getLast()}\">\n          <a class=\"angular2-smart-page-link page-link page-link-next\" href=\"#\"\n             (click)=\"getPage() == getLast() ? false : next()\" aria-label=\"Next\">\n            <span aria-hidden=\"true\">&gt;</span>\n            <span class=\"sr-only\">Next</span>\n          </a>\n        </li>\n        \n        <li class=\"angular2-smart-page-item page-item\"\n        [ngClass]=\"{disabled: getPage() == getLast()}\">\n          <a class=\"angular2-smart-page-link page-link\" href=\"#\"\n          (click)=\"getPage() == getLast() ? false : paginate(getLast())\" aria-label=\"Last\">\n            <span aria-hidden=\"true\">&raquo;</span>\n            <span class=\"sr-only\">Last</span>\n          </a>\n        </li>\n      </ul>\n    </nav>\n    \n    <nav *ngIf=\"perPageSelect && perPageSelect.length > 0\" class=\"angular2-smart-pagination-per-page\">\n      <label for=\"per-page\">\n        Per Page:\n      </label>\n      <select (change)=\"onChangePerPage($event)\" [(ngModel)]=\"currentPerPage\" id=\"per-page\">\n        <option *ngFor=\"let item of perPageSelect\" [value]=\"item\">{{ item }}</option>\n      </select>\n    </nav>\n  `, styles: [\".angular2-smart-pagination{display:inline-flex;font-size:.875em;padding:0}.angular2-smart-pagination .sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}.angular2-smart-pagination .angular2-smart-page-item{display:inline}.angular2-smart-pagination .page-link-next,.angular2-smart-pagination .page-link-prev{font-size:10px}:host{display:flex;justify-content:space-between}:host select{margin:1rem 0 1rem 1rem}:host label{margin:1rem 0 1rem 1rem;line-height:2.5rem}\\n\"] }]\n        }], propDecorators: { source: [{\n                type: Input\n            }], perPageSelect: [{\n                type: Input\n            }], changePage: [{\n                type: Output\n            }] } });\n\nclass Angular2SmartTableComponent {\n    constructor() {\n        this.settings = {};\n        this.rowSelect = new EventEmitter();\n        this.rowDeselect = new EventEmitter();\n        this.userRowSelect = new EventEmitter();\n        this.delete = new EventEmitter();\n        this.edit = new EventEmitter();\n        this.create = new EventEmitter();\n        this.custom = new EventEmitter();\n        this.deleteConfirm = new EventEmitter();\n        this.editConfirm = new EventEmitter();\n        this.createConfirm = new EventEmitter();\n        this.rowHover = new EventEmitter();\n        this.afterGridInit = new EventEmitter();\n        this.defaultSettings = {\n            mode: 'inline',\n            selectMode: SelectModeOptions.Single,\n            /**\n             * Points to an element in all data\n             *\n             * when < 0 all lines must be deselected\n             */\n            selectedRowIndex: 0,\n            switchPageToSelectedRowPage: false,\n            hideHeader: false,\n            hideSubHeader: false,\n            resizable: false,\n            hideable: false,\n            actions: {\n                columnTitle: 'Actions',\n                add: true,\n                edit: true,\n                delete: true,\n                custom: [],\n                position: 'left', // left|right\n            },\n            filter: {\n                inputClass: '',\n            },\n            edit: {\n                inputClass: '',\n                editButtonContent: 'Edit',\n                saveButtonContent: 'Update',\n                cancelButtonContent: 'Cancel',\n                confirmSave: false,\n            },\n            add: {\n                inputClass: '',\n                addButtonContent: 'Add New',\n                createButtonContent: 'Create',\n                cancelButtonContent: 'Cancel',\n                confirmCreate: false,\n            },\n            delete: {\n                deleteButtonContent: 'Delete',\n                confirmDelete: false,\n            },\n            expand: {\n                expandRowButtonContent: 'Expand'\n            },\n            attr: {\n                id: '',\n                class: '',\n            },\n            noDataMessage: 'No data found',\n            columns: {},\n            pager: {\n                display: true,\n                page: 1,\n                perPage: 10,\n            },\n            rowClassFunction: () => '',\n        };\n        this.isAllSelected = false;\n        this.destroyed$ = new Subject();\n    }\n    ngOnChanges(changes) {\n        if (this.grid) {\n            if (changes['settings']) {\n                this.grid.setSettings(this.prepareSettings());\n            }\n            if (changes['source']) {\n                this.source = this.prepareSource();\n                this.grid.setSource(this.source);\n            }\n        }\n        else {\n            this.initGrid();\n        }\n        this.tableId = this.grid.getSetting('attr.id');\n        this.tableClass = this.grid.getSetting('attr.class');\n        this.isHideHeader = this.grid.getSetting('hideHeader');\n        this.isHideSubHeader = this.grid.getSetting('hideSubHeader');\n        this.isPagerDisplay = this.grid.getSetting('pager.display');\n        this.isPagerDisplay = this.grid.getSetting('pager.display');\n        this.perPageSelect = this.grid.getSetting('pager.perPageSelect');\n        this.rowClassFunction = this.grid.getSetting('rowClassFunction');\n    }\n    ngOnDestroy() {\n        this.destroyed$.next();\n    }\n    selectRow(index, switchPageToSelectedRowPage = this.grid.getSetting('switchPageToSelectedRowPage')) {\n        if (!this.grid) {\n            return;\n        }\n        this.grid.settings.selectedRowIndex = index;\n        if (this.isIndexOutOfRange(index)) {\n            // we need to deselect all rows if we got an incorrect index\n            this.deselectAllRows();\n            return;\n        }\n        if (switchPageToSelectedRowPage) {\n            const source = this.source;\n            const paging = source.getPaging();\n            const page = getPageForRowIndex(index, paging.perPage);\n            index = index % paging.perPage;\n            this.grid.settings.selectedRowIndex = index;\n            if (page !== paging.page) {\n                source.setPage(page);\n                return;\n            }\n        }\n        const row = this.grid.getRows()[index];\n        if (row) {\n            this.onSelectRow(row);\n        }\n        else {\n            // we need to deselect all rows if we got an incorrect index\n            this.deselectAllRows();\n        }\n    }\n    deselectAllRows() {\n        this.grid.dataSet.deselectAll();\n        this.emitDeselectRow(null);\n    }\n    editRowSelect(row) {\n        if (this.grid.getSetting('selectMode') === 'multi') {\n            this.onMultipleSelectRow(row);\n        }\n        else {\n            this.onSelectRow(row);\n        }\n    }\n    onUserSelectRow(row) {\n        if (this.grid.getSetting('selectMode') !== 'multi') {\n            this.grid.selectRow(row);\n            this.emitUserSelectRow(row);\n            this.emitSelectRow(row);\n        }\n    }\n    onRowHover(row) {\n        this.rowHover.emit(row);\n    }\n    multipleSelectRow(row) {\n        this.grid.multipleSelectRow(row);\n        this.emitUserSelectRow(row);\n        this.emitSelectRow(row);\n    }\n    onSelectAllRows($event) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.isAllSelected = !this.isAllSelected;\n            yield this.grid.selectAllRows(this.isAllSelected);\n            this.emitUserSelectRow(null);\n            this.emitSelectRow(null);\n        });\n    }\n    onSelectRow(row) {\n        this.grid.selectRow(row);\n        this.emitSelectRow(row);\n    }\n    onExpandRow(row) {\n        this.grid.expandRow(row);\n    }\n    onMultipleSelectRow(row) {\n        this.emitSelectRow(row);\n    }\n    initGrid() {\n        this.source = this.prepareSource();\n        this.grid = new Grid(this.source, this.prepareSettings());\n        this.subscribeToOnSelectRow();\n        this.subscribeToOnDeselectRow();\n        /** Delay a bit the grid init event trigger to prevent empty rows */\n        setTimeout(() => {\n            this.afterGridInit.emit(this.grid.dataSet);\n        }, 10);\n    }\n    prepareSource() {\n        if (this.source instanceof DataSource) {\n            return this.source;\n        }\n        else if (this.source instanceof Array) {\n            return new LocalDataSource(this.source);\n        }\n        return new LocalDataSource();\n    }\n    prepareSettings() {\n        return deepExtend({}, this.defaultSettings, this.settings);\n    }\n    changePage($event) {\n        this.resetAllSelector();\n    }\n    sort($event) {\n        this.resetAllSelector();\n    }\n    filter($event) {\n        this.resetAllSelector();\n    }\n    getNotVisibleColumns() {\n        var _a, _b;\n        return ((_b = (_a = this.grid) === null || _a === void 0 ? void 0 : _a.getColumns()) !== null && _b !== void 0 ? _b : []).filter((column) => column.hide);\n    }\n    toggleColumnVisibility(columnId) {\n        this.settings.columns[columnId].hide = false;\n        //this.grid.setSettings(this.settings);\n        this.grid.setSettings(this.prepareSettings());\n    }\n    onHideHeader(columnId) {\n        this.settings.columns[columnId].hide = true;\n        this.grid.setSettings(this.prepareSettings());\n    }\n    resetAllSelector() {\n        // this.isAllSelected = false;\n    }\n    emitUserSelectRow(row) {\n        const selectedRows = this.grid.getSelectedRows();\n        const selectedItems = this.grid.getSelectedItems();\n        this.userRowSelect.emit({\n            data: row ? row.getData() : null,\n            isSelected: row ? row.getIsSelected() : null,\n            source: this.source,\n            selected: selectedRows && selectedRows.length ? selectedRows.map((r) => r.getData()) : [],\n            selectedItems,\n        });\n    }\n    emitSelectRow(row) {\n        const data = {\n            data: row ? row.getData() : null,\n            isSelected: row ? row.getIsSelected() : null,\n            isExpanded: row ? row.getIsExpanded() : null,\n            source: this.source,\n        };\n        this.rowSelect.emit(data);\n        if (!(row === null || row === void 0 ? void 0 : row.isSelected)) {\n            this.rowDeselect.emit(data);\n        }\n        if (!(row === null || row === void 0 ? void 0 : row.isExpanded)) {\n            this.rowDeselect.emit(data);\n        }\n    }\n    emitDeselectRow(row) {\n        if (row)\n            this.rowDeselect.emit({\n                data: row ? row.getData() : null,\n                isSelected: row ? row.getIsSelected() : null,\n                source: this.source,\n            });\n    }\n    isIndexOutOfRange(index) {\n        var _a;\n        const dataAmount = (_a = this.source) === null || _a === void 0 ? void 0 : _a.count();\n        return index < 0 || (typeof dataAmount === 'number' && index >= dataAmount);\n    }\n    subscribeToOnSelectRow() {\n        if (this.onSelectRowSubscription) {\n            this.onSelectRowSubscription.unsubscribe();\n        }\n        this.onSelectRowSubscription = this.grid.onSelectRow()\n            .pipe(takeUntil(this.destroyed$))\n            .subscribe((row) => {\n            this.emitSelectRow(row);\n        });\n    }\n    subscribeToOnDeselectRow() {\n        if (this.onDeselectRowSubscription) {\n            this.onDeselectRowSubscription.unsubscribe();\n        }\n        this.onDeselectRowSubscription = this.grid.onDeselectRow()\n            .pipe(takeUntil(this.destroyed$))\n            .subscribe((row) => {\n            this.emitDeselectRow(row);\n        });\n    }\n}\nAngular2SmartTableComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: Angular2SmartTableComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nAngular2SmartTableComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.6\", type: Angular2SmartTableComponent, selector: \"angular2-smart-table\", inputs: { source: \"source\", settings: \"settings\" }, outputs: { rowSelect: \"rowSelect\", rowDeselect: \"rowDeselect\", userRowSelect: \"userRowSelect\", delete: \"delete\", edit: \"edit\", create: \"create\", custom: \"custom\", deleteConfirm: \"deleteConfirm\", editConfirm: \"editConfirm\", createConfirm: \"createConfirm\", rowHover: \"rowHover\", afterGridInit: \"afterGridInit\" }, usesOnChanges: true, ngImport: i0, template: \"<angular2-smart-table-tags-list\\n  [tags]=\\\"getNotVisibleColumns()\\\" (close)=\\\"toggleColumnVisibility($event)\\\"\\n></angular2-smart-table-tags-list>\\n\\n<div style=\\\"overflow-x: auto; -webkit-overflow-scrolling: touch\\\">\\n  <table [id]=\\\"tableId\\\" [ngClass]=\\\"tableClass\\\">\\n    <thead\\n      angular2-st-thead\\n      *ngIf=\\\"!isHideHeader || !isHideSubHeader\\\"\\n      [grid]=\\\"grid\\\"\\n      [isAllSelected]=\\\"isAllSelected\\\"\\n      [source]=\\\"source\\\"\\n      [createConfirm]=\\\"createConfirm\\\"\\n      (create)=\\\"create.emit($event)\\\"\\n      (selectAllRows)=\\\"onSelectAllRows($event)\\\"\\n      (sort)=\\\"sort($event)\\\"\\n      (hide)=\\\"onHideHeader($event)\\\"\\n      (filter)=\\\"filter($event)\\\"\\n    ></thead>\\n\\n    <tbody\\n      angular2-st-tbody\\n      [grid]=\\\"grid\\\"\\n      [source]=\\\"source\\\"\\n      [deleteConfirm]=\\\"deleteConfirm\\\"\\n      [editConfirm]=\\\"editConfirm\\\"\\n      [rowClassFunction]=\\\"rowClassFunction\\\"\\n      (edit)=\\\"edit.emit($event)\\\"\\n      (delete)=\\\"delete.emit($event)\\\"\\n      (custom)=\\\"custom.emit($event)\\\"\\n      (userSelectRow)=\\\"onUserSelectRow($event)\\\"\\n      (editRowSelect)=\\\"editRowSelect($event)\\\"\\n      (multipleSelectRow)=\\\"multipleSelectRow($event)\\\"\\n      (onExpandRow)=\\\"onExpandRow($event)\\\"\\n      (rowHover)=\\\"onRowHover($event)\\\"\\n    ></tbody>\\n  </table>\\n</div>\\n<angular2-smart-table-pager\\n  *ngIf=\\\"isPagerDisplay\\\"\\n  [source]=\\\"source\\\"\\n  [perPageSelect]=\\\"perPageSelect\\\"\\n  (changePage)=\\\"changePage($event)\\\"\\n>\\n</angular2-smart-table-pager>\\n\", styles: [\":host{font-size:1rem}:host ::ng-deep *{box-sizing:border-box}:host ::ng-deep button,:host ::ng-deep input,:host ::ng-deep optgroup,:host ::ng-deep select,:host ::ng-deep textarea{color:inherit;font:inherit;margin:0}:host ::ng-deep table{line-height:1.5em;border-collapse:collapse;border-spacing:0;display:table;width:100%;max-width:100%;overflow:auto;word-break:normal;word-break:keep-all}:host ::ng-deep table tr th{font-weight:700;position:relative}:host ::ng-deep table tr th .angular2-resizer-block{width:8px;height:100%;position:absolute;right:0;top:0;cursor:col-resize}:host ::ng-deep table tr section{font-size:.75em;font-weight:700}:host ::ng-deep table tr td,:host ::ng-deep table tr th{font-size:.875em;margin:0;padding:.5em 1em}:host ::ng-deep a{color:#1e6bb8;text-decoration:none}:host ::ng-deep a:hover{text-decoration:underline}\\n\"], components: [{ type: TagsListComponent, selector: \"angular2-smart-table-tags-list\", inputs: [\"tags\"], outputs: [\"close\"] }, { type: NgxSmartTableTheadComponent, selector: \"[angular2-st-thead]\", inputs: [\"grid\", \"source\", \"isAllSelected\", \"createConfirm\"], outputs: [\"sort\", \"hide\", \"selectAllRows\", \"create\", \"filter\"] }, { type: NgxSmartTableTbodyComponent, selector: \"[angular2-st-tbody]\", inputs: [\"grid\", \"source\", \"deleteConfirm\", \"editConfirm\", \"rowClassFunction\"], outputs: [\"save\", \"cancel\", \"edit\", \"delete\", \"custom\", \"edited\", \"userSelectRow\", \"editRowSelect\", \"multipleSelectRow\", \"rowHover\", \"onExpandRow\"] }, { type: PagerComponent, selector: \"angular2-smart-table-pager\", inputs: [\"source\", \"perPageSelect\"], outputs: [\"changePage\"] }], directives: [{ type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: Angular2SmartTableComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'angular2-smart-table', template: \"<angular2-smart-table-tags-list\\n  [tags]=\\\"getNotVisibleColumns()\\\" (close)=\\\"toggleColumnVisibility($event)\\\"\\n></angular2-smart-table-tags-list>\\n\\n<div style=\\\"overflow-x: auto; -webkit-overflow-scrolling: touch\\\">\\n  <table [id]=\\\"tableId\\\" [ngClass]=\\\"tableClass\\\">\\n    <thead\\n      angular2-st-thead\\n      *ngIf=\\\"!isHideHeader || !isHideSubHeader\\\"\\n      [grid]=\\\"grid\\\"\\n      [isAllSelected]=\\\"isAllSelected\\\"\\n      [source]=\\\"source\\\"\\n      [createConfirm]=\\\"createConfirm\\\"\\n      (create)=\\\"create.emit($event)\\\"\\n      (selectAllRows)=\\\"onSelectAllRows($event)\\\"\\n      (sort)=\\\"sort($event)\\\"\\n      (hide)=\\\"onHideHeader($event)\\\"\\n      (filter)=\\\"filter($event)\\\"\\n    ></thead>\\n\\n    <tbody\\n      angular2-st-tbody\\n      [grid]=\\\"grid\\\"\\n      [source]=\\\"source\\\"\\n      [deleteConfirm]=\\\"deleteConfirm\\\"\\n      [editConfirm]=\\\"editConfirm\\\"\\n      [rowClassFunction]=\\\"rowClassFunction\\\"\\n      (edit)=\\\"edit.emit($event)\\\"\\n      (delete)=\\\"delete.emit($event)\\\"\\n      (custom)=\\\"custom.emit($event)\\\"\\n      (userSelectRow)=\\\"onUserSelectRow($event)\\\"\\n      (editRowSelect)=\\\"editRowSelect($event)\\\"\\n      (multipleSelectRow)=\\\"multipleSelectRow($event)\\\"\\n      (onExpandRow)=\\\"onExpandRow($event)\\\"\\n      (rowHover)=\\\"onRowHover($event)\\\"\\n    ></tbody>\\n  </table>\\n</div>\\n<angular2-smart-table-pager\\n  *ngIf=\\\"isPagerDisplay\\\"\\n  [source]=\\\"source\\\"\\n  [perPageSelect]=\\\"perPageSelect\\\"\\n  (changePage)=\\\"changePage($event)\\\"\\n>\\n</angular2-smart-table-pager>\\n\", styles: [\":host{font-size:1rem}:host ::ng-deep *{box-sizing:border-box}:host ::ng-deep button,:host ::ng-deep input,:host ::ng-deep optgroup,:host ::ng-deep select,:host ::ng-deep textarea{color:inherit;font:inherit;margin:0}:host ::ng-deep table{line-height:1.5em;border-collapse:collapse;border-spacing:0;display:table;width:100%;max-width:100%;overflow:auto;word-break:normal;word-break:keep-all}:host ::ng-deep table tr th{font-weight:700;position:relative}:host ::ng-deep table tr th .angular2-resizer-block{width:8px;height:100%;position:absolute;right:0;top:0;cursor:col-resize}:host ::ng-deep table tr section{font-size:.75em;font-weight:700}:host ::ng-deep table tr td,:host ::ng-deep table tr th{font-size:.875em;margin:0;padding:.5em 1em}:host ::ng-deep a{color:#1e6bb8;text-decoration:none}:host ::ng-deep a:hover{text-decoration:underline}\\n\"] }]\n        }], propDecorators: { source: [{\n                type: Input\n            }], settings: [{\n                type: Input\n            }], rowSelect: [{\n                type: Output\n            }], rowDeselect: [{\n                type: Output\n            }], userRowSelect: [{\n                type: Output\n            }], delete: [{\n                type: Output\n            }], edit: [{\n                type: Output\n            }], create: [{\n                type: Output\n            }], custom: [{\n                type: Output\n            }], deleteConfirm: [{\n                type: Output\n            }], editConfirm: [{\n                type: Output\n            }], createConfirm: [{\n                type: Output\n            }], rowHover: [{\n                type: Output\n            }], afterGridInit: [{\n                type: Output\n            }] } });\n\nconst CELL_COMPONENTS = [\n    CellComponent,\n    EditCellDefault,\n    DefaultEditor,\n    CustomEditComponent,\n    DefaultEditComponent,\n    EditCellComponent,\n    CheckboxEditorComponent,\n    CompleterEditorComponent,\n    InputEditorComponent,\n    SelectEditorComponent,\n    TextareaEditorComponent,\n    CustomViewComponent,\n    ViewCellComponent,\n];\nclass CellModule {\n}\nCellModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: CellModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCellModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: CellModule, declarations: [CellComponent,\n        EditCellDefault,\n        DefaultEditor,\n        CustomEditComponent,\n        DefaultEditComponent,\n        EditCellComponent,\n        CheckboxEditorComponent,\n        CompleterEditorComponent,\n        InputEditorComponent,\n        SelectEditorComponent,\n        TextareaEditorComponent,\n        CustomViewComponent,\n        ViewCellComponent], imports: [CommonModule,\n        FormsModule,\n        Ng2CompleterModule], exports: [CellComponent,\n        EditCellDefault,\n        DefaultEditor,\n        CustomEditComponent,\n        DefaultEditComponent,\n        EditCellComponent,\n        CheckboxEditorComponent,\n        CompleterEditorComponent,\n        InputEditorComponent,\n        SelectEditorComponent,\n        TextareaEditorComponent,\n        CustomViewComponent,\n        ViewCellComponent] });\nCellModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: CellModule, imports: [[\n            CommonModule,\n            FormsModule,\n            Ng2CompleterModule,\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: CellModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                        Ng2CompleterModule,\n                    ],\n                    declarations: [\n                        ...CELL_COMPONENTS,\n                    ],\n                    exports: [\n                        ...CELL_COMPONENTS,\n                    ],\n                }]\n        }] });\n\nconst FILTER_COMPONENTS = [\n    FilterDefault,\n    DefaultFilter,\n    FilterComponent,\n    DateFilterComponent,\n    DefaultFilterComponent,\n    CustomFilterComponent,\n    CheckboxFilterComponent,\n    CompleterFilterComponent,\n    InputFilterComponent,\n    SelectFilterComponent,\n    MselectFilterComponent\n];\nclass FilterModule {\n}\nFilterModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: FilterModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nFilterModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: FilterModule, declarations: [FilterDefault,\n        DefaultFilter,\n        FilterComponent,\n        DateFilterComponent,\n        DefaultFilterComponent,\n        CustomFilterComponent,\n        CheckboxFilterComponent,\n        CompleterFilterComponent,\n        InputFilterComponent,\n        SelectFilterComponent,\n        MselectFilterComponent], imports: [CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        Ng2CompleterModule,\n        AngularMultiSelectModule], exports: [FilterDefault,\n        DefaultFilter,\n        FilterComponent,\n        DateFilterComponent,\n        DefaultFilterComponent,\n        CustomFilterComponent,\n        CheckboxFilterComponent,\n        CompleterFilterComponent,\n        InputFilterComponent,\n        SelectFilterComponent,\n        MselectFilterComponent] });\nFilterModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: FilterModule, imports: [[\n            CommonModule,\n            FormsModule,\n            ReactiveFormsModule,\n            Ng2CompleterModule,\n            AngularMultiSelectModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: FilterModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                        ReactiveFormsModule,\n                        Ng2CompleterModule,\n                        AngularMultiSelectModule\n                    ],\n                    declarations: [\n                        ...FILTER_COMPONENTS,\n                    ],\n                    exports: [\n                        ...FILTER_COMPONENTS,\n                    ],\n                }]\n        }] });\n\nclass PagerModule {\n}\nPagerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: PagerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPagerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: PagerModule, declarations: [PagerComponent], imports: [CommonModule,\n        FormsModule], exports: [PagerComponent] });\nPagerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: PagerModule, imports: [[\n            CommonModule,\n            FormsModule,\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: PagerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                    ],\n                    declarations: [\n                        PagerComponent,\n                    ],\n                    exports: [\n                        PagerComponent,\n                    ],\n                }]\n        }] });\n\nclass TabsModule {\n}\nTabsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: TabsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTabsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: TabsModule, declarations: [TagComponent,\n        TagsListComponent], imports: [CommonModule], exports: [TagComponent,\n        TagsListComponent] });\nTabsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: TabsModule, imports: [[\n            CommonModule,\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: TabsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                    ],\n                    declarations: [\n                        TagComponent,\n                        TagsListComponent\n                    ],\n                    exports: [\n                        TagComponent,\n                        TagsListComponent\n                    ],\n                }]\n        }] });\n\nconst TBODY_COMPONENTS = [\n    TbodyCreateCancelComponent,\n    TbodyEditDeleteComponent,\n    TbodyCustomComponent,\n    TbodyExpandRowComponent,\n    TbodyCustomItemComponent,\n    NgxSmartTableTbodyComponent\n];\nclass TBodyModule {\n}\nTBodyModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: TBodyModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTBodyModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: TBodyModule, declarations: [TbodyCreateCancelComponent,\n        TbodyEditDeleteComponent,\n        TbodyCustomComponent,\n        TbodyExpandRowComponent,\n        TbodyCustomItemComponent,\n        NgxSmartTableTbodyComponent], imports: [CommonModule,\n        FormsModule,\n        CellModule], exports: [TbodyCreateCancelComponent,\n        TbodyEditDeleteComponent,\n        TbodyCustomComponent,\n        TbodyExpandRowComponent,\n        TbodyCustomItemComponent,\n        NgxSmartTableTbodyComponent] });\nTBodyModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: TBodyModule, imports: [[\n            CommonModule,\n            FormsModule,\n            CellModule,\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: TBodyModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                        CellModule,\n                    ],\n                    declarations: [\n                        ...TBODY_COMPONENTS,\n                    ],\n                    exports: [\n                        ...TBODY_COMPONENTS,\n                    ],\n                }]\n        }] });\n\nconst DIRECTIVES = [\n    NgxResizerDirective\n];\nclass DirectivesModule {\n}\nDirectivesModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: DirectivesModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nDirectivesModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: DirectivesModule, declarations: [NgxResizerDirective], imports: [CommonModule], exports: [NgxResizerDirective] });\nDirectivesModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: DirectivesModule, imports: [[\n            CommonModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: DirectivesModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule\n                    ],\n                    declarations: [\n                        ...DIRECTIVES,\n                    ],\n                    exports: [\n                        ...DIRECTIVES,\n                    ],\n                }]\n        }] });\n\nconst THEAD_COMPONENTS = [\n    ActionsComponent,\n    ActionsTitleComponent,\n    AddButtonComponent,\n    CheckboxSelectAllComponent,\n    ColumnTitleComponent,\n    TitleComponent,\n    TheadFitlersRowComponent,\n    TheadFormRowComponent,\n    TheadTitlesRowComponent,\n    NgxSmartTableTheadComponent\n];\nclass THeadModule {\n}\nTHeadModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: THeadModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTHeadModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: THeadModule, declarations: [ActionsComponent,\n        ActionsTitleComponent,\n        AddButtonComponent,\n        CheckboxSelectAllComponent,\n        ColumnTitleComponent,\n        TitleComponent,\n        TheadFitlersRowComponent,\n        TheadFormRowComponent,\n        TheadTitlesRowComponent,\n        NgxSmartTableTheadComponent], imports: [CommonModule,\n        FormsModule,\n        FilterModule,\n        CellModule,\n        DirectivesModule], exports: [ActionsComponent,\n        ActionsTitleComponent,\n        AddButtonComponent,\n        CheckboxSelectAllComponent,\n        ColumnTitleComponent,\n        TitleComponent,\n        TheadFitlersRowComponent,\n        TheadFormRowComponent,\n        TheadTitlesRowComponent,\n        NgxSmartTableTheadComponent] });\nTHeadModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: THeadModule, imports: [[\n            CommonModule,\n            FormsModule,\n            FilterModule,\n            CellModule,\n            DirectivesModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: THeadModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                        FilterModule,\n                        CellModule,\n                        DirectivesModule\n                    ],\n                    declarations: [\n                        ...THEAD_COMPONENTS,\n                    ],\n                    exports: [\n                        ...THEAD_COMPONENTS,\n                    ],\n                }]\n        }] });\n\nclass Angular2SmartTableModule {\n}\nAngular2SmartTableModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: Angular2SmartTableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nAngular2SmartTableModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: Angular2SmartTableModule, declarations: [Angular2SmartTableComponent], imports: [CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        CellModule,\n        FilterModule,\n        PagerModule,\n        TBodyModule,\n        THeadModule,\n        TabsModule], exports: [Angular2SmartTableComponent] });\nAngular2SmartTableModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: Angular2SmartTableModule, imports: [[\n            CommonModule,\n            FormsModule,\n            ReactiveFormsModule,\n            CellModule,\n            FilterModule,\n            PagerModule,\n            TBodyModule,\n            THeadModule,\n            TabsModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.6\", ngImport: i0, type: Angular2SmartTableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        Angular2SmartTableComponent\n                    ],\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                        ReactiveFormsModule,\n                        CellModule,\n                        FilterModule,\n                        PagerModule,\n                        TBodyModule,\n                        THeadModule,\n                        TabsModule\n                    ],\n                    exports: [\n                        Angular2SmartTableComponent\n                    ]\n                }]\n        }] });\n\nclass ServerSourceConf {\n    constructor({ endPoint = '', sortFieldKey = '', sortDirKey = '', pagerPageKey = '', pagerLimitKey = '', filterFieldKey = '', totalKey = '', dataKey = '' } = {}) {\n        this.endPoint = endPoint ? endPoint : '';\n        this.sortFieldKey = sortFieldKey ? sortFieldKey : ServerSourceConf.SORT_FIELD_KEY;\n        this.sortDirKey = sortDirKey ? sortDirKey : ServerSourceConf.SORT_DIR_KEY;\n        this.pagerPageKey = pagerPageKey ? pagerPageKey : ServerSourceConf.PAGER_PAGE_KEY;\n        this.pagerLimitKey = pagerLimitKey ? pagerLimitKey : ServerSourceConf.PAGER_LIMIT_KEY;\n        this.filterFieldKey = filterFieldKey ? filterFieldKey : ServerSourceConf.FILTER_FIELD_KEY;\n        this.totalKey = totalKey ? totalKey : ServerSourceConf.TOTAL_KEY;\n        this.dataKey = dataKey ? dataKey : ServerSourceConf.DATA_KEY;\n    }\n}\nServerSourceConf.SORT_FIELD_KEY = '_sort';\nServerSourceConf.SORT_DIR_KEY = '_order';\nServerSourceConf.PAGER_PAGE_KEY = '_page';\nServerSourceConf.PAGER_LIMIT_KEY = '_limit';\nServerSourceConf.FILTER_FIELD_KEY = '#field#_like';\nServerSourceConf.TOTAL_KEY = 'x-total-count';\nServerSourceConf.DATA_KEY = '';\n\nclass ServerDataSource extends LocalDataSource {\n    constructor(http, conf = {}) {\n        super();\n        this.http = http;\n        this.lastRequestCount = 0;\n        this.conf = new ServerSourceConf(conf);\n        if (!this.conf.endPoint) {\n            throw new Error('At least endPoint must be specified as a configuration of the server data source.');\n        }\n    }\n    count() {\n        return this.lastRequestCount;\n    }\n    getElements() {\n        return this.requestElements()\n            .pipe(map(res => {\n            this.lastRequestCount = this.extractTotalFromResponse(res);\n            this.data = this.extractDataFromResponse(res);\n            return this.data;\n        })).toPromise();\n    }\n    /**\n     * Extracts array of data from server response\n     * @param res\n     * @returns {any}\n     */\n    extractDataFromResponse(res) {\n        const rawData = res.body;\n        const data = !!this.conf.dataKey ? getDeepFromObject(rawData, this.conf.dataKey, []) : rawData;\n        if (data instanceof Array) {\n            return data;\n        }\n        throw new Error(`Data must be an array.\n    Please check that data extracted from the server response by the key '${this.conf.dataKey}' exists and is array.`);\n    }\n    /**\n     * Extracts total rows count from the server response\n     * Looks for the count in the heders first, then in the response body\n     * @param res\n     * @returns {any}\n     */\n    extractTotalFromResponse(res) {\n        if (res.headers.has(this.conf.totalKey)) {\n            return +res.headers.get(this.conf.totalKey);\n        }\n        else {\n            const rawData = res.body;\n            return getDeepFromObject(rawData, this.conf.totalKey, 0);\n        }\n    }\n    requestElements() {\n        let httpParams = this.createRequesParams();\n        return this.http.get(this.conf.endPoint, { params: httpParams, observe: 'response' });\n    }\n    createRequesParams() {\n        let httpParams = new HttpParams();\n        httpParams = this.addSortRequestParams(httpParams);\n        httpParams = this.addFilterRequestParams(httpParams);\n        return this.addPagerRequestParams(httpParams);\n    }\n    addSortRequestParams(httpParams) {\n        if (this.sortConf) {\n            this.sortConf.forEach((fieldConf) => {\n                httpParams = httpParams.set(this.conf.sortFieldKey, fieldConf.field);\n                httpParams = httpParams.set(this.conf.sortDirKey, fieldConf.direction.toUpperCase());\n            });\n        }\n        return httpParams;\n    }\n    addFilterRequestParams(httpParams) {\n        if (this.filterConf.filters) {\n            this.filterConf.filters.forEach((fieldConf) => {\n                if (fieldConf['search']) {\n                    httpParams = httpParams.set(this.conf.filterFieldKey.replace('#field#', fieldConf['field']), fieldConf['search']);\n                }\n            });\n        }\n        return httpParams;\n    }\n    addPagerRequestParams(httpParams) {\n        if (this.pagingConf && this.pagingConf['page'] && this.pagingConf['perPage']) {\n            httpParams = httpParams.set(this.conf.pagerPageKey, this.pagingConf['page']);\n            httpParams = httpParams.set(this.conf.pagerLimitKey, this.pagingConf['perPage']);\n        }\n        return httpParams;\n    }\n}\n\n/*\n * Public API Surface of angular2-smart-table\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Angular2SmartTableComponent, Angular2SmartTableModule, Cell, DataSet, DefaultEditor, DefaultFilter, IColumnType, LocalDataSource, Row, SelectModeOptions, ServerDataSource };\n"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,iBAApB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,KAAlC,EAAyCC,MAAzC,EAAiDC,UAAjD,EAA6DC,SAA7D,EAAwEC,YAAxE,EAAsFC,gBAAtF,EAAwGC,SAAxG,EAAmHC,uBAAnH,EAA4IC,YAA5I,EAA0JC,QAA1J,QAA0K,eAA1K;AACA,OAAO,KAAKC,EAAZ,MAAoB,gBAApB;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,WAAjC,EAA8CC,mBAA9C,QAAyE,gBAAzE;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,EAAkBC,EAAlB,EAAsBC,aAAtB,QAA2C,MAA3C;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,IAA5B,EAAkCC,oBAAlC,EAAwDC,YAAxD,EAAsEC,GAAtE,EAA2EC,KAA3E,QAAwF,gBAAxF;AACA,SAASC,SAAT,QAA0B,WAA1B;AACA,OAAO,KAAKC,IAAZ,MAAsB,eAAtB;AACA,SAASC,kBAAT,QAAmC,eAAnC;AACA,OAAO,KAAKC,IAAZ,MAAsB,sBAAtB;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,OAAO,KAAKC,IAAZ,MAAsB,+BAAtB;AACA,SAASC,wBAAT,QAAyC,+BAAzC;;;;gBAiuC+FnC,E;;IAAAA,EAoBkM,iD;IApBlMA,EAoBqR;MApBrRA,EAoBqR;MAAA,eApBrRA,EAoBqR;MAAA,OAAU,wBAAV;IAAA,E;IApBrRA,EAoBuT,e;;;;;IApBvTA,EAoBiQ,2B;;;;;;;;;;gBApBjQA,E;;IAAAA,EAiJ3F,0B;IAjJ2FA,EAkJ/E;MAlJ+EA,EAkJ/E;MAAA,eAlJ+EA,EAkJ/E;MAAA,OAAS,oBAAT;IAAA,E;IAlJ+EA,EAqJzF,U;IArJyFA,EAsJ3F,e;;;;mBAtJ2FA,E;IAAAA,EAoJ/E,+C;IApJ+EA,EAqJzF,a;IArJyFA,EAqJzF,kD;;;;;;IArJyFA,EAuJ3F,6B;IAvJ2FA,EAuJ9B,U;IAvJ8BA,EAuJZ,e;;;;mBAvJYA,E;IAAAA,EAuJ9B,a;IAvJ8BA,EAuJ9B,uC;;;;;;gBAvJ8BA,E;;IAAAA,EAwJ3F,+B;IAxJ2FA,EAwJR;MAxJQA,EAwJR;MAAA,eAxJQA,EAwJR;MAAA,OAAS,iCAAT;IAAA,E;IAxJQA,EAwJ6B,e;IAxJ7BA,EAwJ8B,e;;;;;;;;gBAxJ9BA,E;;IAAAA,EAuR3F,2B;IAvR2FA,EA2R5D;MA3R4DA,EA2R5D;MAAA,eA3R4DA,EA2R5D;MAAA,OAAS,iCAAT;IAAA,E;IA3R4DA,EA4R3F,e;;;;mBA5R2FA,E;IAAAA,EAwR5D,gG;;;;;;IAxR4DA,EA6R3F,sB;;;;mBA7R2FA,E;IAAAA,EA6RhC,gC;;;;;;IA7RgCA,EAmSzF,uB;;;;;;gBAnSyFA,E;;IAAAA,EA8R3F,6D;IA9R2FA,EAkSD;MAlSCA,EAkSD;MAAA,eAlSCA,EAkSD;MAAA,OAAQ,wBAAR;IAAA;MAlSCA,EAkSD;MAAA,gBAlSCA,EAkSD;MAAA,OAAmC,yBAAnC;IAAA,E;IAlSCA,EAkSqD,e;IAlSrDA,EAmSzF,2E;IAnSyFA,EAoS3F,e;;;;;mBApS2FA,E;;IAAAA,EA+RvF,+D;IA/RuFA,EAiSvF,sC;IAjSuFA,EAgSvF,oG;IAhSuFA,EAkS/D,a;IAlS+DA,EAkS/D,0F;IAlS+DA,EAmSnF,a;IAnSmFA,EAmSnF,uC;;;;;;IAnSmFA,EAqS3F,sB;;;;mBArS2FA,E;IAAAA,EAqS/B,gC;;;;;;;;gBArS+BA,E;;IAAAA,EAsW3F,0B;IAtW2FA,EAuWrD;MAvWqDA,EAuWrD;MAAA,eAvWqDA,EAuWrD;MAAA,OAAS,oBAAT;IAAA,E;IAvWqDA,EAuW7B,e;;;;mBAvW6BA,E;IAAAA,EAuWvF,qDAvWuFA,EAuWvF,gB;;;;;;;;;;;;IAvWuFA,EA8fvF,+B;IA9fuFA,EA+frF,U;IA/fqFA,EAggBvF,e;;;;;IAhgBuFA,EA8f1B,qC;IA9f0BA,EA+frF,a;IA/fqFA,EA+frF,8C;;;;;;gBA/fqFA,E;;IAAAA,EAqjB3F,0B;IArjB2FA,EAsjB/E;MAtjB+EA,EAsjB/E;MAAA,eAtjB+EA,EAsjB/E;MAAA,OAAS,0BAAT;IAAA,E;IAtjB+EA,EAsjBjD,U;IAtjBiDA,EAsjBC,e;;;;mBAtjBDA,E;;IAAAA,EAsjBjD,a;IAtjBiDA,EAsjBjD,+G;;;;;;IAtjBiDA,EA4qBzF,+B;IA5qByFA,EA4qB1B,U;IA5qB0BA,EA4qBhB,e;;;;;IA5qBgBA,EA4qBjF,+B;IA5qBiFA,EA4qB1B,a;IA5qB0BA,EA4qB1B,6B;;;;;;IA5qB0BA,EA+qB1F,yB;;;;mBA/qB0FA,E;IAAAA,EA+qB9C,2E;;;;;;IA/qB8CA,EAgrB1F,yB;;;;mBAhrB0FA,E;IAAAA,EAgrB/C,0E;;;;;;IAhrB+CA,EAirB1F,yB;;;;mBAjrB0FA,E;IAAAA,EAirB/C,0E;;;;;;IAjrB+CA,EAkrB1F,yB;;;;mBAlrB0FA,E;IAAAA,EAkrB7C,0E;;;;;;IAlrB6CA,EAmrB1F,yB;;;;mBAnrB0FA,E;IAAAA,EAmrB7C,wE;;;;;;gBAnrB6CA,E;;IAAAA,EAu0BzF,sC;IAv0ByFA,EA20B1E;MA30B0EA,EA20B1E;MAAA,eA30B0EA,EA20B1E;MAAA,OAAU,uBAAV;IAAA,E;IA30B0EA,EA40BzF,e;;;;mBA50ByFA,E;IAAAA,EAw0B1E,yF;;;;;;gBAx0B0EA,E;;IAAAA,EA60BzF,wC;IA70ByFA,EAi1BxE;MAj1BwEA,EAi1BxE;MAAA,eAj1BwEA,EAi1BxE;MAAA,OAAU,uBAAV;IAAA,E;IAj1BwEA,EAk1BzF,e;;;;mBAl1ByFA,E;IAAAA,EA80BxE,yF;;;;;;iBA90BwEA,E;;IAAAA,EAm1BzF,yC;IAn1ByFA,EAu1BvE;MAv1BuEA,EAu1BvE;MAAA,gBAv1BuEA,EAu1BvE;MAAA,OAAU,wBAAV;IAAA,E;IAv1BuEA,EAw1BzF,e;;;;mBAx1ByFA,E;IAAAA,EAo1BvE,yF;;;;;;iBAp1BuEA,E;;IAAAA,EAy1BzF,oC;IAz1ByFA,EA61BvE;MA71BuEA,EA61BvE;MAAA,gBA71BuEA,EA61BvE;MAAA,OAAU,wBAAV;IAAA,E;IA71BuEA,EA81BzF,e;;;;mBA91ByFA,E;IAAAA,EA01BvE,yF;;;;;;iBA11BuEA,E;;IAAAA,EA+1BzF,uC;IA/1ByFA,EAm2BvE;MAn2BuEA,EAm2BvE;MAAA,gBAn2BuEA,EAm2BvE;MAAA,OAAU,wBAAV;IAAA,E;IAn2BuEA,EAo2BzF,e;;;;mBAp2ByFA,E;IAAAA,EAg2BvE,yF;;;;;;iBAh2BuEA,E;;IAAAA,EAq2BzF,qC;IAr2ByFA,EAy2B3E;MAz2B2EA,EAy2B3E;MAAA,gBAz2B2EA,EAy2B3E;MAAA,OAAU,wBAAV;IAAA,E;IAz2B2EA,EA02BzF,e;;;;mBA12ByFA,E;IAAAA,EAs2B3E,yF;;;;;;gBAt2B2EA,E;;IAAAA,EA67BvF,4C;IA77BuFA,EAk8BlE;MAl8BkEA,EAk8BlE;MAAA,eAl8BkEA,EAk8BlE;MAAA,OAAU,uBAAV;IAAA,E;IAl8BkEA,EAm8BvF,e;;;;mBAn8BuFA,E;IAAAA,EA87BlE,qH;;;;;;gBA97BkEA,E;;IAAAA,EAo8BvF,6C;IAp8BuFA,EAy8BjE;MAz8BiEA,EAy8BjE;MAAA,eAz8BiEA,EAy8BjE;MAAA,OAAU,uBAAV;IAAA,E;IAz8BiEA,EA08BvF,e;;;;mBA18BuFA,E;IAAAA,EAq8BjE,qH;;;;;;IAr8BiEA,EA47BzF,4B;IA57ByFA,EA67BvF,oG;IA77BuFA,EAo8BvF,sG;IAp8BuFA,EA28BzF,e;;;;mBA38ByFA,E;IAAAA,EA47B1B,sD;IA57B0BA,EA67BjE,a;IA77BiEA,EA67BjE,qC;;;;;;;;IA77BiEA,EAo/B3F,mB;;;;;;gBAp/B2FA,E;;IAAAA,EAq/B3F,2B;IAr/B2FA,EAu/BrE;MAv/BqEA,EAu/BrE;MAAA,eAv/BqEA,EAu/BrE;MAAA,OAAU,0BAAV;IAAA,E;IAv/BqEA,EAw/B3F,e;;;;mBAx/B2FA,E;IAAAA,EAs/BrE,gC;;;;;;gBAt/BqEA,E;;IAAAA,EAy/B3F,6D;IAz/B2FA,EA6/BjE;MA7/BiEA,EA6/BjE;MAAA,eA7/BiEA,EA6/BjE;MAAA,OAAU,0BAAV;IAAA,E;IA7/BiEA,EA8/BzF,iB;;;;;mBA9/ByFA,E;IAAAA,EAy/B3B,+D;IAz/B2BA,EA0/B5D,a;IA1/B4DA,EA0/B5D,gG;;;;;;iBA1/B4DA,E;;IAAAA,EAggC3F,2B;IAhgC2FA,EAmgCrE;MAngCqEA,EAmgCrE;MAAA,eAngCqEA,EAmgCrE;MAAA,OAAU,0BAAV;IAAA,E;IAngCqEA,EAogC3F,e;;;;mBApgC2FA,E;IAAAA,EAigCrE,yD;;;;;;;;IAjgCqEA,EAuoCvF,yC;;;;mBAvoCuFA,E;IAAAA,EAuoCvC,gC;;;;;;IAvoCuCA,EAwoCvF,uB;;;;mBAxoCuFA,E;IAAAA,EAwoC3D,iDAxoC2DA,EAwoC3D,gB;;;;;;IAxoC2DA,EAyoCvF,yB;IAzoCuFA,EAyoCjE,U;IAzoCiEA,EAyoC5C,e;;;;mBAzoC4CA,E;IAAAA,EAyoCjE,a;IAzoCiEA,EAyoCjE,0C;;;;;;;;IAzoCiEA,EAsxCvF,+B;IAtxCuFA,EAuxCjC,U;IAvxCiCA,EAwxCvF,e;;;;;mBAxxCuFA,E;IAAAA,EAsxCrB,6F;IAtxCqBA,EAuxCjC,a;IAvxCiCA,EAuxCjC,6C;;;;;;;;gBAvxCiCA,E;;IAAAA,EAi9C6J,sC;IAj9C7JA,EAi9C6S;MAj9C7SA,EAi9C6S;MAAA,eAj9C7SA,EAi9C6S;MAAA,OAAY,sBAAZ;IAAA;MAj9C7SA,EAi9C6S;MAAA,eAj9C7SA,EAi9C6S;MAAA,OAA+D,uBAA/D;IAAA;MAj9C7SA,EAi9C6S;MAAA,eAj9C7SA,EAi9C6S;MAAA,OAAwH,sBAAxH;IAAA,E;IAj9C7SA,EAi9C6b,e;;;;mBAj9C7bA,E;IAAAA,EAi9CyN,iE;;;;;;iBAj9CzNA,E;;IAAAA,EAi9Cqd,wC;IAj9CrdA,EAi9CinB;MAj9CjnBA,EAi9CinB;MAAA,eAj9CjnBA,EAi9CinB;MAAA,OAAY,sBAAZ;IAAA;MAj9CjnBA,EAi9CinB;MAAA,gBAj9CjnBA,EAi9CinB;MAAA,OAAiE,wBAAjE;IAAA;MAj9CjnBA,EAi9CinB;MAAA,gBAj9CjnBA,EAi9CinB;MAAA,OAA4H,uBAA5H;IAAA,E;IAj9CjnBA,EAi9CqwB,e;;;;mBAj9CrwBA,E;IAAAA,EAi9CyhB,iE;;;;;;iBAj9CzhBA,E;;IAAAA,EAi9C+xB,wC;IAj9C/xBA,EAi9C27B;MAj9C37BA,EAi9C27B;MAAA,gBAj9C37BA,EAi9C27B;MAAA,OAAY,uBAAZ;IAAA,E;IAj9C37BA,EAi9C+9B,e;;;;mBAj9C/9BA,E;IAAAA,EAi9Cm2B,iE;;;;;;IAj9Cn2BA,EAi9Cy/B,oC;;;;mBAj9Cz/BA,E;IAAAA,EAi9CgkC,gC;;;;;;iBAj9ChkCA,E;;IAAAA,EAi9CinC,qC;IAj9CjnCA,EAi9CqvC;MAj9CrvCA,EAi9CqvC;MAAA,gBAj9CrvCA,EAi9CqvC;MAAA,OAAY,uBAAZ;IAAA;MAj9CrvCA,EAi9CqvC;MAAA,gBAj9CrvCA,EAi9CqvC;MAAA,OAA8D,wBAA9D;IAAA;MAj9CrvCA,EAi9CqvC;MAAA,gBAj9CrvCA,EAi9CqvC;MAAA,OAAsH,uBAAtH;IAAA,E;IAj9CrvCA,EAi9Cm4C,e;;;;mBAj9Cn4CA,E;IAAAA,EAi9CmqC,iE;;;;;;gBAj9CnqCA,E;;IAAAA,EA8+CvF,iD;IA9+CuFA,EAi/C7D;MAj/C6DA,EAi/C7D;MAAA,eAj/C6DA,EAi/C7D;MAAA,OAAU,uBAAV;IAAA,E;IAj/C6DA,EAk/CvF,e;;;;mBAl/CuFA,E;IAAAA,EA++C7D,iE;;;;;;gBA/+C6DA,E;;IAAAA,EAm/CvF,kD;IAn/CuFA,EAs/C7D;MAt/C6DA,EAs/C7D;MAAA,eAt/C6DA,EAs/C7D;MAAA,OAAU,uBAAV;IAAA,E;IAt/C6DA,EAu/CvF,e;;;;mBAv/CuFA,E;IAAAA,EAo/C7D,iE;;;;;;IAp/C6DA,EAuiD3F,wC;;;;mBAviD2FA,E;IAAAA,EAuiDhD,gC;;;;;;gBAviDgDA,E;;IAAAA,EAwiD3F,6C;IAxiD2FA,EA0iDrE;MA1iDqEA,EA0iDrE;MAAA,eA1iDqEA,EA0iDrE;MAAA,OAAU,uBAAV;IAAA,E;IA1iDqEA,EA2iD3F,e;;;;mBA3iD2FA,E;IAAAA,EAwiDjD,iE;;;;;;;;IAxiDiDA,EAmmDzF,mB;;;;;;gBAnmDyFA,E;;IAAAA,EAomDzF,wD;IApmDyFA,EAqmDpD;MArmDoDA,EAqmDpD;MAAA,eArmDoDA,EAqmDpD;MAAA,OAAU,uBAAV;IAAA,E;IArmDoDA,EAqmDxB,iB;;;;mBArmDwBA,E;IAAAA,EAqmDlE,a;IArmDkEA,EAqmDlE,gC;;;;;;gBArmDkEA,E;;IAAAA,EAumDzF,2D;IAvmDyFA,EA8mDjE;MA9mDiEA,EA8mDjE;MAAA,eA9mDiEA,EA8mDjE;MAAA,OAAU,uBAAV;IAAA,E;IA9mDiEA,EA+mDvF,iB;;;;;mBA/mDuFA,E;IAAAA,EAwmD5D,a;IAxmD4DA,EAwmD5D,+L;;;;;;iBAxmD4DA,E;;IAAAA,EAinDzF,wD;IAjnDyFA,EAknDpD;MAlnDoDA,EAknDpD;MAAA,eAlnDoDA,EAknDpD;MAAA,OAAU,uBAAV;IAAA,E;IAlnDoDA,EAknDxB,iB;;;;mBAlnDwBA,E;IAAAA,EAknDlE,a;IAlnDkEA,EAknDlE,gC;;;;;;;;gBAlnDkEA,E;;IAAAA,EAyqD6Y,2B;IAzqD7YA,EAyqD6rB;MAzqD7rBA,EAyqD6rB;MAAA,eAzqD7rBA,EAyqD6rB;MAAA,OAAS,wBAAT;IAAA;MAzqD7rBA,EAyqD6rB;MAAA,eAzqD7rBA,EAyqD6rB;MAAA,OAAmE,wBAAnE;IAAA;MAzqD7rBA,EAyqD6rB;MAAA,eAzqD7rBA,EAyqD6rB;MAAA,OAAsI,iCAAtI;IAAA,E;IAzqD7rBA,EAyqDk2B,e;;;;mBAzqDl2BA,E;IAAAA,EAyqDgiB,gG;;;;;;gBAzqDhiBA,E;;IAAAA,EAyqD22B,2B;IAzqD32BA,EAyqDymC;MAzqDzmCA,EAyqDymC;MAAA,eAzqDzmCA,EAyqDymC;MAAA,OAAW,0BAAX;IAAA;MAzqDzmCA,EAyqDymC;MAAA,eAzqDzmCA,EAyqDymC;MAAA,OAA2E,0BAA3E;IAAA,E;IAzqDzmCA,EAyqD4sC,e;;;;mBAzqD5sCA,E;IAAAA,EAyqDugC,yD;;;;;;IAzqDvgCA,EAyqDqtC,sB;;;;mBAzqDrtCA,E;IAAAA,EAyqD8yC,uE;;;;;;;;gBAzqD9yCA,E;;IAAAA,EAkwDzF,0B;IAlwDyFA,EAqwDtF;MArwDsFA,EAqwDtF;MAAA,kBArwDsFA,EAqwDtF;MAAA,eArwDsFA,EAqwDtF;MAAA,OAAS,kCAAT;IAAA,E;IArwDsFA,EAqwDnD,e;;;;sBArwDmDA,E;IAAAA,EAowDtF,0CApwDsFA,EAowDtF,gB;;;;;;iBApwDsFA,E;;IAAAA,EAswDzF,0B;IAtwDyFA,EAwwDtF;MAxwDsFA,EAwwDtF;MAAA,kBAxwDsFA,EAwwDtF;MAAA,eAxwDsFA,EAwwDtF;MAAA,OAAS,kCAAT;IAAA,E;IAxwDsFA,EAywDvF,iD;IAzwDuFA,EA4wDzF,e;;;;sBA5wDyFA,E;mBAAAA,E;IAAAA,EA0wD7D,a;IA1wD6DA,EA0wD7D,mD;;;;;;IA1wD6DA,EAiwD3F,2B;IAjwD2FA,EAkwDzF,8E;IAlwDyFA,EAswDzF,8E;IAtwDyFA,EA8wD3F,wB;;;;;IA9wD2FA,EAmwDrF,a;IAnwDqFA,EAmwDrF,+C;IAnwDqFA,EAuwDrF,a;IAvwDqFA,EAuwDrF,8C;;;;;;gBAvwDqFA,E;;IAAAA,EA83D3F,0B;IA93D2FA,EA+3DpD;MA/3DoDA,EA+3DpD;MAAA,eA/3DoDA,EA+3DpD;MAAA,OAAS,qBAAT;IAAA,E;IA/3DoDA,EA+3D3B,e;;;;mBA/3D2BA,E;IAAAA,EA+3DvF,sDA/3DuFA,EA+3DvF,gB;;;;;;gBA/3DuFA,E;;IAAAA,EAg4D3F,0B;IAh4D2FA,EAi4DlD;MAj4DkDA,EAi4DlD;MAAA,eAj4DkDA,EAi4DlD;MAAA,OAAS,uBAAT;IAAA,E;IAj4DkDA,EAi4DvB,e;;;;mBAj4DuBA,E;IAAAA,EAi4DvF,wDAj4DuFA,EAi4DvF,gB;;;;;;;;;iBAj4DuFA,E;;IAAAA,EAkhEw4B,2B;IAlhEx4BA,EAkhEk/B;MAlhEl/BA,EAkhEk/B;MAAA,eAlhEl/BA,EAkhEk/B;MAAA,gBAlhEl/BA,EAkhEk/B;MAAA,OAAU,sCAAV;IAAA,E;IAlhEl/BA,EAkhEkiC,yB;IAlhEliCA,EAkhEynC,e;;;;mBAlhEznCA,E;IAAAA,EAkhEslC,a;IAlhEtlCA,EAkhEslC,yC;;;;;;iBAlhEtlCA,E;;IAAAA,EAkhE86C,kD;IAlhE96CA,EAkhEijD;MAlhEjjDA,EAkhEijD;MAAA,eAlhEjjDA,EAkhEijD;MAAA,gBAlhEjjDA,EAkhEijD;MAAA,OAAgB,gCAAhB;IAAA,E;IAlhEjjDA,EAkhEimD,e;;;;mBAlhEjmDA,E;oBAAAA,E;IAAAA,EAkhE2/C,gD;;;;;;iBAlhE3/CA,E;;IAAAA,EAkhEooC,6D;IAlhEpoCA,EAkhEoyC;MAlhEpyCA,EAkhEoyC;MAAA,gBAlhEpyCA,EAkhEoyC;MAAA,OAAW,2BAAX;IAAA,E;IAlhEpyCA,EAkhEm4C,e;IAlhEn4CA,EAkhE86C,yI;IAlhE96CA,EAkhEsoD,uD;IAlhEtoDA,EAkhEw1D;MAlhEx1DA,EAkhEw1D;MAAA,eAlhEx1DA,EAkhEw1D;MAAA,gBAlhEx1DA,EAkhEw1D;MAAA,OAAS,yBAAT;IAAA;MAlhEx1DA,EAkhEw1D;MAAA,eAlhEx1DA,EAkhEw1D;MAAA,gBAlhEx1DA,EAkhEw1D;MAAA,OAAsE,2BAAtE;IAAA;MAlhEx1DA,EAkhEw1D;MAAA,gBAlhEx1DA,EAkhEw1D;MAAA,OAA4I,kCAA5I;IAAA,E;IAlhEx1DA,EAkhE6mE,iB;;;;mBAlhE7mEA,E;mBAAAA,E;IAAAA,EAkhE0wC,a;IAlhE1wCA,EAkhE0wC,wE;IAlhE1wCA,EAkhEq9C,a;IAlhEr9CA,EAkhEq9C,6C;IAlhEr9CA,EAkhEqqD,a;IAlhErqDA,EAkhEqqD,kJ;;;;;;IAlhErqDA,EAkhE8pE,2B;IAlhE9pEA,EAkhE8vE,oD;IAlhE9vEA,EAkhEm4E,e;;;;mBAlhEn4EA,E;mBAAAA,E;IAAAA,EAkhE+xE,a;IAlhE/xEA,EAkhE+xE,kF;;;;;;IAlhE/xEA,EAkhE84E,wB;IAlhE94EA,EAkhE48E,8C;IAlhE58EA,EAkhE44F,e;;;;;mBAlhE54FA,E;mBAAAA,E;IAAAA,EAkhEu+E,a;IAlhEv+EA,EAkhEu+E,iN;;;;;;IAlhEv+EA,EAkhEy5F,2B;IAlhEz5FA,EAkhE0/F,oD;IAlhE1/FA,EAkhE+nG,e;;;;mBAlhE/nGA,E;mBAAAA,E;IAAAA,EAkhE2hG,a;IAlhE3hGA,EAkhE2hG,kF;;;;;;iBAlhE3hGA,E;;IAAAA,EAkhE+3G,kD;IAlhE/3GA,EAkhEkgH;MAlhElgHA,EAkhEkgH;MAAA,eAlhElgHA,EAkhEkgH;MAAA,gBAlhElgHA,EAkhEkgH;MAAA,OAAgB,gCAAhB;IAAA,E;IAlhElgHA,EAkhEkjH,e;;;;mBAlhEljHA,E;oBAAAA,E;IAAAA,EAkhE48G,gD;;;;;;iBAlhE58GA,E;;IAAAA,EAkhE4oG,6D;IAlhE5oGA,EAkhEuxG;MAlhEvxGA,EAkhEuxG;MAAA,gBAlhEvxGA,EAkhEuxG;MAAA,OAAW,2BAAX;IAAA,E;IAlhEvxGA,EAkhE01G,e;IAlhE11GA,EAkhE+3G,yI;IAlhE/3GA,EAkhE6lH,uD;IAlhE7lHA,EAkhEm5H;MAlhEn5HA,EAkhEm5H;MAAA,eAlhEn5HA,EAkhEm5H;MAAA,gBAlhEn5HA,EAkhEm5H;MAAA,OAAS,yBAAT;IAAA;MAlhEn5HA,EAkhEm5H;MAAA,eAlhEn5HA,EAkhEm5H;MAAA,gBAlhEn5HA,EAkhEm5H;MAAA,OAAsE,2BAAtE;IAAA;MAlhEn5HA,EAkhEm5H;MAAA,gBAlhEn5HA,EAkhEm5H;MAAA,OAA4I,kCAA5I;IAAA,E;IAlhEn5HA,EAkhEokI,iB;;;;mBAlhEpkIA,E;mBAAAA,E;IAAAA,EAkhEuwG,a;IAlhEvwGA,EAkhEuwG,wE;IAlhEvwGA,EAkhEs6G,a;IAlhEt6GA,EAkhEs6G,6C;IAlhEt6GA,EAkhE4nH,a;IAlhE5nHA,EAkhE4nH,kJ;;;;;;;;IAlhE5nHA,EAkhE4nI,yC;IAlhE5nIA,EAkhEszI,sHAlhEtzIA,EAkhEszI,wB;IAlhEtzIA,EAkhE02I,iB;;;;mBAlhE12IA,E;IAAAA,EAkhE0tI,a;IAlhE1tIA,EAkhE0tI,iD;;;;;;;;;;;;iBAlhE1tIA,E;;IAAAA,EAkhEmpB,2B;IAlhEnpBA,EAkhE2sB,2B;IAlhE3sBA,EAkhE+sB;MAAA,oBAlhE/sBA,EAkhE+sB;MAAA;MAAA,gBAlhE/sBA,EAkhE+sB;MAAA,OAAU,kCAAV;IAAA;MAAA,oBAlhE/sBA,EAkhE+sB;MAAA;MAAA,gBAlhE/sBA,EAkhE+sB;MAAA,OAAkD,6BAAlD;IAAA,E;IAlhE/sBA,EAkhEw4B,uF;IAlhEx4BA,EAkhEooC,uF;IAlhEpoCA,EAkhE8pE,uF;IAlhE9pEA,EAkhE84E,uF;IAlhE94EA,EAkhEy5F,uF;IAlhEz5FA,EAkhE4oG,uF;IAlhE5oGA,EAkhEmnI,e;IAlhEnnIA,EAkhE4nI,uF;IAlhE5nIA,EAkhE03I,wB;;;;;mBAlhE13IA,E;IAAAA,EAkhEmzB,a;IAlhEnzBA,EAkhEmzB,qEAlhEnzBA,EAkhEmzB,6C;IAlhEnzBA,EAkhE64B,a;IAlhE74BA,EAkhE64B,gD;IAlhE74BA,EAkhEyoC,a;IAlhEzoCA,EAkhEyoC,uE;IAlhEzoCA,EAkhEmqE,a;IAlhEnqEA,EAkhEmqE,sE;IAlhEnqEA,EAkhEo6E,a;IAlhEp6EA,EAkhEo6E,4D;IAlhEp6EA,EAkhE85F,a;IAlhE95FA,EAkhE85F,uE;IAlhE95FA,EAkhEipG,a;IAlhEjpGA,EAkhEipG,wE;IAlhEjpGA,EAkhEwrI,a;IAlhExrIA,EAkhEwrI,sC;;;;;;IAlhExrIA,EAkhE24I,iC;IAlhE34IA,EAkhEu+I,U;IAlhEv+IA,EAkhE8/I,iB;;;;mBAlhE9/IA,E;IAAAA,EAkhE47I,a;IAlhE57IA,EAkhE47I,iD;IAlhE57IA,EAkhEu+I,a;IAlhEv+IA,EAkhEu+I,mD;;;;;;IAlhEv+IA,EA6qErF,8B;IA7qEqFA,EA8qE3D,U;IA9qE2DA,EA8qEhD,6B;IA9qEgDA,EA8qE1B,uB;IA9qE0BA,EA8qEjB,iB;;;;oBA9qEiBA,E;IAAAA,EA8qE3D,a;IA9qE2DA,EA8qE3D,qC;;;;;;gBA9qE2DA,E;;IAAAA,EA+qErF,2B;IA/qEqFA,EAgrErF;MAhrEqFA,EAgrErF;MAAA,gBAhrEqFA,EAgrErF;MAAA,eAhrEqFA,EAgrErF;MAAA,OAAS,wBAAT;IAAA,E;IAhrEqFA,EAgrElC,U;IAhrEkCA,EAgrExB,e;;;;oBAhrEwBA,E;IAAAA,EAgrElC,a;IAhrEkCA,EAgrElC,2B;;;;;;;;;;;;IAhrEkCA,EA2qEvF,2B;IA3qEuFA,EA6qErF,4E;IA7qEqFA,EA+qErF,sE;IA/qEqFA,EAirEvF,e;;;;;mBAjrEuFA,E;IAAAA,EA4qEvF,uBA5qEuFA,EA4qEvF,uD;IA5qEuFA,EA8qEpF,a;IA9qEoFA,EA8qEpF,gD;IA9qEoFA,EAgrE3D,a;IAhrE2DA,EAgrE3D,gD;;;;;;;;;;;;iBAhrE2DA,E;;IAAAA,EA2pE3F,+D;IA3pE2FA,EA+pErF;MA/pEqFA,EA+pErF;MAAA,gBA/pEqFA,EA+pErF;MAAA,OAAS,iBAAT,IAAsB,CAAtB,GAA0B,KAA1B,GAAkC,iBAAS,CAAT,CAAlC;IAAA,E;IA/pEqFA,EAgqEnF,6B;IAhqEmFA,EAgqE1D,kB;IAhqE0DA,EAgqEnD,e;IAhqEmDA,EAiqEnF,6B;IAjqEmFA,EAiqE7D,mB;IAjqE6DA,EAiqExD,mB;IAjqEwDA,EAoqEvF,sC;IApqEuFA,EAsqElF;MAtqEkFA,EAsqElF;MAAA,gBAtqEkFA,EAsqElF;MAAA,OAAS,iBAAT,IAAsB,CAAtB,GAA0B,KAA1B,GAAkC,cAAlC;IAAA,E;IAtqEkFA,EAuqEnF,8B;IAvqEmFA,EAuqE1D,gB;IAvqE0DA,EAuqEtD,e;IAvqEsDA,EAwqEnF,8B;IAxqEmFA,EAwqE7D,mB;IAxqE6DA,EAwqEzD,mB;IAxqEyDA,EA2qEvF,mE;IA3qEuFA,EAmrEvF,yC;IAnrEuFA,EAsrElF;MAtrEkFA,EAsrElF;MAAA,gBAtrEkFA,EAsrElF;MAAA,OAAS,iBAAT,IAAsB,iBAAtB,GAAkC,KAAlC,GAA0C,cAA1C;IAAA,E;IAtrEkFA,EAurEnF,8B;IAvrEmFA,EAurE1D,gB;IAvrE0DA,EAurEtD,e;IAvrEsDA,EAwrEnF,8B;IAxrEmFA,EAwrE7D,mB;IAxrE6DA,EAwrEzD,mB;IAxrEyDA,EA4rEvF,yC;IA5rEuFA,EA+rErF;MA/rEqFA,EA+rErF;MAAA,gBA/rEqFA,EA+rErF;MAAA,OAAS,iBAAT,IAAsB,iBAAtB,GAAkC,KAAlC,GAA0C,iBAAS,iBAAT,CAA1C;IAAA,E;IA/rEqFA,EAgsEnF,8B;IAhsEmFA,EAgsE1D,mB;IAhsE0DA,EAgsEnD,e;IAhsEmDA,EAisEnF,8B;IAjsEmFA,EAisE7D,mB;IAjsE6DA,EAisEzD,uB;;;;mBAjsEyDA,E;IAAAA,EA6pExC,a;IA7pEwCA,EA6pExC,uBA7pEwCA,EA6pExC,iD;IA7pEwCA,EAoqExC,a;IApqEwCA,EAoqExC,uBApqEwCA,EAoqExC,iD;IApqEwCA,EA4qE9B,a;IA5qE8BA,EA4qE9B,yC;IA5qE8BA,EAorEnF,a;IAprEmFA,EAorEnF,uBAprEmFA,EAorEnF,gE;IAprEmFA,EA6rEvF,a;IA7rEuFA,EA6rEvF,uBA7rEuFA,EA6rEvF,iE;;;;;;IA7rEuFA,EA4sEvF,gC;IA5sEuFA,EA4sE7B,U;IA5sE6BA,EA4sEnB,e;;;;;IA5sEmBA,EA4sE5C,8B;IA5sE4CA,EA4sE7B,a;IA5sE6BA,EA4sE7B,4B;;;;;;iBA5sE6BA,E;;IAAAA,EAusE3F,6C;IAvsE2FA,EAysEvF,yB;IAzsEuFA,EA0sEzF,e;IA1sEyFA,EA2sEzF,gC;IA3sEyFA,EA2sEjF;MA3sEiFA,EA2sEjF;MAAA,gBA3sEiFA,EA2sEjF;MAAA,OAAU,+BAAV;IAAA;MA3sEiFA,EA2sEjF;MAAA,gBA3sEiFA,EA2sEjF;MAAA;IAAA,E;IA3sEiFA,EA4sEvF,0E;IA5sEuFA,EA6sEzF,iB;;;;mBA7sEyFA,E;IAAAA,EA2sE9C,a;IA3sE8CA,EA2sE9C,6C;IA3sE8CA,EA4sE9D,a;IA5sE8DA,EA4sE9D,4C;;;;;;gBA5sE8DA,E;;IAAAA,EA6iF0vB,8B;IA7iF1vBA,EA6iFw9B;MA7iFx9BA,EA6iFw9B;MAAA,eA7iFx9BA,EA6iFw9B;MAAA,OAAW,0BAAX;IAAA;MA7iFx9BA,EA6iFw9B;MAAA,eA7iFx9BA,EA6iFw9B;MAAA,OAA0D,8BAA1D;IAAA;MA7iFx9BA,EA6iFw9B;MAAA,eA7iFx9BA,EA6iFw9B;MAAA,OAAoG,mBAApG;IAAA;MA7iFx9BA,EA6iFw9B;MAAA,eA7iFx9BA,EA6iFw9B;MAAA,OAAmI,2BAAnI;IAAA;MA7iFx9BA,EA6iFw9B;MAAA,eA7iFx9BA,EA6iFw9B;MAAA,OAA4K,qBAA5K;IAAA,E;IA7iFx9BA,EA6iF2pC,e;;;;mBA7iF3pCA,E;IAAAA,EA6iFo1B,uI;;;;;;gBA7iFp1BA,E;;IAAAA,EA6iFqwD,mD;IA7iFrwDA,EA6iF43D;MA7iF53DA,EA6iF43D;MAAA,eA7iF53DA,EA6iF43D;MAAA,OAAe,yBAAf;IAAA,E;IA7iF53DA,EA6iFo6D,e;;;;mBA7iFp6DA,E;IAAAA,EA6iFg0D,2E;;;;AA5wH/5D,MAAMoC,UAAN,CAAiB;EACbC,WAAW,GAAG;IACV,KAAKC,eAAL,GAAuB,IAAInB,OAAJ,EAAvB;IACA,KAAKoB,aAAL,GAAqB,IAAIpB,OAAJ,EAArB;IACA,KAAKqB,eAAL,GAAuB,IAAIrB,OAAJ,EAAvB;IACA,KAAKsB,eAAL,GAAuB,IAAItB,OAAJ,EAAvB;EACH;;EACDuB,OAAO,GAAG;IACN,KAAKC,aAAL,CAAmB,SAAnB;EACH;;EACDC,IAAI,CAACC,IAAD,EAAO;IACP,KAAKF,aAAL,CAAmB,MAAnB;IACA,OAAOG,OAAO,CAACC,OAAR,EAAP;EACH;;EACDC,SAAS,GAAG;IACR,OAAO,KAAKV,eAAL,CAAqBW,YAArB,EAAP;EACH;;EACDC,OAAO,GAAG;IACN,OAAO,KAAKX,aAAL,CAAmBU,YAAnB,EAAP;EACH;;EACDE,SAAS,GAAG;IACR,OAAO,KAAKX,eAAL,CAAqBS,YAArB,EAAP;EACH;;EACDG,SAAS,GAAG;IACR,OAAO,KAAKX,eAAL,CAAqBQ,YAArB,EAAP;EACH;;EACDI,OAAO,CAACC,OAAD,EAAU;IACb,KAAKC,WAAL,CAAiBD,OAAjB;IACA,KAAKX,aAAL,CAAmB,SAAnB;IACA,OAAOG,OAAO,CAACC,OAAR,EAAP;EACH;;EACDS,MAAM,CAACF,OAAD,EAAU;IACZ,KAAKC,WAAL,CAAiBD,OAAjB;IACA,KAAKX,aAAL,CAAmB,QAAnB;IACA,OAAOG,OAAO,CAACC,OAAR,EAAP;EACH;;EACDU,GAAG,CAACH,OAAD,EAAU;IACT,KAAKC,WAAL,CAAiBD,OAAjB;IACA,KAAKX,aAAL,CAAmB,KAAnB;IACA,OAAOG,OAAO,CAACC,OAAR,EAAP;EACH;;EACDW,MAAM,CAACJ,OAAD,EAAU;IACZ,KAAKK,aAAL,CAAmBL,OAAnB;IACA,KAAKX,aAAL,CAAmB,QAAnB;IACA,OAAOG,OAAO,CAACC,OAAR,EAAP;EACH;;EACDa,MAAM,CAACN,OAAD,EAAUO,MAAV,EAAkB;IACpB,KAAKC,aAAL,CAAmBR,OAAnB;IACA,KAAKX,aAAL,CAAmB,QAAnB;IACA,OAAOG,OAAO,CAACC,OAAR,EAAP;EACH;;EACDgB,KAAK,GAAG;IACJ,KAAKpB,aAAL,CAAmB,OAAnB;IACA,OAAOG,OAAO,CAACC,OAAR,EAAP;EACH;;EACDiB,OAAO,CAACC,IAAD,EAAOC,MAAP,EAAe;IAClB,IAAIA,MAAJ,EAAY;MACR,KAAKvB,aAAL,CAAmB,MAAnB;IACH;EACJ;;EACDwB,SAAS,CAACF,IAAD,EAAOG,WAAP,EAAoBF,MAApB,EAA4B;IACjC,IAAIA,MAAJ,EAAY;MACR,KAAKvB,aAAL,CAAmB,QAAnB;IACH;EACJ;;EACD0B,SAAS,CAACC,SAAD,EAAYF,WAAZ,EAAyBF,MAAzB,EAAiC;IACtC,IAAIA,MAAJ,EAAY;MACR,KAAKvB,aAAL,CAAmB,QAAnB;IACH;EACJ;;EACD4B,SAAS,CAACC,IAAD,EAAOC,OAAP,EAAgBP,MAAhB,EAAwB;IAC7B,IAAIA,MAAJ,EAAY;MACR,KAAKvB,aAAL,CAAmB,QAAnB;IACH;EACJ;;EACD+B,OAAO,CAACF,IAAD,EAAON,MAAP,EAAe;IAClB,IAAIA,MAAJ,EAAY;MACR,KAAKvB,aAAL,CAAmB,MAAnB;IACH;EACJ;;EACDgB,aAAa,CAACL,OAAD,EAAU;IACnB,KAAKb,eAAL,CAAqBkC,IAArB,CAA0BrB,OAA1B;EACH;;EACDQ,aAAa,CAACR,OAAD,EAAU;IACnB,KAAKd,eAAL,CAAqBmC,IAArB,CAA0BrB,OAA1B;EACH;;EACDC,WAAW,CAACD,OAAD,EAAU;IACjB,KAAKf,aAAL,CAAmBoC,IAAnB,CAAwBrB,OAAxB;EACH;;EACDX,aAAa,CAACiC,MAAD,EAAS;IAClB,KAAKC,WAAL,GAAmBC,IAAnB,CAAyBC,QAAD,IAAc,KAAKzC,eAAL,CAAqBqC,IAArB,CAA0B;MAC5DC,MAAM,EAAEA,MADoD;MAE5DG,QAAQ,EAAEA,QAFkD;MAG5DC,MAAM,EAAE,KAAKC,SAAL,EAHoD;MAI5D1D,MAAM,EAAE,KAAK2D,SAAL,EAJoD;MAK5DC,IAAI,EAAE,KAAKC,OAAL;IALsD,CAA1B,CAAtC;EAOH;;AAjGY;;AAoGjB,SAASC,uBAAT,CAAiCC,SAAjC,EAA4CC,IAA5C,EAAkDC,KAAlD,EAAyD;EACrD,IAAID,IAAI,IAAI,IAAR,IAAgBC,KAAK,IAAI,IAA7B,EAAmC;IAC/B,OAAO,CAAP;EACH,CAHoD,CAIrD;;;EACA,IAAID,IAAI,IAAI,IAAR,IAAgBA,IAAI,GAAGC,KAA3B,EAAkC;IAC9B,OAAO,CAAC,CAAD,GAAKF,SAAZ;EACH;;EACD,IAAIE,KAAK,IAAI,IAAT,IAAiBA,KAAK,GAAGD,IAA7B,EAAmC;IAC/B,OAAOD,SAAP;EACH,CAVoD,CAWrD;;;EACA,OAAO,CAAP;AACH;;AACD,SAASG,uBAAT,CAAiCH,SAAjC,EAA4CC,IAA5C,EAAkDC,KAAlD,EAAyD;EACrD;EACA,OAAOH,uBAAuB,CAACC,SAAD,EAAYC,IAAZ,EAAkBC,KAAlB,CAA9B;AACH;;AACD,SAASE,uBAAT,CAAiCJ,SAAjC,EAA4CC,IAA5C,EAAkDC,KAAlD,EAAyD;EACrD,IAAID,IAAI,IAAI,IAAR,IAAgBC,KAAK,IAAI,IAA7B,EAAmC;IAC/B,OAAO,CAAP;EACH,CAFD,MAGK,IAAID,IAAI,IAAI,IAAZ,EAAkB;IACnB,OAAO,CAAC,CAAD,GAAKD,SAAZ;EACH,CAFI,MAGA,IAAIE,KAAK,IAAI,IAAb,EAAmB;IACpB,OAAOF,SAAP;EACH,CAFI,MAGA;IACD,OAAOC,IAAI,CAACI,aAAL,CAAmBH,KAAnB,IAA4BF,SAAnC;EACH;AACJ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASM,iBAAT,CAA2BN,SAA3B,EAAsCC,IAAtC,EAA4CC,KAA5C,EAAmD;EAC/C,MAAMK,aAAa,GAAGN,IAAI,IAAI,IAAR,IAAgB,CAACO,KAAK,CAACC,UAAU,CAACR,IAAD,CAAX,CAA5C;EACA,MAAMS,cAAc,GAAGR,KAAK,IAAI,IAAT,IAAiB,CAACM,KAAK,CAACC,UAAU,CAACP,KAAD,CAAX,CAA9C;EACA,MAAMS,YAAY,GAAGV,IAAI,IAAI,IAAR,IAAiB,OAAOA,IAAP,KAAgB,QAAtD;EACA,MAAMW,aAAa,GAAGV,KAAK,IAAI,IAAT,IAAkB,OAAOA,KAAP,KAAiB,QAAzD;;EACA,IAAIK,aAAa,IAAIG,cAArB,EAAqC;IACjC,OAAOP,uBAAuB,CAACH,SAAD,EAAYa,MAAM,CAACZ,IAAD,CAAlB,EAA0BY,MAAM,CAACX,KAAD,CAAhC,CAA9B;EACH,CAFD,MAGK,IAAIS,YAAY,IAAIC,aAApB,EAAmC;IACpC,OAAOR,uBAAuB,CAACJ,SAAD,EAAYC,IAAZ,EAAkBC,KAAlB,CAA9B;EACH,CAFI,MAGA;IACD,OAAOH,uBAAuB,CAACC,SAAD,EAAYC,IAAZ,EAAkBC,KAAlB,CAA9B;EACH;AACJ;;AACD,MAAMY,WAAN,CAAkB;EACH,OAAJjB,IAAI,CAACtC,IAAD,EAAOwD,KAAP,EAAcf,SAAd,EAAyBgB,aAAzB,EAAwC;IAC/C,MAAMC,GAAG,GAAIjB,SAAS,KAAK,KAAf,GAAwB,CAAxB,GAA4B,CAAC,CAAzC;IACA,MAAMkB,OAAO,GAAGF,aAAa,GAAGA,aAAH,GAAmBV,iBAAhD;IACA,OAAO/C,IAAI,CAACsC,IAAL,CAAU,CAACsB,CAAD,EAAIC,CAAJ,KAAU;MACvB,IAAIC,KAAK,GAAGN,KAAK,CAACO,KAAN,CAAY,GAAZ,CAAZ;MACA,IAAIC,KAAK,GAAGJ,CAAZ;;MACA,KAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,MAAV,IAAoB,OAAOF,KAAP,KAAiB,WAArD,EAAkEC,CAAC,EAAnE,EAAuE;QACnED,KAAK,GAAGA,KAAK,CAACF,KAAK,CAACG,CAAD,CAAN,CAAb;MACH;;MACD,IAAIE,KAAK,GAAGN,CAAZ;;MACA,KAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,MAAV,IAAoB,OAAOC,KAAP,KAAiB,WAArD,EAAkEF,CAAC,EAAnE,EAAuE;QACnEE,KAAK,GAAGA,KAAK,CAACL,KAAK,CAACG,CAAD,CAAN,CAAb;MACH;;MACD,OAAON,OAAO,CAACS,IAAR,CAAa,IAAb,EAAmBV,GAAnB,EAAwBM,KAAxB,EAA+BG,KAA/B,CAAP;IACH,CAXM,CAAP;EAYH;;AAhBa;AAmBlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,4BAAT,CAAsCC,SAAtC,EAAiDC,MAAjD,EAAyDvE,IAAzD,EAA+DwE,QAA/D,EAAyE;EACrE,IAAIC,EAAJ,EAAQC,EAAR;EACA;AACJ;AACA;;;EACI,MAAMC,kBAAkB,GAAG,CAACF,EAAE,GAAGH,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,KAAK,CAAzC,GAA6C,KAAK,CAAlD,GAAsDA,SAAS,CAACM,QAAV,EAA5D,MAAsF,IAAtF,IAA8FH,EAAE,KAAK,KAAK,CAA1G,GAA8GA,EAA9G,GAAmH,EAA9I;EACA,MAAMI,qBAAqB,GAAG,CAACH,EAAE,GAAGH,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACK,QAAP,EAAtD,MAA6E,IAA7E,IAAqFF,EAAE,KAAK,KAAK,CAAjG,GAAqGA,EAArG,GAA0G,EAAxI;EACA,OAAOC,kBAAkB,CAACG,WAAnB,GAAiCC,QAAjC,CAA0CF,qBAAqB,CAACC,WAAtB,EAA1C,CAAP;AACH;;AACD,MAAME,WAAN,CAAkB;EACD,OAANtG,MAAM,CAACsB,IAAD,EAAOwD,KAAP,EAAce,MAAd,EAAsBU,YAAtB,EAAoC;IAC7C,MAAMvG,MAAM,GAAGuG,YAAY,GAAGA,YAAH,GAAkBZ,4BAA7C;IACA,OAAOrE,IAAI,CAACtB,MAAL,CAAawG,EAAD,IAAQ;MACvB;MACA;MACA,IAAIpB,KAAK,GAAGN,KAAK,CAACO,KAAN,CAAY,GAAZ,CAAZ;MACA,IAAIoB,IAAI,GAAGD,EAAX;;MACA,KAAK,IAAIjB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,MAAV,IAAoB,OAAOiB,IAAP,KAAgB,WAApD,EAAiElB,CAAC,EAAlE,EAAsE;QAClEkB,IAAI,GAAGA,IAAI,CAACrB,KAAK,CAACG,CAAD,CAAN,CAAX;MACH;;MACD,OAAOvF,MAAM,CAAC0F,IAAP,CAAY,IAAZ,EAAkBe,IAAlB,EAAwBZ,MAAxB,EAAgCvE,IAAhC,EAAsCwD,KAAtC,EAA6C0B,EAA7C,CAAP;IACH,CATM,CAAP;EAUH;;AAba;;AAgBlB,MAAME,UAAN,CAAiB;EACE,OAARC,QAAQ,CAACrF,IAAD,EAAO2B,IAAP,EAAaC,OAAb,EAAsB;IACjC,OAAO5B,IAAI,CAACsF,KAAL,CAAW1D,OAAO,IAAID,IAAI,GAAG,CAAX,CAAlB,EAAiCC,OAAO,GAAGD,IAA3C,CAAP;EACH;;AAHY;AAMjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAM4D,UAAU,GAAG,UAAU,GAAGC,OAAb,EAAsB;EACrC,IAAIC,SAAS,CAACvB,MAAV,GAAmB,CAAnB,IAAwB,OAAOuB,SAAS,CAAC,CAAD,CAAhB,KAAwB,QAApD,EAA8D;IAC1D,OAAO,KAAP;EACH;;EACD,IAAIA,SAAS,CAACvB,MAAV,GAAmB,CAAvB,EAA0B;IACtB,OAAOuB,SAAS,CAAC,CAAD,CAAhB;EACH;;EACD,MAAMC,MAAM,GAAGD,SAAS,CAAC,CAAD,CAAxB,CAPqC,CAQrC;;EACA,MAAME,IAAI,GAAGC,KAAK,CAACC,SAAN,CAAgBP,KAAhB,CAAsBlB,IAAtB,CAA2BqB,SAA3B,EAAsC,CAAtC,CAAb;EACA,IAAIK,GAAJ,EAASC,GAAT;EACAJ,IAAI,CAACK,OAAL,CAAcC,GAAD,IAAS;IAClB;IACA,IAAI,OAAOA,GAAP,KAAe,QAAf,IAA2BL,KAAK,CAACM,OAAN,CAAcD,GAAd,CAA/B,EAAmD;MAC/C;IACH;;IACDE,MAAM,CAACC,IAAP,CAAYH,GAAZ,EAAiBD,OAAjB,CAAyB,UAAUK,GAAV,EAAe;MACpCN,GAAG,GAAGL,MAAM,CAACW,GAAD,CAAZ,CADoC,CACjB;;MACnBP,GAAG,GAAGG,GAAG,CAACI,GAAD,CAAT,CAFoC,CAEpB;MAChB;;MACA,IAAIP,GAAG,KAAKJ,MAAZ,EAAoB;QAChB;QACA;AAChB;AACA;AACA;MACa,CAND,MAOK,IAAI,OAAOI,GAAP,KAAe,QAAf,IAA2BA,GAAG,KAAK,IAAvC,EAA6C;QAC9CJ,MAAM,CAACW,GAAD,CAAN,GAAcP,GAAd;QACA,OAF8C,CAG9C;MACH,CAJI,MAKA,IAAIF,KAAK,CAACM,OAAN,CAAcJ,GAAd,CAAJ,EAAwB;QACzBJ,MAAM,CAACW,GAAD,CAAN,GAAcrH,SAAS,CAAC8G,GAAD,CAAvB;QACA,OAFyB,CAGzB;MACH,CAJI,MAKA,IAAI,OAAOC,GAAP,KAAe,QAAf,IAA2BA,GAAG,KAAK,IAAnC,IAA2CH,KAAK,CAACM,OAAN,CAAcH,GAAd,CAA/C,EAAmE;QACpEL,MAAM,CAACW,GAAD,CAAN,GAAcd,UAAU,CAAC,EAAD,EAAKO,GAAL,CAAxB;QACA,OAFoE,CAGpE;MACH,CAJI,MAKA;QACDJ,MAAM,CAACW,GAAD,CAAN,GAAcd,UAAU,CAACQ,GAAD,EAAMD,GAAN,CAAxB;QACA;MACH;IACJ,CA9BD;EA+BH,CApCD;EAqCA,OAAOJ,MAAP;AACH,CAjDD;;AAkDA,MAAMY,QAAN,CAAe;EACX9G,WAAW,GAAG;IACV,KAAK+G,OAAL,GAAe,IAAItG,OAAJ,CAAY,CAACC,OAAD,EAAUsG,MAAV,KAAqB;MAC5C,KAAKtG,OAAL,GAAeA,OAAf;MACA,KAAKsG,MAAL,GAAcA,MAAd;IACH,CAHc,CAAf;EAIH;;AANU,C,CAQf;;;AACA,SAASC,iBAAT,CAA2BC,MAAM,GAAG,EAApC,EAAwCC,IAAxC,EAA8CC,YAA9C,EAA4D;EACxD,MAAMR,IAAI,GAAGO,IAAI,CAAC5C,KAAL,CAAW,GAAX,CAAb,CADwD,CAExD;;EACA,IAAI8C,KAAK,GAAGtB,UAAU,CAAC,EAAD,EAAKmB,MAAL,CAAtB;EACAN,IAAI,CAACJ,OAAL,CAAcc,CAAD,IAAO;IAChB,IAAID,KAAK,IAAI,OAAOA,KAAK,CAACC,CAAD,CAAZ,KAAoB,WAAjC,EAA8C;MAC1CD,KAAK,GAAGA,KAAK,CAACC,CAAD,CAAb;IACH;EACJ,CAJD;EAKA,OAAO,OAAOD,KAAP,KAAiB,WAAjB,GAA+BD,YAA/B,GAA8CC,KAArD;AACH;;AACD,SAASE,kBAAT,CAA4BC,KAA5B,EAAmCpF,OAAnC,EAA4C;EACxC;EACA,OAAOqF,IAAI,CAACC,KAAL,CAAWF,KAAK,GAAGpF,OAAnB,IAA8B,CAArC;AACH;;AAED,MAAMuF,eAAN,SAA8B5H,UAA9B,CAAyC;EACrCC,WAAW,CAACQ,IAAI,GAAG,EAAR,EAAY;IACnB;IACA,KAAKA,IAAL,GAAY,EAAZ;IACA,KAAKoH,iBAAL,GAAyB,EAAzB;IACA,KAAKC,QAAL,GAAgB,EAAhB;IACA,KAAKC,UAAL,GAAkB;MACdC,OAAO,EAAE,EADK;MAEdhG,WAAW,EAAE;IAFC,CAAlB;IAIA,KAAKiG,UAAL,GAAkB,EAAlB;IACA,KAAKC,aAAL,GAAqB,EAArB;IACA,KAAKzH,IAAL,GAAYA,IAAZ;EACH;;EACDD,IAAI,CAACC,IAAD,EAAO;IACP,KAAKA,IAAL,GAAYA,IAAZ;IACA,OAAO,MAAMD,IAAN,CAAWC,IAAX,CAAP;EACH;;EACDQ,OAAO,CAACC,OAAD,EAAU;IACb,KAAKiH,KAAL,CAAW,IAAX;IACA,KAAK1H,IAAL,CAAU2H,OAAV,CAAkBlH,OAAlB;IACA,OAAO,MAAMD,OAAN,CAAcC,OAAd,CAAP;EACH;;EACDE,MAAM,CAACF,OAAD,EAAU;IACZ,KAAKiH,KAAL,CAAW,IAAX;IACA,KAAK1H,IAAL,CAAU4H,IAAV,CAAenH,OAAf;IACA,OAAO,MAAME,MAAN,CAAaF,OAAb,CAAP;EACH;;EACDG,GAAG,CAACH,OAAD,EAAU;IACT,KAAKT,IAAL,CAAU4H,IAAV,CAAenH,OAAf;IACA,OAAO,MAAMG,GAAN,CAAUH,OAAV,CAAP;EACH;;EACDI,MAAM,CAACJ,OAAD,EAAU;IACZ,KAAKT,IAAL,GAAY,KAAKA,IAAL,CAAUtB,MAAV,CAAiBwG,EAAE,IAAIA,EAAE,KAAKzE,OAA9B,CAAZ;IACA,OAAO,MAAMI,MAAN,CAAaJ,OAAb,CAAP;EACH;;EACDM,MAAM,CAACN,OAAD,EAAUO,MAAV,EAAkB;IACpB,OAAO,IAAIf,OAAJ,CAAY,CAACC,OAAD,EAAUsG,MAAV,KAAqB;MACpC,KAAKqB,IAAL,CAAUpH,OAAV,EAAmBwB,IAAnB,CAAyB6F,KAAD,IAAW;QAC/BA,KAAK,GAAGvC,UAAU,CAACuC,KAAD,EAAQ9G,MAAR,CAAlB;QACA,MAAMD,MAAN,CAAa+G,KAAb,EAAoB9G,MAApB,EAA4BiB,IAA5B,CAAiC/B,OAAjC,EAA0C6H,KAA1C,CAAgDvB,MAAhD;MACH,CAHD,EAGGuB,KAHH,CAGSvB,MAHT;IAIH,CALM,CAAP;EAMH;;EACDqB,IAAI,CAACpH,OAAD,EAAU;IACV,MAAMqH,KAAK,GAAG,KAAK9H,IAAL,CAAU6H,IAAV,CAAe3C,EAAE,IAAIA,EAAE,KAAKzE,OAA5B,CAAd;;IACA,IAAIqH,KAAJ,EAAW;MACP,OAAO7H,OAAO,CAACC,OAAR,CAAgB4H,KAAhB,CAAP;IACH;;IACD,OAAO7H,OAAO,CAACuG,MAAR,CAAe,IAAIwB,KAAJ,CAAU,sCAAV,CAAf,CAAP;EACH;;EACDhG,WAAW,GAAG;IACV,MAAMhC,IAAI,GAAG,KAAKA,IAAL,CAAUsF,KAAV,CAAgB,CAAhB,CAAb;IACA,OAAOrF,OAAO,CAACC,OAAR,CAAgB,KAAK+H,WAAL,CAAiBjI,IAAjB,CAAhB,CAAP;EACH;;EACDkI,oBAAoB,GAAG;IACnB,IAAIlI,IAAI,GAAG,KAAKA,IAAL,CAAUsF,KAAV,CAAgB,CAAhB,CAAX;IACA,KAAK2C,WAAL,CAAiBjI,IAAjB;IACA,OAAOC,OAAO,CAACC,OAAR,CAAgB,KAAKkH,iBAArB,CAAP;EACH;;EACDe,MAAM,GAAG;IACL,MAAMnI,IAAI,GAAG,KAAKA,IAAL,CAAUsF,KAAV,CAAgB,CAAhB,CAAb;IACA,OAAOrF,OAAO,CAACC,OAAR,CAAgBF,IAAhB,CAAP;EACH;;EACD0H,KAAK,CAACU,MAAM,GAAG,KAAV,EAAiB;IAClB,IAAIA,MAAJ,EAAY;MACR,KAAKd,UAAL,GAAkB;QACdC,OAAO,EAAE,EADK;QAEdhG,WAAW,EAAE;MAFC,CAAlB;MAIA,KAAK8F,QAAL,GAAgB,EAAhB;MACA,KAAKG,UAAL,CAAgB,MAAhB,IAA0B,CAA1B;IACH,CAPD,MAQK;MACD,KAAKlG,SAAL,CAAe,EAAf,EAAmB,IAAnB,EAAyB,KAAzB;MACA,KAAKH,OAAL,CAAa,EAAb,EAAiB,KAAjB;MACA,KAAKU,OAAL,CAAa,CAAb;IACH;EACJ;;EACDX,KAAK,GAAG;IACJ,KAAKlB,IAAL,GAAY,EAAZ;IACA,OAAO,MAAMkB,KAAN,EAAP;EACH;;EACDmH,KAAK,GAAG;IACJ,OAAO,KAAKjB,iBAAL,CAAuBlD,MAA9B;EACH;;EACDoE,UAAU,CAACC,GAAD,EAAMC,UAAN,EAAkB;IACxB,IAAIA,UAAJ,EACI,KAAKf,aAAL,CAAmBG,IAAnB,CAAwBW,GAAxB,EADJ,KAGI,KAAKd,aAAL,GAAqB,KAAKA,aAAL,CAAmB/I,MAAnB,CAA2BuF,CAAD,IAAOA,CAAC,KAAKsE,GAAvC,CAArB;EACP;;EACDE,cAAc,CAACC,OAAD,EAAU;IACpB,OAAOrK,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;MAChD,IAAIqK,OAAJ,EAAa;QACT,MAAMC,QAAQ,GAAG,MAAM,KAAKR,MAAL,EAAvB;QACA,KAAKV,aAAL,GAAqBkB,QAAQ,CAACrD,KAAT,CAAe,CAAf,CAArB;MACH,CAHD,MAKI,KAAKmC,aAAL,GAAqB,EAArB;IACP,CAPe,CAAhB;EAQH;;EACDmB,gBAAgB,GAAG;IACf,OAAO,KAAKnB,aAAZ;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACItG,OAAO,CAACC,IAAD,EAAOC,MAAM,GAAG,IAAhB,EAAsB;IACzB,IAAID,IAAI,KAAK,IAAb,EAAmB;MACfA,IAAI,CAAC4E,OAAL,CAAcvE,SAAD,IAAe;QACxB,IAAI,CAACA,SAAS,CAAC,OAAD,CAAV,IAAuB,OAAOA,SAAS,CAAC,WAAD,CAAhB,KAAkC,WAA7D,EAA0E;UACtE,MAAM,IAAIuG,KAAJ,CAAU,wCAAV,CAAN;QACH;MACJ,CAJD;MAKA,KAAKX,QAAL,GAAgBjG,IAAhB;IACH;;IACD,MAAMD,OAAN,CAAcC,IAAd,EAAoBC,MAApB;IACA,OAAO,IAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIC,SAAS,CAACF,IAAD,EAAOG,WAAW,GAAG,IAArB,EAA2BF,MAAM,GAAG,IAApC,EAA0C;IAC/C,IAAID,IAAI,IAAIA,IAAI,CAAC8C,MAAL,GAAc,CAA1B,EAA6B;MACzB9C,IAAI,CAAC4E,OAAL,CAAcvE,SAAD,IAAe;QACxB,KAAKD,SAAL,CAAeC,SAAf,EAA0BF,WAA1B,EAAuC,KAAvC;MACH,CAFD;IAGH,CAJD,MAKK;MACD,KAAK+F,UAAL,GAAkB;QACdC,OAAO,EAAE,EADK;QAEdhG,WAAW,EAAE;MAFC,CAAlB;IAIH;;IACD,KAAK+F,UAAL,CAAgB/F,WAAhB,GAA8BA,WAA9B;IACA,KAAKiG,UAAL,CAAgB,MAAhB,IAA0B,CAA1B;IACA,MAAMlG,SAAN,CAAgBF,IAAhB,EAAsBG,WAAtB,EAAmCF,MAAnC;IACA,OAAO,IAAP;EACH;;EACDG,SAAS,CAACC,SAAD,EAAYF,WAAW,GAAG,IAA1B,EAAgCF,MAAM,GAAG,IAAzC,EAA+C;IACpD,IAAI,CAACI,SAAS,CAAC,OAAD,CAAV,IAAuB,OAAOA,SAAS,CAAC,QAAD,CAAhB,KAA+B,WAA1D,EAAuE;MACnE,MAAM,IAAIuG,KAAJ,CAAU,0CAAV,CAAN;IACH;;IACD,IAAIF,KAAK,GAAG,KAAZ;IACA,KAAKR,UAAL,CAAgBC,OAAhB,CAAwBvB,OAAxB,CAAgC,CAAC6C,gBAAD,EAAmB7B,KAAnB,KAA6B;MACzD,IAAI6B,gBAAgB,CAAC,OAAD,CAAhB,KAA8BpH,SAAS,CAAC,OAAD,CAA3C,EAAsD;QAClD,KAAK6F,UAAL,CAAgBC,OAAhB,CAAwBP,KAAxB,IAAiCvF,SAAjC;QACAqG,KAAK,GAAG,IAAR;MACH;IACJ,CALD;;IAMA,IAAI,CAACA,KAAL,EAAY;MACR,KAAKR,UAAL,CAAgBC,OAAhB,CAAwBK,IAAxB,CAA6BnG,SAA7B;IACH;;IACD,KAAK6F,UAAL,CAAgB/F,WAAhB,GAA8BA,WAA9B;IACA,MAAMC,SAAN,CAAgBC,SAAhB,EAA2BF,WAA3B,EAAwCF,MAAxC;IACA,OAAO,IAAP;EACH;;EACDK,SAAS,CAACC,IAAD,EAAOC,OAAP,EAAgBP,MAAM,GAAG,IAAzB,EAA+B;IACpC,KAAKmG,UAAL,CAAgB,MAAhB,IAA0B7F,IAA1B;IACA,KAAK6F,UAAL,CAAgB,SAAhB,IAA6B5F,OAA7B;IACA,MAAMF,SAAN,CAAgBC,IAAhB,EAAsBC,OAAtB,EAA+BP,MAA/B;IACA,OAAO,IAAP;EACH;;EACDQ,OAAO,CAACF,IAAD,EAAON,MAAM,GAAG,IAAhB,EAAsB;IACzB,KAAKmG,UAAL,CAAgB,MAAhB,IAA0B7F,IAA1B;IACA,MAAME,OAAN,CAAcF,IAAd,EAAoBN,MAApB;IACA,OAAO,IAAP;EACH;;EACDkB,OAAO,GAAG;IACN,OAAO,KAAK8E,QAAZ;EACH;;EACDhF,SAAS,GAAG;IACR,OAAO,KAAKiF,UAAZ;EACH;;EACDlF,SAAS,GAAG;IACR,OAAO,KAAKoF,UAAZ;EACH;;EACDS,WAAW,CAACjI,IAAD,EAAO;IACdA,IAAI,GAAG,KAAKtB,MAAL,CAAYsB,IAAZ,CAAP;IACAA,IAAI,GAAG,KAAKsC,IAAL,CAAUtC,IAAV,CAAP;IACA,KAAKoH,iBAAL,GAAyBpH,IAAI,CAACsF,KAAL,CAAW,CAAX,CAAzB;IACA,OAAO,KAAKD,QAAL,CAAcrF,IAAd,CAAP;EACH;;EACDsC,IAAI,CAACtC,IAAD,EAAO;IACP,IAAI,KAAKqH,QAAT,EAAmB;MACf,KAAKA,QAAL,CAAcrB,OAAd,CAAuBvE,SAAD,IAAe;QACjCzB,IAAI,GAAGuD,WAAW,CACbjB,IADE,CACGtC,IADH,EACSyB,SAAS,CAAC,OAAD,CADlB,EAC6BA,SAAS,CAAC,WAAD,CADtC,EACqDA,SAAS,CAAC,SAAD,CAD9D,CAAP;MAEH,CAHD;IAIH;;IACD,OAAOzB,IAAP;EACH,CA/MoC,CAgNrC;;;EACAtB,MAAM,CAACsB,IAAD,EAAO;IACT,IAAI,KAAKsH,UAAL,CAAgBC,OAApB,EAA6B;MACzB,IAAI,KAAKD,UAAL,CAAgB/F,WAApB,EAAiC;QAC7B,KAAK+F,UAAL,CAAgBC,OAAhB,CAAwBvB,OAAxB,CAAiCvE,SAAD,IAAe;UAC3C,IAAIA,SAAS,CAAC,QAAD,CAAT,CAAoByC,MAApB,GAA6B,CAAjC,EAAoC;YAChClE,IAAI,GAAGgF,WAAW,CACbtG,MADE,CACKsB,IADL,EACWyB,SAAS,CAAC,OAAD,CADpB,EAC+BA,SAAS,CAAC,QAAD,CADxC,EACoDA,SAAS,CAAC,QAAD,CAD7D,CAAP;UAEH;QACJ,CALD;MAMH,CAPD,MAQK;QACD,IAAIqH,UAAU,GAAG,EAAjB;QACA,KAAKxB,UAAL,CAAgBC,OAAhB,CAAwBvB,OAAxB,CAAiCvE,SAAD,IAAe;UAC3C,IAAIA,SAAS,CAAC,QAAD,CAAT,CAAoByC,MAApB,GAA6B,CAAjC,EAAoC;YAChC4E,UAAU,GAAGA,UAAU,CAACC,MAAX,CAAkB/D,WAAW,CACrCtG,MAD0B,CACnBsB,IADmB,EACbyB,SAAS,CAAC,OAAD,CADI,EACOA,SAAS,CAAC,QAAD,CADhB,EAC4BA,SAAS,CAAC,QAAD,CADrC,CAAlB,CAAb;UAEH;QACJ,CALD,EAFC,CAQD;;QACAzB,IAAI,GAAG8I,UAAU,CAACpK,MAAX,CAAkB,CAACsK,IAAD,EAAOC,GAAP,EAAYC,GAAZ,KAAoB;UACzC,OAAOA,GAAG,CAACC,OAAJ,CAAYH,IAAZ,MAAsBC,GAA7B;QACH,CAFM,CAAP;MAGH;IACJ;;IACD,OAAOjJ,IAAP;EACH;;EACDqF,QAAQ,CAACrF,IAAD,EAAO;IACX,IAAI,KAAKwH,UAAL,IAAmB,KAAKA,UAAL,CAAgB,MAAhB,CAAnB,IAA8C,KAAKA,UAAL,CAAgB,SAAhB,CAAlD,EAA8E;MAC1ExH,IAAI,GAAGoF,UAAU,CAACC,QAAX,CAAoBrF,IAApB,EAA0B,KAAKwH,UAAL,CAAgB,MAAhB,CAA1B,EAAmD,KAAKA,UAAL,CAAgB,SAAhB,CAAnD,CAAP;IACH;;IACD,OAAOxH,IAAP;EACH;;AAhPoC;;AAmPzC,SAASoJ,YAAT,CAAsBC,KAAtB,EAA6B;EAAE,OAAOA,KAAP;AAAe;;AAC9C,MAAMC,IAAN,CAAW;EACP9J,WAAW,CAAC6J,KAAD,EAAQd,GAAR,EAAagB,MAAb,EAAqBC,OAArB,EAA8B;IACrC,KAAKH,KAAL,GAAaA,KAAb;IACA,KAAKd,GAAL,GAAWA,GAAX;IACA,KAAKgB,MAAL,GAAcA,MAAd;IACA,KAAKC,OAAL,GAAeA,OAAf;IACA,KAAKC,QAAL,GAAgB,EAAhB;IACA,KAAKA,QAAL,GAAgBJ,KAAhB;EACH;;EACDK,SAAS,GAAG;IACR,OAAO,KAAKH,MAAZ;EACH;;EACDI,MAAM,GAAG;IACL,OAAO,KAAKpB,GAAZ;EACH;;EACDqB,QAAQ,GAAG;IACP,MAAMC,KAAK,GAAG,KAAKN,MAAL,CAAYO,uBAAZ,cAAiDC,QAA/D;IACA,MAAMC,OAAO,GAAGH,KAAK,GAAG,KAAKN,MAAL,CAAYO,uBAAZ,EAAH,GAA2CR,IAAI,CAACW,OAArE;IACA,OAAOD,OAAO,CAAC5F,IAAR,CAAa,IAAb,EAAmB,KAAKiF,KAAxB,EAA+B,KAAKd,GAAL,CAAS2B,OAAT,EAA/B,EAAmD,IAAnD,CAAP;EACH;;EACDC,QAAQ,CAACd,KAAD,EAAQ;IACZ,KAAKI,QAAL,GAAgBJ,KAAhB;EACH;;EACDe,KAAK,GAAG;IACJ,OAAO,KAAKV,SAAL,GAAiBW,EAAxB;EACH;;EACDC,QAAQ,GAAG;IACP,OAAO,KAAKZ,SAAL,GAAiBa,KAAxB;EACH;;EACDC,UAAU,GAAG;IACT,IAAI/F,EAAJ,EAAQC,EAAR;;IACA,IAAI,KAAKiF,MAAL,GAAc3C,KAAd,KAAwB,CAAC,CAA7B,EAAgC;MAC5B,OAAO,CAACvC,EAAE,GAAG,KAAKiF,SAAL,GAAiBe,SAAvB,MAAsC,IAAtC,IAA8ChG,EAAE,KAAK,KAAK,CAA1D,GAA8DA,EAA9D,GAAmE,KAA1E;IACH,CAFD,MAGK;MACD,OAAO,CAACC,EAAE,GAAG,KAAKgF,SAAL,GAAiBc,UAAvB,MAAuC,IAAvC,IAA+C9F,EAAE,KAAK,KAAK,CAA3D,GAA+DA,EAA/D,GAAoE,KAA3E;IACH;EACJ;;EACDgG,UAAU,GAAG;IACT;IACA;IACA,KAAKP,QAAL,CAAc,KAAKd,KAAnB;EACH;;AA1CM;;AA4CXC,IAAI,CAACW,OAAL,GAAeb,YAAf;;AAEA,MAAMuB,GAAN,CAAU;EACNnL,WAAW,CAACwH,KAAD,EAAQhH,IAAR,EAAc4K,QAAd,EAAwB;IAC/B,KAAK5D,KAAL,GAAaA,KAAb;IACA,KAAKhH,IAAL,GAAYA,IAAZ;IACA,KAAK4K,QAAL,GAAgBA,QAAhB;IACA,KAAKpC,UAAL,GAAkB,KAAlB;IACA,KAAKqC,WAAL,GAAmB,KAAnB;IACA,KAAKC,UAAL,GAAkB,KAAlB;IACA,KAAKC,KAAL,GAAa,EAAb;IACA,KAAKC,OAAL;EACH;;EACDC,OAAO,CAAC1B,MAAD,EAAS;IACZ,MAAM2B,OAAO,GAAG,KAAKH,KAAL,CAAWlD,IAAX,CAAgB3C,EAAE,IAAIA,EAAE,CAACwE,SAAH,OAAmBH,MAAzC,CAAhB;IACA,IAAI,CAAC2B,OAAL,EACI,MAAM,IAAIlD,KAAJ,CAAU,mCAAV,CAAN;IACJ,OAAOkD,OAAP;EACH;;EACDC,QAAQ,GAAG;IACP,OAAO,KAAKJ,KAAZ;EACH;;EACDb,OAAO,GAAG;IACN,OAAO,KAAKlK,IAAZ;EACH;;EACDoL,aAAa,GAAG;IACZ,OAAO,KAAK5C,UAAZ;EACH;;EACD6C,aAAa,GAAG;IACZ,OAAO,KAAKP,UAAZ;EACH;;EACDQ,UAAU,GAAG;IACT,MAAMtK,MAAM,GAAGmF,MAAM,CAACoF,MAAP,CAAc,EAAd,EAAkB,KAAKvL,IAAvB,CAAf;IACA,KAAKmL,QAAL,GAAgBnF,OAAhB,CAAyBwF,IAAD,IAAUxK,MAAM,CAACwK,IAAI,CAAC9B,SAAL,GAAiBW,EAAlB,CAAN,GAA8BmB,IAAI,CAAC/B,QAArE;IACA,OAAOzI,MAAP;EACH;;EACDyK,OAAO,CAACzL,IAAD,EAAO;IACV,KAAKA,IAAL,GAAYA,IAAZ;IACA,KAAKgL,OAAL;EACH;;EACDA,OAAO,GAAG;IACN,KAAKD,KAAL,GAAa,EAAb;;IACA,KAAKH,QAAL,CAAcc,UAAd,GAA2B1F,OAA3B,CAAoCuD,MAAD,IAAY;MAC3C,MAAMiC,IAAI,GAAG,KAAKG,UAAL,CAAgBpC,MAAhB,CAAb;MACA,KAAKwB,KAAL,CAAWnD,IAAX,CAAgB4D,IAAhB;IACH,CAHD;EAIH;;EACDG,UAAU,CAACpC,MAAD,EAAS;IACf,MAAMqC,QAAQ,GAAGrC,MAAM,CAACsC,QAAP,CAAgBjF,YAAhB,GAA+B2C,MAAM,CAACsC,QAAP,CAAgBjF,YAA/C,GAA8D,EAA/E;IACA,MAAMyC,KAAK,GAAG,OAAO,KAAKrJ,IAAL,CAAUuJ,MAAM,CAACc,EAAjB,CAAP,KAAgC,WAAhC,GAA8CuB,QAA9C,GAAyD,KAAK5L,IAAL,CAAUuJ,MAAM,CAACc,EAAjB,CAAvE;IACA,OAAO,IAAIf,IAAJ,CAASD,KAAT,EAAgB,IAAhB,EAAsBE,MAAtB,EAA8B,KAAKqB,QAAnC,CAAP;EACH;;AAjDK;;AAoDV,IAAIkB,iBAAJ;;AACA,CAAC,UAAUA,iBAAV,EAA6B;EAC1BA,iBAAiB,CAAC,QAAD,CAAjB,GAA8B,QAA9B;EACAA,iBAAiB,CAAC,OAAD,CAAjB,GAA6B,OAA7B;AACH,CAHD,EAGGA,iBAAiB,KAAKA,iBAAiB,GAAG,EAAzB,CAHpB;;AAIA,IAAIC,WAAJ;;AACA,CAAC,UAAUA,WAAV,EAAuB;EACpBA,WAAW,CAAC,MAAD,CAAX,GAAsB,MAAtB;EACAA,WAAW,CAAC,MAAD,CAAX,GAAsB,MAAtB;EACAA,WAAW,CAAC,QAAD,CAAX,GAAwB,QAAxB;AACH,CAJD,EAIGA,WAAW,KAAKA,WAAW,GAAG,EAAnB,CAJd;;AAMA,MAAMC,MAAN,CAAa;EACTxM,WAAW,CAAC6K,EAAD,EAAKwB,QAAL,EAAerC,OAAf,EAAwB;IAC/B,KAAKa,EAAL,GAAUA,EAAV;IACA,KAAKwB,QAAL,GAAgBA,QAAhB;IACA,KAAKrC,OAAL,GAAeA,OAAf;IACA,KAAKe,KAAL,GAAa,EAAb;IACA,KAAK0B,IAAL,GAAY,KAAZ;IACA,KAAKC,IAAL,GAAYH,WAAW,CAACI,IAAxB;IACA,KAAKC,KAAL,GAAa,EAAb;IACA,KAAKC,KAAL,GAAa,EAAb;IACA,KAAKC,UAAL,GAAkB,IAAlB;IACA,KAAK9B,UAAL,GAAkB,IAAlB;IACA,KAAKC,SAAL,GAAiB,IAAjB;IACA,KAAK8B,YAAL,GAAoB,KAApB;IACA,KAAKC,aAAL,GAAqB,KAArB;IACA,KAAKC,oBAAL,GAA4BC,SAA5B;IACA,KAAKC,MAAL,GAAc;MAAET,IAAI,EAAE,EAAR;MAAYU,MAAM,EAAE,EAApB;MAAwBC,SAAS,EAAE;IAAnC,CAAd;IACA,KAAKnO,MAAL,GAAc;MAAEwN,IAAI,EAAE,EAAR;MAAYU,MAAM,EAAE,EAApB;MAAwBC,SAAS,EAAE;IAAnC,CAAd;IACA,KAAKC,eAAL,GAAuB,IAAvB;IACA,KAAK9B,OAAL;EACH;;EACD+B,0BAA0B,GAAG;IACzB,OAAO,KAAKC,uBAAZ;EACH;;EACDC,kBAAkB,GAAG;IACjB,OAAO,KAAKC,eAAZ;EACH;;EACDpD,uBAAuB,GAAG;IACtB,OAAO,KAAKqD,oBAAZ;EACH;;EACDC,iBAAiB,GAAG;IAChB,OAAO,KAAKC,cAAZ;EACH;;EACDC,SAAS,GAAG;IACR,OAAO,KAAKX,MAAL,IAAe,KAAKA,MAAL,CAAYC,MAAlC;EACH;;EACDW,aAAa,GAAG;IACZ,OAAO,KAAK7O,MAAL,IAAe,KAAKA,MAAL,CAAYwN,IAAlC;EACH;;EACDsB,eAAe,GAAG;IACd,OAAO,KAAK9O,MAAL,IAAe,KAAKA,MAAL,CAAYkO,MAAlC;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACIa,aAAa,CAACpH,GAAD,EAAMqH,UAAU,GAAG,EAAnB,EAAuB;IAChC,IAAI,OAAO,KAAK7B,QAAL,CAAcxF,GAAd,CAAP,KAA8BqG,SAAlC,EAA6C;MACzC,KAAK,MAAM5F,CAAX,IAAgB4G,UAAhB,EAA4B;QACxB,IAAI,OAAO,KAAK7B,QAAL,CAAc/E,CAAd,CAAP,KAA4B4F,SAAhC,EAA2C;UACvC,OAAO,KAAKb,QAAL,CAAc/E,CAAd,CAAP;QACH;MACJ;;MACD,OAAO4F,SAAP;IACH,CAPD,MAQK;MACD,OAAO,KAAKb,QAAL,CAAcxF,GAAd,CAAP;IACH;EACJ;;EACD2E,OAAO,GAAG;IACN,IAAIvG,EAAJ,EAAQC,EAAR,EAAYiJ,EAAZ,EAAgBC,EAAhB,EAAoBC,EAApB,EAAwBC,EAAxB,EAA4BC,EAA5B,EAAgCC,EAAhC,EAAoCC,EAApC,EAAwCC,EAAxC,EAA4CC,EAA5C,EAAgDC,EAAhD,EAAoDC,EAApD,CADM,CAEN;;;IACA,KAAKC,WAAL,GAAmB,KAAKb,aAAL,CAAmB,aAAnB,CAAnB;IACA,KAAKlD,KAAL,GAAa,CAAC9F,EAAE,GAAG,KAAKgJ,aAAL,CAAmB,OAAnB,CAAN,MAAuC,IAAvC,IAA+ChJ,EAAE,KAAK,KAAK,CAA3D,GAA+DA,EAA/D,GAAoE,KAAK8F,KAAtF;IACA,KAAK6B,KAAL,GAAa,CAAC1H,EAAE,GAAG,KAAK+I,aAAL,CAAmB,OAAnB,CAAN,MAAuC,IAAvC,IAA+C/I,EAAE,KAAK,KAAK,CAA3D,GAA+DA,EAA/D,GAAoE,KAAK0H,KAAtF;IACA,KAAKC,KAAL,GAAa,CAACsB,EAAE,GAAG,KAAKF,aAAL,CAAmB,OAAnB,CAAN,MAAuC,IAAvC,IAA+CE,EAAE,KAAK,KAAK,CAA3D,GAA+DA,EAA/D,GAAoE,KAAKtB,KAAtF;IACA,KAAKJ,IAAL,GAAY,CAAC2B,EAAE,GAAG,KAAKH,aAAL,CAAmB,MAAnB,CAAN,MAAsC,IAAtC,IAA8CG,EAAE,KAAK,KAAK,CAA1D,GAA8DA,EAA9D,GAAmE,KAAK3B,IAApF;IACA,KAAKC,IAAL,GAAY,CAAC2B,EAAE,GAAG,KAAKJ,aAAL,CAAmB,MAAnB,CAAN,MAAsC,IAAtC,IAA8CI,EAAE,KAAK,KAAK,CAA1D,GAA8DA,EAA9D,GAAmE,KAAKU,aAAL,EAA/E;IACA,KAAK5B,MAAL,GAAc,CAACmB,EAAE,GAAG,KAAKL,aAAL,CAAmB,QAAnB,CAAN,MAAwC,IAAxC,IAAgDK,EAAE,KAAK,KAAK,CAA5D,GAAgEA,EAAhE,GAAqE,KAAKnB,MAAxF;IACA,KAAKjO,MAAL,GAAc,CAACqP,EAAE,GAAG,KAAKN,aAAL,CAAmB,QAAnB,CAAN,MAAwC,IAAxC,IAAgDM,EAAE,KAAK,KAAK,CAA5D,GAAgEA,EAAhE,GAAqE,KAAKrP,MAAxF;IACA,KAAKoO,eAAL,GAAuB,CAACkB,EAAE,GAAG,KAAKP,aAAL,CAAmB,iBAAnB,CAAN,MAAiD,IAAjD,IAAyDO,EAAE,KAAK,KAAK,CAArE,GAAyEA,EAAzE,GAA8E,KAAKlB,eAA1G;IACA,KAAKP,YAAL,GAAoB,KAAK7N,MAAL,KAAgBgO,SAAhB,IAA6B,CAAC,CAAC,KAAKhO,MAAxD;IACA,KAAK4N,UAAL,GAAkB,CAAC2B,EAAE,GAAG,KAAKR,aAAL,CAAmB,YAAnB,EAAiC,CAAC,MAAD,CAAjC,CAAN,MAAsD,IAAtD,IAA8DQ,EAAE,KAAK,KAAK,CAA1E,GAA8EA,EAA9E,GAAmF,KAAK3B,UAA1G;IACA,KAAK9B,UAAL,GAAkB,CAAC0D,EAAE,GAAG,KAAKT,aAAL,CAAmB,YAAnB,EAAiC,CAAC,UAAD,CAAjC,CAAN,MAA0D,IAA1D,IAAkES,EAAE,KAAK,KAAK,CAA9E,GAAkFA,EAAlF,GAAuF,KAAK1D,UAA9G;IACA,KAAKC,SAAL,GAAiB,CAAC0D,EAAE,GAAG,KAAKV,aAAL,CAAmB,WAAnB,CAAN,MAA2C,IAA3C,IAAmDU,EAAE,KAAK,KAAK,CAA/D,GAAmEA,EAAnE,GAAwE,KAAK1D,SAA9F;IACA,KAAKgC,oBAAL,GAA4B,CAAC2B,EAAE,GAAG,KAAKX,aAAL,CAAmB,eAAnB,CAAN,MAA+C,IAA/C,IAAuDW,EAAE,KAAK,KAAK,CAAnE,GAAuEA,EAAvE,GAA4E,KAAK3B,oBAA7G;IACA,KAAKD,aAAL,GAAqB,CAAC6B,EAAE,GAAG,KAAK5B,oBAAX,MAAqC,IAArC,IAA6C4B,EAAE,KAAK,KAAK,CAAzD,GAA6DA,EAA7D,GAAkE,KAAK7B,aAA5F;IACA,KAAKU,eAAL,GAAuB,KAAKO,aAAL,CAAmB,iBAAnB,CAAvB;IACA,KAAKN,oBAAL,GAA4B,KAAKM,aAAL,CAAmB,sBAAnB,CAA5B;IACA,KAAKJ,cAAL,GAAsB,KAAKI,aAAL,CAAmB,gBAAnB,CAAtB;IACA,KAAKT,uBAAL,GAA+B,KAAKS,aAAL,CAAmB,yBAAnB,CAA/B;EACH;;EACDc,aAAa,GAAG;IACZ;IACA,OAAOxC,WAAW,CAACI,IAAnB;EACH;;AAxFQ;;AA2Fb,MAAMqC,OAAN,CAAc;EACVhP,WAAW,CAACQ,IAAI,GAAG,EAAR,EAAYyO,cAAZ,EAA4B;IACnC,KAAKA,cAAL,GAAsBA,cAAtB;IACA,KAAKzO,IAAL,GAAY,EAAZ;IACA,KAAK0O,OAAL,GAAe,EAAf;IACA,KAAKC,IAAL,GAAY,EAAZ;IACA,KAAKC,UAAL,GAAkB,EAAlB;IACA,KAAKC,aAAL,CAAmBJ,cAAnB;IACA,KAAKhD,OAAL,CAAazL,IAAb;IACA,KAAK8O,YAAL;EACH;;EACDrD,OAAO,CAACzL,IAAD,EAAO+O,YAAY,GAAG,EAAtB,EAA0B;IAC7B,MAAMJ,IAAI,GAAG3O,IAAI,CAAClB,GAAL,CAAS,CAACoG,EAAD,EAAK8B,KAAL,KAAe;MACjC,MAAMuB,GAAG,GAAG,IAAIoC,GAAJ,CAAQ3D,KAAR,EAAe9B,EAAf,EAAmB,IAAnB,CAAZ;MACAqD,GAAG,CAACC,UAAJ,GAAiBuG,YAAY,CAAC5F,OAAb,CAAqBjE,EAArB,IAA2B,CAAC,CAA7C;MACA,OAAOqD,GAAP;IACH,CAJY,CAAb;IAKA,KAAKvI,IAAL,GAAY2O,IAAZ;IACA,KAAKK,UAAL;EACH;;EACDtD,UAAU,GAAG;IACT,OAAO,KAAKgD,OAAZ;EACH;;EACDO,cAAc,GAAG;IACb,IAAI,CAAC,KAAKC,WAAV,EAAuB;MACnBC,OAAO,CAACC,IAAR,CAAa,wBAAb;MACA,MAAM,IAAIpH,KAAJ,CAAU,wBAAV,CAAN;IACH;;IACD,OAAO,KAAKkH,WAAZ;EACH;;EACDG,cAAc,GAAG;IACb,IAAI,CAAC,KAAKC,WAAV,EAAuB;MACnBH,OAAO,CAACC,IAAR,CAAa,wBAAb;MACA,MAAM,IAAIpH,KAAJ,CAAU,wBAAV,CAAN;IACH;;IACD,OAAO,KAAKsH,WAAZ;EACH;;EACDC,OAAO,GAAG;IACN,IAAI9K,EAAJ;;IACA,OAAO,CAACA,EAAE,GAAG,KAAKkK,IAAX,MAAqB,IAArB,IAA6BlK,EAAE,KAAK,KAAK,CAAzC,GAA6CA,EAA7C,GAAkD,EAAzD;EACH;;EACD+K,WAAW,GAAG;IACV,OAAO,KAAKb,IAAL,CAAU,CAAV,CAAP;EACH;;EACDc,UAAU,GAAG;IACT,OAAO,KAAKd,IAAL,CAAU,KAAKA,IAAL,CAAUzK,MAAV,GAAmB,CAA7B,CAAP;EACH;;EACDwL,aAAa,CAAC1P,IAAD,EAAO;IAChB,MAAMuI,GAAG,GAAG,KAAKoG,IAAL,CAAU9G,IAAV,CAAgBU,GAAD,IAASA,GAAG,CAAC2B,OAAJ,OAAkBlK,IAA1C,CAAZ;;IACA,IAAI,CAACuI,GAAL,EAAU;MACN4G,OAAO,CAACC,IAAR,CAAa,oBAAb,EAAmCpP,IAAnC;MACA,MAAM,IAAIgI,KAAJ,CAAU,eAAV,CAAN;IACH;;IACD,OAAOO,GAAP;EACH;;EACDoH,WAAW,GAAG;IACV,KAAKhB,IAAL,CAAU3I,OAAV,CAAmBuC,GAAD,IAAS;MACvBA,GAAG,CAACC,UAAJ,GAAiB,KAAjB;IACH,CAFD,EADU,CAIV;;IACA,KAAK8G,WAAL,GAAmB5C,SAAnB;EACH;;EACDkD,cAAc,GAAG;IACb,KAAKjB,IAAL,CAAU3I,OAAV,CAAmBuC,GAAD,IAAS;MACvBA,GAAG,CAACuC,UAAJ,GAAiB,KAAjB;IACH,CAFD,EADa,CAIb;;IACA,KAAKoE,WAAL,GAAmBxC,SAAnB;EACH;;EACDmD,SAAS,CAACtH,GAAD,EAAM;IACX,MAAMuH,kBAAkB,GAAGvH,GAAG,CAACC,UAA/B;IACA,KAAKmH,WAAL;IACApH,GAAG,CAACC,UAAJ,GAAiB,CAACsH,kBAAlB;IACA,KAAKR,WAAL,GAAmB/G,GAAnB,CAJW,CAKX;EACH;;EACDwH,iBAAiB,CAACxH,GAAD,EAAM;IACnBA,GAAG,CAACC,UAAJ,GAAiB,CAACD,GAAG,CAACC,UAAtB;IACA,KAAK8G,WAAL,GAAmB/G,GAAnB;IACA,OAAO,KAAK+G,WAAZ;EACH;;EACDU,SAAS,CAACzH,GAAD,EAAM;IACX,IAAI9D,EAAJ;;IACA,MAAMwL,kBAAkB,GAAG1H,GAAG,CAACuC,UAA/B;IACA,KAAK8E,cAAL;;IACA,IAAIrH,GAAG,CAACvB,KAAJ,MAAe,CAACvC,EAAE,GAAG,KAAKyK,WAAX,MAA4B,IAA5B,IAAoCzK,EAAE,KAAK,KAAK,CAAhD,GAAoD,KAAK,CAAzD,GAA6DA,EAAE,CAACuC,KAA/E,CAAJ,EAA2F;MACvF,KAAKkI,WAAL,GAAmBxC,SAAnB;IACH;;IACDnE,GAAG,CAACuC,UAAJ,GAAiB,CAACmF,kBAAlB;IACA,KAAKf,WAAL,GAAmB3G,GAAnB;IACA,OAAO,KAAK2G,WAAZ;EACH;;EACDgB,iBAAiB,GAAG;IAChB,IAAI,KAAKvB,IAAL,CAAUzK,MAAV,GAAmB,CAAvB,EAA0B;MACtB,IAAI8C,KAAK,GAAG,KAAKsI,WAAL,GAAmB,KAAKA,WAAL,CAAiBtI,KAApC,GAA4C,CAAxD;;MACA,IAAIA,KAAK,GAAG,KAAK2H,IAAL,CAAUzK,MAAV,GAAmB,CAA/B,EAAkC;QAC9B8C,KAAK,GAAG,KAAK2H,IAAL,CAAUzK,MAAV,GAAmB,CAA3B;MACH;;MACD,KAAK2L,SAAL,CAAe,KAAKlB,IAAL,CAAU3H,KAAV,CAAf;MACA,OAAO,KAAKqI,cAAL,EAAP;IACH;;IACD,MAAM,IAAIrH,KAAJ,CAAU,yCAAV,CAAN;EACH;;EACDmI,cAAc,GAAG;IACb,IAAI,KAAKxB,IAAL,CAAUzK,MAAV,GAAmB,CAAvB,EAA0B;MACtB,KAAK2L,SAAL,CAAe,KAAKlB,IAAL,CAAU,CAAV,CAAf;MACA,OAAO,KAAKU,cAAL,EAAP;IACH;;IACD,MAAM,IAAIrH,KAAJ,CAAU,yCAAV,CAAN;EACH;;EACDoI,aAAa,GAAG;IACZ,IAAI,KAAKzB,IAAL,CAAUzK,MAAV,GAAmB,CAAvB,EAA0B;MACtB,KAAK2L,SAAL,CAAe,KAAKlB,IAAL,CAAU,KAAKA,IAAL,CAAUzK,MAAV,GAAmB,CAA7B,CAAf;MACA,OAAO,KAAKmL,cAAL,EAAP;IACH;;IACD,MAAM,IAAIrH,KAAJ,CAAU,yCAAV,CAAN;EACH;;EACDqI,gBAAgB,CAACrJ,KAAD,EAAQ;IACpB,MAAMsJ,UAAU,GAAG,KAAK3B,IAAL,CAAUzK,MAA7B;;IACA,IAAIoM,UAAU,KAAK,CAAnB,EAAsB;MAClB,MAAM,IAAItI,KAAJ,CAAU,yCAAV,CAAN;IACH;;IACD,IAAI,CAAChB,KAAL,EAAY;MACR,KAAKmJ,cAAL;IACH,CAFD,MAGK,IAAInJ,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAGsJ,UAAzB,EAAqC;MACtC,KAAKT,SAAL,CAAe,KAAKlB,IAAL,CAAU3H,KAAV,CAAf;IACH,CAFI,MAID;MACA,KAAK2I,WAAL;EACP;;EACDY,kBAAkB,GAAG;IACjB,KAAK3B,UAAL,GAAkB,OAAlB;EACH;;EACD4B,iBAAiB,GAAG;IAChB,KAAK5B,UAAL,GAAkB,MAAlB;EACH;;EACD6B,MAAM,CAACC,gBAAD,EAAmB;IACrB,IAAI,KAAKnB,OAAL,GAAerL,MAAf,KAA0B,CAA9B,EAAiC;MAC7B,MAAM,IAAI8D,KAAJ,CAAU,yCAAV,CAAN;IACH;;IACD,IAAI,KAAK4G,UAAT,EAAqB;MACjB,IAAI,KAAKA,UAAL,KAAoB,OAAxB,EAAiC;QAC7B,KAAKuB,cAAL;MACH;;MACD,IAAI,KAAKvB,UAAL,KAAoB,MAAxB,EAAgC;QAC5B,KAAKwB,aAAL;MACH;;MACD,KAAKxB,UAAL,GAAkB,EAAlB;IACH,CARD,MASK;MACD,KAAKyB,gBAAL,CAAsBK,gBAAtB;IACH;;IACD,OAAO,KAAKrB,cAAL,EAAP;EACH;;EACDP,YAAY,GAAG;IACX,KAAK6B,MAAL,GAAc,IAAIhG,GAAJ,CAAQ,CAAC,CAAT,EAAY,EAAZ,EAAgB,IAAhB,CAAd;IACA,KAAKgG,MAAL,CAAY9F,WAAZ,GAA0B,IAA1B;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACIgE,aAAa,CAAChD,QAAD,EAAW;IACpB,KAAK,MAAMxB,EAAX,IAAiBwB,QAAjB,EAA2B;MACvB,IAAIA,QAAQ,CAAC+E,cAAT,CAAwBvG,EAAxB,CAAJ,EAAiC;QAC7B,KAAKqE,OAAL,CAAa9G,IAAb,CAAkB,IAAIoE,MAAJ,CAAW3B,EAAX,EAAewB,QAAQ,CAACxB,EAAD,CAAvB,EAA6B,IAA7B,CAAlB;MACH;IACJ;EACJ;EACD;AACJ;AACA;AACA;;;EACI2E,UAAU,GAAG;IACT,KAAKL,IAAL,GAAY,EAAZ;IACA,KAAK3O,IAAL,CAAUgG,OAAV,CAAmBd,EAAD,IAAQ;MACtB,KAAKyJ,IAAL,CAAU/G,IAAV,CAAe1C,EAAf;IACH,CAFD;EAGH;;AArLS;;AAwLd,MAAM2L,IAAN,CAAW;EACPrR,WAAW,CAACsR,MAAD,EAASjF,QAAT,EAAmB;IAC1B,KAAKkF,eAAL,GAAuB,KAAvB;IACA,KAAKC,iBAAL,GAAyB,IAAI1S,OAAJ,EAAzB;IACA,KAAK2S,mBAAL,GAA2B,IAAI3S,OAAJ,EAA3B;IACA,KAAK4S,WAAL,CAAiBrF,QAAjB;IACA,KAAKsF,SAAL,CAAeL,MAAf;EACH;;EACDM,MAAM,GAAG;IACL,IAAI,KAAKC,2BAAT,EAAsC;MAClC,KAAKA,2BAAL,CAAiCC,WAAjC;IACH;;IACD,IAAI,KAAKC,2BAAT,EAAsC;MAClC,KAAKA,2BAAL,CAAiCD,WAAjC;IACH;EACJ;;EACDE,gBAAgB,CAACC,QAAD,EAAW;IACvB,OAAO,KAAKC,wBAAL,CAA8BD,QAA9B,KAA2C,KAAKE,gBAAL,EAAlD;EACH;;EACDD,wBAAwB,CAACD,QAAD,EAAW;IAC/B,OAAOA,QAAQ,IAAI,KAAKG,UAAL,CAAgB,kBAAhB,CAAnB;EACH;;EACDD,gBAAgB,GAAG;IACf,OAAO,KAAKC,UAAL,CAAgB,aAAhB,KAAkC,KAAKA,UAAL,CAAgB,cAAhB,CAAlC,IAAqE,KAAKA,UAAL,CAAgB,gBAAhB,CAArE,IAA0G,KAAKA,UAAL,CAAgB,gBAAhB,EAAkC1N,MAAnJ;EACH;;EACD2N,oBAAoB,GAAG;IACnB,OAAO,KAAKD,UAAL,CAAgB,YAAhB,MAAkC,OAAzC;EACH;;EACDE,SAAS,GAAG;IACR,OAAO,KAAKtI,OAAL,CAAamH,MAApB;EACH;;EACDO,WAAW,CAACrF,QAAD,EAAW;IAClB,KAAKA,QAAL,GAAgBA,QAAhB;IACA,KAAKrC,OAAL,GAAe,IAAIgF,OAAJ,CAAY,EAAZ,EAAgB,KAAKoD,UAAL,CAAgB,SAAhB,CAAhB,CAAf;;IACA,IAAI,KAAKd,MAAT,EAAiB;MACb,KAAKA,MAAL,CAAYjR,OAAZ;IACH;EACJ;;EACDkS,UAAU,GAAG;IACT,OAAO,KAAKvI,OAAZ;EACH;;EACD2H,SAAS,CAACL,MAAD,EAAS;IACd,KAAKA,MAAL,GAAc,KAAKkB,aAAL,CAAmBlB,MAAnB,CAAd;IACA,KAAKM,MAAL;IACA,KAAKC,2BAAL,GAAmC,KAAKP,MAAL,CAAY3Q,SAAZ,GAAwB8R,SAAxB,CAAmCC,OAAD,IAAa,KAAKC,iBAAL,CAAuBD,OAAvB,CAA/C,CAAnC;IACA,KAAKX,2BAAL,GAAmC,KAAKT,MAAL,CAAYxQ,SAAZ,GAAwB2R,SAAxB,CAAmCjS,IAAD,IAAU;MAC3E,MAAMoS,UAAU,GAAG,KAAK5I,OAAL,CAAakG,aAAb,CAA2B1P,IAA3B,CAAnB;MACAoS,UAAU,CAAC3G,OAAX,CAAmBzL,IAAnB;IACH,CAHkC,CAAnC;EAIH;;EACD4R,UAAU,CAACjL,IAAD,EAAOC,YAAP,EAAqB;IAC3B,OAAOH,iBAAiB,CAAC,KAAKoF,QAAN,EAAgBlF,IAAhB,EAAsBC,YAAtB,CAAxB;EACH;;EACD8E,UAAU,GAAG;IACT,OAAO,KAAKlC,OAAL,CAAakC,UAAb,EAAP;EACH;;EACD6D,OAAO,GAAG;IACN,OAAO,KAAK/F,OAAL,CAAa+F,OAAb,EAAP;EACH;;EACDM,SAAS,CAACtH,GAAD,EAAM;IACX,KAAKiB,OAAL,CAAaqG,SAAb,CAAuBtH,GAAvB;IACA,KAAKuI,MAAL,CAAYxI,UAAZ,CAAuBC,GAAG,CAAC2B,OAAJ,EAAvB,EAAsC3B,GAAG,CAACC,UAA1C;EACH;;EACDuH,iBAAiB,CAACxH,GAAD,EAAM;IACnB,KAAKiB,OAAL,CAAauG,iBAAb,CAA+BxH,GAA/B;IACA,KAAKuI,MAAL,CAAYxI,UAAZ,CAAuBC,GAAG,CAAC2B,OAAJ,EAAvB,EAAsC3B,GAAG,CAACC,UAA1C;EACH;;EACD6J,WAAW,GAAG;IACV,OAAO,KAAKrB,iBAAL,CAAuB5Q,YAAvB,EAAP;EACH;;EACD4P,SAAS,CAACzH,GAAD,EAAM;IACX,KAAKiB,OAAL,CAAawG,SAAb,CAAuBzH,GAAvB;EACH;;EACD+J,aAAa,GAAG;IACZ,OAAO,KAAKrB,mBAAL,CAAyB7Q,YAAzB,EAAP;EACH;;EACDmS,IAAI,CAAChK,GAAD,EAAM;IACNA,GAAG,CAACsC,WAAJ,GAAkB,IAAlB;EACH;;EACD2H,MAAM,CAACjK,GAAD,EAAMkK,cAAN,EAAsB;IACxB,MAAMC,QAAQ,GAAG,IAAIpM,QAAJ,EAAjB;IACAoM,QAAQ,CAACnM,OAAT,CAAiBtE,IAAjB,CAAuB0Q,OAAD,IAAa;MAC/BA,OAAO,GAAGA,OAAO,GAAGA,OAAH,GAAapK,GAAG,CAAC+C,UAAJ,EAA9B;;MACA,IAAIoH,QAAQ,CAACxS,OAAT,CAAiB0S,OAArB,EAA8B;QAC1B,KAAK7B,eAAL,GAAuB,KAAvB;MACH,CAFD,MAGK;QACD,KAAKD,MAAL,CAAYtQ,OAAZ,CAAoBmS,OAApB,EAA6B1Q,IAA7B,CAAkC,MAAM;UACpC,KAAK8O,eAAL,GAAuB,KAAvB;UACA,KAAKvH,OAAL,CAAasF,YAAb;QACH,CAHD;MAIH;IACJ,CAXD,EAWG/G,KAXH,CAWU8K,GAAD,IAAS,CACd;IACH,CAbD;;IAcA,IAAI,KAAKjB,UAAL,CAAgB,mBAAhB,CAAJ,EAA0C;MACtCa,cAAc,CAACK,IAAf,CAAoB;QAChBH,OAAO,EAAEpK,GAAG,CAAC+C,UAAJ,EADO;QAEhBwF,MAAM,EAAE,KAAKA,MAFG;QAGhBiC,OAAO,EAAEL;MAHO,CAApB;IAKH,CAND,MAOK;MACDA,QAAQ,CAACxS,OAAT;IACH;EACJ;;EACD8S,IAAI,CAACzK,GAAD,EAAMkK,cAAN,EAAsB;IACtB,MAAMC,QAAQ,GAAG,IAAIpM,QAAJ,EAAjB;IACAoM,QAAQ,CAACnM,OAAT,CAAiBtE,IAAjB,CAAuB0Q,OAAD,IAAa;MAC/BA,OAAO,GAAGA,OAAO,GAAGA,OAAH,GAAapK,GAAG,CAAC+C,UAAJ,EAA9B;;MACA,IAAIoH,QAAQ,CAACxS,OAAT,CAAiB+S,QAArB,EAA+B;QAC3B1K,GAAG,CAACsC,WAAJ,GAAkB,KAAlB;MACH,CAFD,MAGK;QACD,KAAKiG,MAAL,CAAY/P,MAAZ,CAAmBwH,GAAG,CAAC2B,OAAJ,EAAnB,EAAkCyI,OAAlC,EAA2C1Q,IAA3C,CAAgD,MAAM;UAClDsG,GAAG,CAACsC,WAAJ,GAAkB,KAAlB;QACH,CAFD;MAGH;IACJ,CAVD,EAUG9C,KAVH,CAUU8K,GAAD,IAAS,CACd;IACH,CAZD;;IAaA,IAAI,KAAKjB,UAAL,CAAgB,kBAAhB,CAAJ,EAAyC;MACrCa,cAAc,CAACK,IAAf,CAAoB;QAChB9S,IAAI,EAAEuI,GAAG,CAAC2B,OAAJ,EADU;QAEhByI,OAAO,EAAEpK,GAAG,CAAC+C,UAAJ,EAFO;QAGhBwF,MAAM,EAAE,KAAKA,MAHG;QAIhBiC,OAAO,EAAEL;MAJO,CAApB;IAMH,CAPD,MAQK;MACDA,QAAQ,CAACxS,OAAT;IACH;EACJ;;EACDgT,MAAM,CAAC3K,GAAD,EAAMkK,cAAN,EAAsB;IACxB,MAAMC,QAAQ,GAAG,IAAIpM,QAAJ,EAAjB;IACAoM,QAAQ,CAACnM,OAAT,CAAiBtE,IAAjB,CAAsB,MAAM;MACxB,KAAK6O,MAAL,CAAYjQ,MAAZ,CAAmB0H,GAAG,CAAC2B,OAAJ,EAAnB;IACH,CAFD,EAEGnC,KAFH,CAEU8K,GAAD,IAAS,CACd;IACH,CAJD;;IAKA,IAAI,KAAKjB,UAAL,CAAgB,sBAAhB,CAAJ,EAA6C;MACzCa,cAAc,CAACK,IAAf,CAAoB;QAChB9S,IAAI,EAAEuI,GAAG,CAAC2B,OAAJ,EADU;QAEhB4G,MAAM,EAAE,KAAKA,MAFG;QAGhBiC,OAAO,EAAEL;MAHO,CAApB;IAKH,CAND,MAOK;MACDA,QAAQ,CAACxS,OAAT;IACH;EACJ;;EACDiS,iBAAiB,CAACD,OAAD,EAAU;IACvB,IAAI,KAAKiB,mBAAL,CAAyBjB,OAAzB,CAAJ,EAAuC;MACnC,KAAK1I,OAAL,CAAaiC,OAAb,CAAqByG,OAAO,CAAC,UAAD,CAA5B,EAA0C,KAAKtJ,gBAAL,EAA1C;;MACA,IAAI,KAAKgJ,UAAL,CAAgB,YAAhB,MAAkC,OAAtC,EAA+C;QAC3C,IAAI;UACA,MAAMrJ,GAAG,GAAG,KAAK6K,oBAAL,CAA0BlB,OAA1B,CAAZ;UACA,KAAKlB,iBAAL,CAAuBlP,IAAvB,CAA4ByG,GAA5B;QACH,CAHD,CAIA,OAAO8K,CAAP,EAAU;UACN,KAAKpC,mBAAL,CAAyBnP,IAAzB,CAA8B,IAA9B;QACH;MACJ;IACJ;EACJ;;EACDqR,mBAAmB,CAACjB,OAAD,EAAU;IACzB,IAAI,CAAC,QAAD,EAAW,MAAX,EAAmB,MAAnB,EAA2B,QAA3B,EAAqC,SAArC,EAAgD,MAAhD,EAAwD,OAAxD,EAAiE,QAAjE,EAA2E/I,OAA3E,CAAmF+I,OAAO,CAAC,QAAD,CAA1F,MAA0G,CAAC,CAA/G,EAAkH;MAC9G,OAAO,IAAP;IACH,CAFD,MAGK,IAAI,CAAC,SAAD,EAAY,QAAZ,EAAsB/I,OAAtB,CAA8B+I,OAAO,CAAC,QAAD,CAArC,MAAqD,CAAC,CAAtD,IAA2D,CAAC,KAAKN,UAAL,CAAgB,eAAhB,CAAhE,EAAkG;MACnG,OAAO,IAAP;IACH;;IACD,OAAO,KAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACIwB,oBAAoB,CAAClB,OAAD,EAAU;IAC1B,IAAI,CAAC,MAAD,EAAS,MAAT,EAAiB,QAAjB,EAA2B,MAA3B,EAAmC,SAAnC,EAA8C/I,OAA9C,CAAsD+I,OAAO,CAAC,QAAD,CAA7D,MAA6E,CAAC,CAAlF,EAAqF;MACjF,OAAO,KAAK1I,OAAL,CAAaiH,MAAb,CAAoB,KAAK6C,mBAAL,EAApB,CAAP;IACH;;IACD,IAAI,KAAKC,mBAAL,EAAJ,EAAgC;MAC5B,OAAO,IAAP;IACH;;IACD,IAAIrB,OAAO,CAAC,QAAD,CAAP,KAAsB,QAA1B,EAAoC;MAChC,IAAIA,OAAO,CAAC,UAAD,CAAP,CAAoBhO,MAApB,KAA+B,CAAnC,EAAsC;QAClC;QACA,KAAKsF,OAAL,CAAagH,iBAAb;MACH,CAHD,MAIK;QACD,OAAO,KAAKhH,OAAL,CAAa0G,iBAAb,EAAP;MACH;IACJ;;IACD,IAAIgC,OAAO,CAAC,QAAD,CAAP,KAAsB,QAA1B,EAAoC;MAChC;MACA,KAAK1I,OAAL,CAAagH,iBAAb;IACH;;IACD,IAAI0B,OAAO,CAAC,QAAD,CAAP,KAAsB,KAA1B,EAAiC;MAC7B,OAAO,KAAK1I,OAAL,CAAa2G,cAAb,EAAP;IACH;;IACD,IAAI+B,OAAO,CAAC,QAAD,CAAP,KAAsB,QAA1B,EAAoC;MAChC,OAAO,KAAK1I,OAAL,CAAa2G,cAAb,EAAP;IACH;;IACD,IAAI+B,OAAO,CAAC,QAAD,CAAP,KAAsB,SAA1B,EAAqC;MACjC;MACA,KAAK1I,OAAL,CAAa+G,kBAAb;IACH;;IACD,OAAO,IAAP;EACH;;EACDyB,aAAa,CAAClB,MAAD,EAAS;IAClB,MAAM0C,aAAa,GAAG,KAAKC,cAAL,EAAtB;;IACA,IAAID,aAAa,IAAIA,aAAa,CAAC,OAAD,CAA9B,IAA2CA,aAAa,CAAC,WAAD,CAA5D,EAA2E;MACvE1C,MAAM,CAAC3P,OAAP,CAAe,CAACqS,aAAD,CAAf,EAAgC,KAAhC;IACH;;IACD,IAAI,KAAK5B,UAAL,CAAgB,eAAhB,MAAqC,IAAzC,EAA+C;MAC3Cd,MAAM,CAACpP,SAAP,CAAiB,KAAKgS,eAAL,CAAqB5C,MAArB,CAAjB,EAA+C,KAAKc,UAAL,CAAgB,eAAhB,CAA/C,EAAiF,KAAjF;IACH;;IACDd,MAAM,CAACjR,OAAP;IACA,OAAOiR,MAAP;EACH;;EACD2C,cAAc,GAAG;IACb,MAAMpM,QAAQ,GAAG,EAAjB;IACA,KAAKqE,UAAL,GAAkB1F,OAAlB,CAA2BuD,MAAD,IAAY;MAClC,IAAIA,MAAM,CAAC+C,UAAP,IAAqB/C,MAAM,CAACkD,oBAAhC,EAAsD;QAClDpF,QAAQ,CAAC,OAAD,CAAR,GAAoBkC,MAAM,CAACc,EAA3B;QACAhD,QAAQ,CAAC,WAAD,CAAR,GAAwBkC,MAAM,CAACkD,oBAA/B;QACApF,QAAQ,CAAC,SAAD,CAAR,GAAsBkC,MAAM,CAAC0D,kBAAP,EAAtB;MACH;IACJ,CAND;IAOA,OAAO5F,QAAP;EACH;;EACDsM,eAAe,GAAG;IACd,OAAO,KAAKnK,OAAL,CAAa+F,OAAb,GACF7Q,MADE,CACKkV,CAAC,IAAIA,CAAC,CAACpL,UADZ,CAAP;EAEH;;EACDI,gBAAgB,GAAG;IACf,OAAO,KAAKkI,MAAL,CAAYlI,gBAAZ,EAAP;EACH;;EACDiL,aAAa,CAACC,MAAD,EAAS;IAClB,OAAOzV,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;MAChD,KAAKmL,OAAL,CAAa+F,OAAb,GACKvJ,OADL,CACa4N,CAAC,IAAIA,CAAC,CAACpL,UAAF,GAAesL,MADjC;MAEA,MAAM,KAAKhD,MAAL,CAAYrI,cAAZ,CAA2BqL,MAA3B,CAAN;IACH,CAJe,CAAhB;EAKH;;EACDtE,WAAW,GAAG;IACV,OAAO,KAAKhG,OAAL,CAAagG,WAAb,EAAP;EACH;;EACDC,UAAU,GAAG;IACT,OAAO,KAAKjG,OAAL,CAAaiG,UAAb,EAAP;EACH;;EACDsE,gBAAgB,GAAG;IACf,MAAMC,2BAA2B,GAAG,KAAKpC,UAAL,CAAgB,6BAAhB,CAApC;IACA,MAAMlB,gBAAgB,GAAGpN,MAAM,CAAC,KAAKsO,UAAL,CAAgB,kBAAhB,EAAoC,CAApC,CAAD,CAAN,IAAkD,CAA3E;IACA,MAAM;MAAEhQ,OAAF;MAAWD;IAAX,IAAoB,KAAKiQ,UAAL,CAAgB,OAAhB,CAA1B;IACA,OAAO;MAAEhQ,OAAF;MAAWD,IAAX;MAAiB+O,gBAAjB;MAAmCsD;IAAnC,CAAP;EACH;;EACDV,mBAAmB,GAAG;IAClB,MAAM;MAAEU,2BAAF;MAA+BtD,gBAA/B;MAAiD9O;IAAjD,IAA6D,KAAKmS,gBAAL,EAAnE;IACA,MAAME,UAAU,GAAG,KAAKnD,MAAL,CAAYzI,KAAZ,EAAnB;IACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACQ,OAAQ2L,2BAA2B,IAC/BtD,gBAAgB,GAAGuD,UADf,IAEJvD,gBAAgB,IAAI,CAFjB,GAGHA,gBAAgB,GAAG9O,OAHhB,GAIH8O,gBAJJ;EAKH;;EACDgD,eAAe,CAAC5C,MAAD,EAAS;IACpB,MAAM;MAAEkD,2BAAF;MAA+BtD,gBAA/B;MAAiD9O,OAAjD;MAA0DD;IAA1D,IAAmE,KAAKoS,gBAAL,EAAzE;IACA,IAAIG,YAAY,GAAGjN,IAAI,CAACkN,GAAL,CAAS,CAAT,EAAYxS,IAAZ,CAAnB;;IACA,IAAIqS,2BAA2B,IAAItD,gBAAgB,IAAI,CAAvD,EAA0D;MACtDwD,YAAY,GAAGnN,kBAAkB,CAAC2J,gBAAD,EAAmB9O,OAAnB,CAAjC;IACH;;IACD,MAAMwS,aAAa,GAAGnN,IAAI,CAACoN,IAAL,CAAUvD,MAAM,CAACzI,KAAP,KAAiBzG,OAA3B,CAAtB;IACA,OAAOwS,aAAa,GAAGnN,IAAI,CAACqN,GAAL,CAASJ,YAAT,EAAuBE,aAAvB,CAAH,GAA2CF,YAA/D;EACH;;EACDX,mBAAmB,GAAG;IAClB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQ,MAAM7C,gBAAgB,GAAGpN,MAAM,CAAC,KAAKsO,UAAL,CAAgB,kBAAhB,CAAD,CAA/B;IACA,OAAOlB,gBAAgB,GAAG,CAA1B;EACH;;AAhTM;;AAmTX,MAAM6D,YAAN,CAAmB;EACf/U,WAAW,GAAG;IACV,KAAKgV,KAAL,GAAa,IAAIpX,YAAJ,EAAb;EACH;;EACDqX,YAAY,CAACC,GAAD,EAAM;IACdA,GAAG,CAACC,eAAJ;IACA,KAAKH,KAAL,CAAW1B,IAAX,CAAgB,KAAK8B,IAAL,CAAUvK,EAA1B;EACH;;AAPc;;AASnBkK,YAAY,CAACM,IAAb;EAAA,iBAAyGN,YAAzG;AAAA;;AACAA,YAAY,CAACO,IAAb,kBAD+F3X,EAC/F;EAAA,MAA6FoX,YAA7F;EAAA;EAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAD+FpX,EACkI,4BAAjO;MAD+FA,EACwM,iBAAvS;MAD+FA,EACwM,4BAAvS;MAD+FA,EAC6O;QAAA,OAAU,wBAAV;MAAA,EAA5U;MAD+FA,EACmhB,wBAAlnB;MAD+FA,EAC48B,eAA3iC;MAD+FA,EACs9B,kBAArjC;MAD+FA,EACs9B,6BAArjC;MAD+FA,EAC0gC,UAAzmC;MAD+FA,EAC0hC,iBAAznC;IAAA;;IAAA;MAD+FA,EAC0gC,aAAzmC;MAD+FA,EAC0gC,kCAAzmC;IAAA;EAAA;EAAA;AAAA;;AACA;EAAA,mDAF+FA,EAE/F,mBAA2FoX,YAA3F,EAAqH,CAAC;IAC1GrI,IAAI,EAAE7O,SADoG;IAE1GsI,IAAI,EAAE,CAAC;MAAEoP,QAAQ,EAAE,0BAAZ;MAAwCC,QAAQ,EAAE,26BAAlD;MAA+9BC,MAAM,EAAE,CAAC,+eAAD;IAAv+B,CAAD;EAFoG,CAAD,CAArH,QAG4B;IAAEL,IAAI,EAAE,CAAC;MACrB1I,IAAI,EAAE5O;IADe,CAAD,CAAR;IAEZkX,KAAK,EAAE,CAAC;MACRtI,IAAI,EAAE3O;IADE,CAAD;EAFK,CAH5B;AAAA;;AASA,MAAM2X,iBAAN,CAAwB;EACpB1V,WAAW,GAAG;IACV,KAAKgV,KAAL,GAAa,IAAIpX,YAAJ,EAAb;EACH;;EACD+X,SAAS,CAACC,GAAD,EAAM;IACX,KAAKZ,KAAL,CAAW1B,IAAX,CAAgBsC,GAAhB;EACH;;AANmB;;AAQxBF,iBAAiB,CAACL,IAAlB;EAAA,iBAA8GK,iBAA9G;AAAA;;AACAA,iBAAiB,CAACJ,IAAlB,kBApB+F3X,EAoB/F;EAAA,MAAkG+X,iBAAlG;EAAA;EAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MApB+F/X,EAoBkJ,4BAAjP;MApB+FA,EAoBkM,0GAAjS;MApB+FA,EAoBoV,eAAnb;IAAA;;IAAA;MApB+FA,EAoBkP,aAAjV;MApB+FA,EAoBkP,gCAAjV;IAAA;EAAA;EAAA,aAA88BoX,YAA98B,EAAgkCtX,EAAE,CAACoY,OAAnkC;EAAA;AAAA;;AACA;EAAA,mDArB+FlY,EAqB/F,mBAA2F+X,iBAA3F,EAA0H,CAAC;IAC/GhJ,IAAI,EAAE7O,SADyG;IAE/GsI,IAAI,EAAE,CAAC;MAAEoP,QAAQ,EAAE,gCAAZ;MAA8CC,QAAQ,EAAE,4MAAxD;MAAsQC,MAAM,EAAE,CAAC,+eAAD;IAA9Q,CAAD;EAFyG,CAAD,CAA1H,QAG4B;IAAEK,IAAI,EAAE,CAAC;MACrBpJ,IAAI,EAAE5O;IADe,CAAD,CAAR;IAEZkX,KAAK,EAAE,CAAC;MACRtI,IAAI,EAAE3O;IADE,CAAD;EAFK,CAH5B;AAAA;;AASA,MAAMgY,YAAN,CAAmB;EACf/V,WAAW,GAAG;IACV,KAAKgW,eAAL,GAAuB,IAAIlX,OAAJ,EAAvB;EACH;;AAHc;;AAKnBiX,YAAY,CAACV,IAAb;EAAA,iBAAyGU,YAAzG;AAAA;;AACAA,YAAY,CAACE,KAAb,kBApC+FtY,EAoC/F;EAAA,OAA6GoY,YAA7G;EAAA,SAA6GA,YAA7G;EAAA,YAAuI;AAAvI;;AACA;EAAA,mDArC+FpY,EAqC/F,mBAA2FoY,YAA3F,EAAqH,CAAC;IAC1GrJ,IAAI,EAAE1O,UADoG;IAE1GmI,IAAI,EAAE,CAAC;MAAE+P,UAAU,EAAE;IAAd,CAAD;EAFoG,CAAD,CAArH;AAAA;;AAKA,MAAMC,0BAAN,CAAiC;;AAEjCA,0BAA0B,CAACd,IAA3B;EAAA,iBAAuHc,0BAAvH;AAAA;;AACAA,0BAA0B,CAACb,IAA3B,kBA7C+F3X,EA6C/F;EAAA,MAA2GwY,0BAA3G;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MA7C+FxY,EA8C3F,yBADJ;IAAA;;IAAA;MA7C+FA,EA8CpE,yCAD3B;IAAA;EAAA;EAAA,aAE0Ca,EAAE,CAAC4X,4BAF7C,EAEwM5X,EAAE,CAAC6X,eAF3M,EAE6R7X,EAAE,CAAC8X,OAFhS;EAAA;AAAA;;AAGA;EAAA,mDAhD+F3Y,EAgD/F,mBAA2FwY,0BAA3F,EAAmI,CAAC;IACxHzJ,IAAI,EAAE7O,SADkH;IAExHsI,IAAI,EAAE,CAAC;MACCoP,QAAQ,EAAE,mCADX;MAECC,QAAQ,EAAG;AAC/B;AACA;IAJmB,CAAD;EAFkH,CAAD,CAAnI,QAQ4B;IAAEe,IAAI,EAAE,CAAC;MACrB7J,IAAI,EAAE5O;IADe,CAAD,CAAR;IAEZwT,MAAM,EAAE,CAAC;MACT5E,IAAI,EAAE5O;IADG,CAAD,CAFI;IAIZ0Y,aAAa,EAAE,CAAC;MAChB9J,IAAI,EAAE5O;IADU,CAAD;EAJH,CAR5B;AAAA;;AAgBA,MAAM2Y,qBAAN,CAA4B;EACxBzW,WAAW,CAAC0W,GAAD,EAAM;IACb,KAAKA,GAAL,GAAWA,GAAX;EACH;;EACDC,eAAe,GAAG;IACd,KAAKD,GAAL,CAASE,aAAT,CAAuBC,SAAvB,CAAiCzV,GAAjC,CAAqC,wBAArC;EACH;;EACD0V,WAAW,GAAG;IACV,KAAKC,kBAAL,GAA0B,KAAKR,IAAL,CAAUnE,UAAV,CAAqB,qBAArB,CAA1B;EACH;;AATuB;;AAW5BqE,qBAAqB,CAACpB,IAAtB;EAAA,iBAAkHoB,qBAAlH,EA3E+F9Y,EA2E/F,mBAAyJA,EAAE,CAACqZ,UAA5J;AAAA;;AACAP,qBAAqB,CAACnB,IAAtB,kBA5E+F3X,EA4E/F;EAAA,MAAsG8Y,qBAAtG;EAAA;EAAA;IAAA;EAAA;EAAA,WA5E+F9Y,EA4E/F;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MA5E+FA,EA6E3F,4BADJ;MA5E+FA,EA6EzD,UADtC;MA5E+FA,EA6EjC,eAD9D;IAAA;;IAAA;MA5E+FA,EA6EzD,aADtC;MA5E+FA,EA6EzD,0CADtC;IAAA;EAAA;EAAA;AAAA;;AAGA;EAAA,mDA/E+FA,EA+E/F,mBAA2F8Y,qBAA3F,EAA8H,CAAC;IACnH/J,IAAI,EAAE7O,SAD6G;IAEnHsI,IAAI,EAAE,CAAC;MACCoP,QAAQ,EAAE,6BADX;MAECC,QAAQ,EAAG;AAC/B;AACA;IAJmB,CAAD;EAF6G,CAAD,CAA9H,EAQ4B,YAAY;IAAE,OAAO,CAAC;MAAE9I,IAAI,EAAE/O,EAAE,CAACqZ;IAAX,CAAD,CAAP;EAAmC,CAR7E,EAQ+F;IAAET,IAAI,EAAE,CAAC;MACxF7J,IAAI,EAAE5O;IADkF,CAAD;EAAR,CAR/F;AAAA;;AAYA,MAAMmZ,cAAN,CAAqB;EACjBjX,WAAW,GAAG;IACV,KAAKkX,gBAAL,GAAwB,EAAxB;IACA,KAAKpU,IAAL,GAAY,IAAIlF,YAAJ,EAAZ;IACA,KAAK6O,IAAL,GAAY,IAAI7O,YAAJ,EAAZ;EACH;;EACDkZ,WAAW,CAACpE,OAAD,EAAU;IACjB,IAAIA,OAAO,CAACpB,MAAZ,EAAoB;MAChB,IAAI,CAACoB,OAAO,CAACpB,MAAR,CAAe6F,WAApB,EAAiC;QAC7B,KAAKC,cAAL,CAAoBtF,WAApB;MACH;;MACD,KAAKsF,cAAL,GAAsB,KAAK9F,MAAL,CAAY3Q,SAAZ,GAAwB8R,SAAxB,CAAmC4E,WAAD,IAAiB;QACrE,MAAMxP,QAAQ,GAAG,KAAKyJ,MAAL,CAAYvO,OAAZ,EAAjB;;QACA,IAAI8E,QAAQ,CAACnD,MAAT,GAAkB,CAAlB,IAAuBmD,QAAQ,CAAC,CAAD,CAAR,CAAY,OAAZ,MAAyB,KAAKkC,MAAL,CAAYc,EAAhE,EAAoE;UAChE,KAAKqM,gBAAL,GAAwBrP,QAAQ,CAAC,CAAD,CAAR,CAAY,WAAZ,CAAxB;QACH,CAFD,MAGK;UACD,KAAKqP,gBAAL,GAAwB,EAAxB;QACH;;QACDrP,QAAQ,CAACrB,OAAT,CAAkBvE,SAAD,IAAe,CAC/B,CADD;MAEH,CAVqB,CAAtB;IAWH;EACJ;;EACDqV,KAAK,CAACC,KAAD,EAAQ;IACTA,KAAK,CAACC,cAAN;IACA,KAAKC,mBAAL;IACA,KAAKnG,MAAL,CAAY3P,OAAZ,CAAoB,CAChB;MACIqC,KAAK,EAAE,KAAK+F,MAAL,CAAYc,EADvB;MAEI5H,SAAS,EAAE,KAAKiU,gBAFpB;MAGI/S,OAAO,EAAE,KAAK4F,MAAL,CAAY0D,kBAAZ;IAHb,CADgB,CAApB;IAOA,KAAK3K,IAAL,CAAUwQ,IAAV,CAAe,IAAf;EACH;;EACDoE,kBAAkB,CAACH,KAAD,EAAQ;IACtBA,KAAK,CAACC,cAAN;IACA,KAAK/K,IAAL,CAAU6G,IAAV,CAAe,KAAKvJ,MAAL,CAAYc,EAA3B;EACH;;EACD4M,mBAAmB,GAAG;IAClB,IAAIxS,EAAJ;;IACA,IAAI,KAAKiS,gBAAT,EAA2B;MACvB,MAAMS,YAAY,GAAG,KAAKT,gBAAL,KAA0B,KAA1B,GAAkC,MAAlC,GAA2C,KAAhE;MACA,KAAKA,gBAAL,GAAwBS,YAAxB;IACH,CAHD,MAIK;MACD,KAAKT,gBAAL,GAAwB,CAACjS,EAAE,GAAG,KAAK8E,MAAL,CAAYiD,aAAlB,MAAqC,IAArC,IAA6C/H,EAAE,KAAK,KAAK,CAAzD,GAA6DA,EAA7D,GAAkE,KAA1F;IACH;;IACD,OAAO,KAAKiS,gBAAZ;EACH;;AAlDgB;;AAoDrBD,cAAc,CAAC5B,IAAf;EAAA,iBAA2G4B,cAA3G;AAAA;;AACAA,cAAc,CAAC3B,IAAf,kBAhJ+F3X,EAgJ/F;EAAA,MAA+FsZ,cAA/F;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA,WAhJ+FtZ,EAgJ/F;EAAA;EAAA;EAAA;EAAA;IAAA;MAhJ+FA,EAiJ3F,yDADJ;MAhJ+FA,EAuJ3F,+DAPJ;MAhJ+FA,EAwJ3F,mEARJ;IAAA;;IAAA;MAhJ+FA,EAiJ9E,0CADjB;MAhJ+FA,EAuJxD,aAPvC;MAhJ+FA,EAuJxD,2CAPvC;MAhJ+FA,EAwJ1B,aARrE;MAhJ+FA,EAwJ1B,mCARrE;IAAA;EAAA;EAAA,aASqZF,EAAE,CAACma,IATxZ,EASsena,EAAE,CAACoa,OATze;EAAA;AAAA;;AAUA;EAAA,mDA1J+Fla,EA0J/F,mBAA2FsZ,cAA3F,EAAuH,CAAC;IAC5GvK,IAAI,EAAE7O,SADsG;IAE5GsI,IAAI,EAAE,CAAC;MAAEoP,QAAQ,EAAE,4BAAZ;MAA0CC,QAAQ,EAAG;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GATmB;MASdC,MAAM,EAAE,CAAC,+VAAD;IATM,CAAD;EAFsG,CAAD,CAAvH,QAY4B;IAAE1L,MAAM,EAAE,CAAC;MACvB2C,IAAI,EAAE5O;IADiB,CAAD,CAAV;IAEZwT,MAAM,EAAE,CAAC;MACT5E,IAAI,EAAE5O;IADG,CAAD,CAFI;IAIZga,UAAU,EAAE,CAAC;MACbpL,IAAI,EAAE5O;IADO,CAAD,CAJA;IAMZgF,IAAI,EAAE,CAAC;MACP4J,IAAI,EAAE3O;IADC,CAAD,CANM;IAQZ0O,IAAI,EAAE,CAAC;MACPC,IAAI,EAAE3O;IADC,CAAD;EARM,CAZ5B;AAAA;;AAwBA,MAAMga,oBAAN,CAA2B;EACvB/X,WAAW,GAAG;IACV,KAAK8C,IAAL,GAAY,IAAIlF,YAAJ,EAAZ;IACA,KAAK6O,IAAL,GAAY,IAAI7O,YAAJ,EAAZ;EACH;;AAJsB;;AAM3Bma,oBAAoB,CAAC1C,IAArB;EAAA,iBAAiH0C,oBAAjH;AAAA;;AACAA,oBAAoB,CAACzC,IAArB,kBAzL+F3X,EAyL/F;EAAA,MAAqGoa,oBAArG;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAzL+Fpa,EA0L3F,gEADJ;MAzL+FA,EA2LC;QAAA,OAAQ,qBAAR;MAAA;QAAA,OAAmC,qBAAnC;MAAA,EAFhG;MAzL+FA,EA2LuD,iBAFtJ;IAAA;;IAAA;MAzL+FA,EA2L7D,aAFlC;MAzL+FA,EA2L7D,qFAFlC;IAAA;EAAA;EAAA,aAI0CsZ,cAJ1C;EAAA;AAAA;;AAKA;EAAA,mDA9L+FtZ,EA8L/F,mBAA2Foa,oBAA3F,EAA6H,CAAC;IAClHrL,IAAI,EAAE7O,SAD4G;IAElHsI,IAAI,EAAE,CAAC;MACCoP,QAAQ,EAAE,0BADX;MAECC,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;IANmB,CAAD;EAF4G,CAAD,CAA7H,QAU4B;IAAEzL,MAAM,EAAE,CAAC;MACvB2C,IAAI,EAAE5O;IADiB,CAAD,CAAV;IAEZwT,MAAM,EAAE,CAAC;MACT5E,IAAI,EAAE5O;IADG,CAAD,CAFI;IAIZga,UAAU,EAAE,CAAC;MACbpL,IAAI,EAAE5O;IADO,CAAD,CAJA;IAMZgF,IAAI,EAAE,CAAC;MACP4J,IAAI,EAAE3O;IADC,CAAD,CANM;IAQZ0O,IAAI,EAAE,CAAC;MACPC,IAAI,EAAE3O;IADC,CAAD;EARM,CAV5B;AAAA;;AAsBA,MAAMia,mBAAN,CAA0B;EACtBhY,WAAW,CAACiY,UAAD,EAAaC,QAAb,EAAuBC,YAAvB,EAAqC;IAC5C,KAAKF,UAAL,GAAkBA,UAAlB;IACA,KAAKC,QAAL,GAAgBA,QAAhB;IACA,KAAKC,YAAL,GAAoBA,YAApB;IACA,KAAKC,UAAL,GAAkB,IAAItZ,OAAJ,EAAlB;EACH;;EACDuZ,QAAQ,GAAG;IACP,KAAKF,YAAL,CAAkBnC,eAAlB,CACKsC,IADL,CACUrZ,SAAS,CAAC,KAAKmZ,UAAN,CADnB,EACsClZ,MAAM,CAAC,MAAM,KAAKqZ,SAAZ,CAD5C,EAEK9F,SAFL,CAEgB8E,KAAD,IAAW;MACtB,MAAMiB,MAAM,GAAG,KAAKC,aAAL,GAAqBlB,KAAK,CAACmB,KAA1C;MACA,MAAM7L,KAAK,GAAG,KAAK8L,YAAL,GAAoBH,MAAlC;MACA,KAAKN,QAAL,CAAcU,QAAd,CAAuB,KAAKC,aAA5B,EAA2C,OAA3C,EAAoDhM,KAAK,GAAG,IAA5D;MACA,KAAKqL,QAAL,CAAcU,QAAd,CAAuB,KAAKE,cAA5B,EAA4C,OAA5C,EAAqD,KAAKC,aAAL,GAAqBP,MAArB,GAA8B,IAAnF;IACH,CAPD;EAQH;;EACDQ,YAAY,CAACzB,KAAD,EAAQ;IAChB,KAAKgB,SAAL,GAAiB,IAAjB;IACA,KAAKM,aAAL,GAAqB,KAAKX,QAAL,CAAce,UAAd,CAAyB,KAAKhB,UAAL,CAAgBrB,aAAzC,CAArB;IACA,KAAKkC,cAAL,GAAsB,KAAKZ,QAAL,CAAcgB,WAAd,CAA0B,KAAKL,aAA/B,CAAtB;IACA,KAAKJ,aAAL,GAAqBlB,KAAK,CAACmB,KAA3B;IACA,KAAKC,YAAL,GAAoB,KAAKE,aAAL,CAAmBM,WAAvC;IACA,KAAKJ,aAAL,GAAqB,KAAKD,cAAL,CAAoBK,WAAzC;EACH;;EACDC,WAAW,GAAG;IACV,KAAKb,SAAL,GAAiB,KAAjB;EACH;;EACDc,WAAW,GAAG;IACV,KAAKjB,UAAL,CAAgB9V,IAAhB,CAAqB,IAArB;EACH;;AA9BqB;;AAgC1B0V,mBAAmB,CAAC3C,IAApB;EAAA,iBAAgH2C,mBAAhH,EApP+Fra,EAoP/F,mBAAqJA,EAAE,CAACqZ,UAAxJ,GApP+FrZ,EAoP/F,mBAA+KA,EAAE,CAAC2b,SAAlL,GApP+F3b,EAoP/F,mBAAwMoY,YAAxM;AAAA;;AACAiC,mBAAmB,CAACuB,IAApB,kBArP+F5b,EAqP/F;EAAA,MAAoGqa,mBAApG;EAAA;EAAA;IAAA;MArP+Fra,EAqP/F;QAAA,OAAoG,wBAApG;MAAA;QAAA,OAAoG,iBAApG;MAAA,UArP+FA,EAqP/F;IAAA;EAAA;AAAA;;AACA;EAAA,mDAtP+FA,EAsP/F,mBAA2Fqa,mBAA3F,EAA4H,CAAC;IACjHtL,IAAI,EAAEzO,SAD2G;IAEjHkI,IAAI,EAAE,CAAC;MACCoP,QAAQ,EAAE;IADX,CAAD;EAF2G,CAAD,CAA5H,EAK4B,YAAY;IAAE,OAAO,CAAC;MAAE7I,IAAI,EAAE/O,EAAE,CAACqZ;IAAX,CAAD,EAA0B;MAAEtK,IAAI,EAAE/O,EAAE,CAAC2b;IAAX,CAA1B,EAAkD;MAAE5M,IAAI,EAAEqJ;IAAR,CAAlD,CAAP;EAAmF,CAL7H,EAK+I;IAAEiD,YAAY,EAAE,CAAC;MAChJtM,IAAI,EAAExO,YAD0I;MAEhJiI,IAAI,EAAE,CAAC,WAAD,EAAc,CAAC,QAAD,CAAd;IAF0I,CAAD,CAAhB;IAG/HiT,WAAW,EAAE,CAAC;MACd1M,IAAI,EAAExO,YADQ;MAEdiI,IAAI,EAAE,CAAC,kBAAD;IAFQ,CAAD;EAHkH,CAL/I;AAAA;;AAaA,MAAMqT,uBAAN,CAA8B;EAC1BxZ,WAAW,GAAG;IACV,KAAK8C,IAAL,GAAY,IAAIlF,YAAJ,EAAZ;IACA,KAAK6O,IAAL,GAAY,IAAI7O,YAAJ,EAAZ;IACA,KAAKyW,aAAL,GAAqB,IAAIzW,YAAJ,EAArB;IACA,KAAKka,UAAL,GAAkB,KAAlB;EACH;;EACDhB,WAAW,GAAG;IACV,KAAKzE,oBAAL,GAA4B,KAAKkE,IAAL,CAAUlE,oBAAV,EAA5B;IACA,KAAKoH,oBAAL,GAA4B,KAAKlD,IAAL,CAAUvE,gBAAV,CAA2B,MAA3B,CAA5B;IACA,KAAK0H,qBAAL,GAA6B,KAAKnD,IAAL,CAAUvE,gBAAV,CAA2B,OAA3B,CAA7B;IACA,KAAK2H,WAAL,GAAmB,KAAKpD,IAAL,CAAUnE,UAAV,CAAqB,WAArB,CAAnB;IACA,KAAK0F,UAAL,GAAkB,KAAKvB,IAAL,CAAUnE,UAAV,CAAqB,UAArB,CAAlB;EACH;;EACDwH,iBAAiB,CAAC1K,OAAD,EAAU;IACvB,OAAO,CAACA,OAAO,IAAI,EAAZ,EAAgBhQ,MAAhB,CAAwB6K,MAAD,IAAY,CAACA,MAAM,CAAC0C,IAA3C,CAAP;EACH;;AAhByB;;AAkB9B+M,uBAAuB,CAACnE,IAAxB;EAAA,iBAAoHmE,uBAApH;AAAA;;AACAA,uBAAuB,CAAClE,IAAxB,kBAtR+F3X,EAsR/F;EAAA,MAAwG6b,uBAAxG;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WAtR+F7b,EAsR/F;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAtR+FA,EAuR3F,oEADJ;MAtR+FA,EA6R3F,oEAPJ;MAtR+FA,EA8R3F,qEARJ;MAtR+FA,EAqS3F,oEAfJ;IAAA;;IAAA;MAtR+FA,EAuRtD,6CADzC;MAtR+FA,EA6R5D,aAPnC;MAtR+FA,EA6R5D,6CAPnC;MAtR+FA,EA8RpE,aAR3B;MAtR+FA,EA8RpE,oEAR3B;MAtR+FA,EAqS5D,aAfnC;MAtR+FA,EAqS5D,8CAfnC;IAAA;EAAA;EAAA,aAgB0CwY,0BAhB1C,EAgB4KM,qBAhB5K,EAgBwQsB,oBAhBxQ,EAgBmata,EAAE,CAACma,IAhBta,EAgBofna,EAAE,CAACoY,OAhBvf,EAgB8lBpY,EAAE,CAACoa,OAhBjmB,EAgByqBG,mBAhBzqB;EAAA;AAAA;;AAiBA;EAAA,mDAvS+Fra,EAuS/F,mBAA2F6b,uBAA3F,EAAgI,CAAC;IACrH9M,IAAI,EAAE7O,SAD+G;IAErHsI,IAAI,EAAE,CAAC;MACCoP,QAAQ,EAAE,gCADX;MAECC,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAlBmB,CAAD;EAF+G,CAAD,CAAhI,QAsB4B;IAAEe,IAAI,EAAE,CAAC;MACrB7J,IAAI,EAAE5O;IADe,CAAD,CAAR;IAEZ0Y,aAAa,EAAE,CAAC;MAChB9J,IAAI,EAAE5O;IADU,CAAD,CAFH;IAIZwT,MAAM,EAAE,CAAC;MACT5E,IAAI,EAAE5O;IADG,CAAD,CAJI;IAMZgF,IAAI,EAAE,CAAC;MACP4J,IAAI,EAAE3O;IADC,CAAD,CANM;IAQZ0O,IAAI,EAAE,CAAC;MACPC,IAAI,EAAE3O;IADC,CAAD,CARM;IAUZsW,aAAa,EAAE,CAAC;MAChB3H,IAAI,EAAE3O;IADU,CAAD;EAVH,CAtB5B;AAAA;;AAoCA,MAAM8b,kBAAN,CAAyB;EACrB7Z,WAAW,CAAC0W,GAAD,EAAM;IACb,KAAKA,GAAL,GAAWA,GAAX;IACA,KAAK1D,MAAL,GAAc,IAAIpV,YAAJ,EAAd;EACH;;EACD+Y,eAAe,GAAG;IACd,KAAKD,GAAL,CAASE,aAAT,CAAuBC,SAAvB,CAAiCzV,GAAjC,CAAqC,8BAArC,EAAqE,kCAArE;EACH;;EACD0V,WAAW,GAAG;IACV,KAAKgD,WAAL,GAAmB,KAAKvD,IAAL,CAAUnE,UAAV,CAAqB,aAArB,CAAnB;IACA,KAAK2H,mBAAL,GAA2B,KAAKxD,IAAL,CAAUnE,UAAV,CAAqB,sBAArB,CAA3B;EACH;;EACD4H,KAAK,CAACzC,KAAD,EAAQ;IACTA,KAAK,CAACC,cAAN;IACAD,KAAK,CAACpC,eAAN;;IACA,IAAI,KAAKoB,IAAL,CAAUnE,UAAV,CAAqB,MAArB,MAAiC,UAArC,EAAiD;MAC7C,KAAKY,MAAL,CAAYM,IAAZ,CAAiB;QACbhC,MAAM,EAAE,KAAKA;MADA,CAAjB;IAGH,CAJD,MAKK;MACD,KAAKiF,IAAL,CAAUhF,eAAV,GAA4B,IAA5B;IACH;EACJ;;AAvBoB;;AAyBzBsI,kBAAkB,CAACxE,IAAnB;EAAA,iBAA+GwE,kBAA/G,EApW+Flc,EAoW/F,mBAAmJA,EAAE,CAACqZ,UAAtJ;AAAA;;AACA6C,kBAAkB,CAACvE,IAAnB,kBArW+F3X,EAqW/F;EAAA,MAAmGkc,kBAAnG;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA,WArW+Flc,EAqW/F;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MArW+FA,EAsW3F,6DADJ;IAAA;;IAAA;MArW+FA,EAsWvF,oCADR;IAAA;EAAA;EAAA,aAG0CF,EAAE,CAACma,IAH7C;EAAA;AAAA;;AAIA;EAAA,mDAzW+Fja,EAyW/F,mBAA2Fkc,kBAA3F,EAA2H,CAAC;IAChHnN,IAAI,EAAE7O,SAD0G;IAEhHsI,IAAI,EAAE,CAAC;MACCoP,QAAQ,EAAE,0BADX;MAECC,QAAQ,EAAG;AAC/B;AACA;AACA;IALmB,CAAD;EAF0G,CAAD,CAA3H,EAS4B,YAAY;IAAE,OAAO,CAAC;MAAE9I,IAAI,EAAE/O,EAAE,CAACqZ;IAAX,CAAD,CAAP;EAAmC,CAT7E,EAS+F;IAAET,IAAI,EAAE,CAAC;MACxF7J,IAAI,EAAE5O;IADkF,CAAD,CAAR;IAE/EwT,MAAM,EAAE,CAAC;MACT5E,IAAI,EAAE5O;IADG,CAAD,CAFuE;IAI/EkV,MAAM,EAAE,CAAC;MACTtG,IAAI,EAAE3O;IADG,CAAD;EAJuE,CAT/F;AAAA;;AAiBA,MAAMkc,aAAN,CAAoB;EAChBja,WAAW,GAAG;IACV,KAAKka,UAAL,GAAkB,EAAlB;IACA,KAAKhb,MAAL,GAAc,IAAItB,YAAJ,EAAd;IACA,KAAKuc,KAAL,GAAa,EAAb;EACH;;EACDC,QAAQ,CAACD,KAAD,EAAQ;IACZ,KAAK7I,MAAL,CAAYtP,SAAZ,CAAsB;MAClBgC,KAAK,EAAE,KAAK+F,MAAL,CAAYc,EADD;MAElB9F,MAAM,EAAEoV,KAFU;MAGlBjb,MAAM,EAAE,KAAK6K,MAAL,CAAY6D,iBAAZ;IAHU,CAAtB;EAKH;;AAZe;;AAcpBqM,aAAa,CAAC5E,IAAd;EAAA,iBAA0G4E,aAA1G;AAAA;;AACAA,aAAa,CAAC3E,IAAd,kBAzY+F3X,EAyY/F;EAAA,MAA8Fsc,aAA9F;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;;AACA;EAAA,mDA1Y+Ftc,EA0Y/F,mBAA2Fsc,aAA3F,EAAsH,CAAC;IAC3GvN,IAAI,EAAE7O,SADqG;IAE3GsI,IAAI,EAAE,CAAC;MACCqP,QAAQ,EAAE;IADX,CAAD;EAFqG,CAAD,CAAtH,QAK4B;IAAEzL,MAAM,EAAE,CAAC;MACvB2C,IAAI,EAAE5O;IADiB,CAAD,CAAV;IAEZwT,MAAM,EAAE,CAAC;MACT5E,IAAI,EAAE5O;IADG,CAAD,CAFI;IAIZoc,UAAU,EAAE,CAAC;MACbxN,IAAI,EAAE5O;IADO,CAAD,CAJA;IAMZoB,MAAM,EAAE,CAAC;MACTwN,IAAI,EAAE3O;IADG,CAAD;EANI,CAL5B;AAAA;;AAeA,MAAMsc,qBAAN,SAAoCJ,aAApC,CAAkD;EAC9Cja,WAAW,CAACsa,QAAD,EAAW;IAClB;IACA,KAAKA,QAAL,GAAgBA,QAAhB;EACH;;EACDxD,WAAW,CAACpE,OAAD,EAAU;IACjB,IAAI,KAAK3I,MAAL,IAAe,CAAC,KAAKwQ,eAAzB,EAA0C;MACtC,MAAMrb,MAAM,GAAG,KAAK6K,MAAL,CAAY7K,MAA3B;;MACA,IAAI,CAACA,MAAL,EAAa;QACT;MACH;;MACD,MAAMsb,gBAAgB,GAAG,KAAKF,QAAL,CAAcG,uBAAd,CAAsCvb,MAAM,CAACmO,SAA7C,CAAzB;MACA,KAAKkN,eAAL,GAAuB,KAAKG,aAAL,CAAmBC,eAAnB,CAAmCH,gBAAnC,CAAvB,CANsC,CAOtC;;MACA,KAAKD,eAAL,CAAqBK,QAArB,CAA8BT,KAA9B,GAAsC,KAAKA,KAA3C;MACA,KAAKI,eAAL,CAAqBK,QAArB,CAA8B7Q,MAA9B,GAAuC,KAAKA,MAA5C;MACA,KAAKwQ,eAAL,CAAqBK,QAArB,CAA8BtJ,MAA9B,GAAuC,KAAKA,MAA5C;MACA,KAAKiJ,eAAL,CAAqBK,QAArB,CAA8BV,UAA9B,GAA2C,KAAKA,UAAhD;MACA,KAAKK,eAAL,CAAqBK,QAArB,CAA8B1b,MAA9B,CAAqCuT,SAArC,CAAgD8E,KAAD,IAAW;QAAE,KAAK6C,QAAL,CAAc7C,KAAd;MAAuB,CAAnF;IACH;;IACD,IAAI,KAAKgD,eAAT,EAA0B;MACtB,KAAKA,eAAL,CAAqBK,QAArB,CAA8B9D,WAA9B,CAA0CpE,OAA1C;IACH;EACJ;;EACD2G,WAAW,GAAG;IACV,IAAI,KAAKkB,eAAT,EAA0B;MACtB,KAAKA,eAAL,CAAqBM,OAArB;IACH;EACJ;;AA5B6C;;AA8BlDR,qBAAqB,CAAChF,IAAtB;EAAA,iBAAkHgF,qBAAlH,EAvb+F1c,EAub/F,mBAAyJA,EAAE,CAACmd,wBAA5J;AAAA;;AACAT,qBAAqB,CAAC/E,IAAtB,kBAxb+F3X,EAwb/F;EAAA,MAAsG0c,qBAAtG;EAAA;EAAA;IAAA;MAxb+F1c,EAwb/F,qBAA6SQ,gBAA7S;IAAA;;IAAA;MAAA;;MAxb+FR,EAwb/F,qBAxb+FA,EAwb/F;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA,WAxb+FA,EAwb/F,6BAxb+FA,EAwb/F;EAAA;EAAA;EAAA;EAAA;IAAA;MAxb+FA,EAwbsT,2FAxbtTA,EAwbsT,wBAArZ;IAAA;EAAA;EAAA;AAAA;;AACA;EAAA,mDAzb+FA,EAyb/F,mBAA2F0c,qBAA3F,EAA8H,CAAC;IACnH3N,IAAI,EAAE7O,SAD6G;IAEnHsI,IAAI,EAAE,CAAC;MACCoP,QAAQ,EAAE,qBADX;MAECC,QAAQ,EAAG;IAFZ,CAAD;EAF6G,CAAD,CAA9H,EAM4B,YAAY;IAAE,OAAO,CAAC;MAAE9I,IAAI,EAAE/O,EAAE,CAACmd;IAAX,CAAD,CAAP;EAAiD,CAN3F,EAM6G;IAAEX,KAAK,EAAE,CAAC;MACvGzN,IAAI,EAAE5O;IADiG,CAAD,CAAT;IAE7F4c,aAAa,EAAE,CAAC;MAChBhO,IAAI,EAAEtO,SADU;MAEhB+H,IAAI,EAAE,CAAC,eAAD,EAAkB;QAAE4U,IAAI,EAAE5c,gBAAR;QAA0B6c,MAAM,EAAE;MAAlC,CAAlB;IAFU,CAAD;EAF8E,CAN7G;AAAA;;AAaA,MAAMC,aAAN,CAAoB;EAChBjb,WAAW,GAAG;IACV,KAAKT,KAAL,GAAa,GAAb;IACA,KAAKL,MAAL,GAAc,IAAItB,YAAJ,EAAd;EACH;;EACDyb,WAAW,GAAG;IACV,IAAI,KAAK6B,mBAAT,EAA8B;MAC1B,KAAKA,mBAAL,CAAyBpJ,WAAzB;IACH;;IACD,IAAI,KAAKqJ,oBAAT,EAA+B;MAC3B,KAAKA,oBAAL,CAA0BrJ,WAA1B;IACH;EACJ;;EACDhQ,SAAS,GAAG;IACR,KAAK5C,MAAL,CAAYoU,IAAZ,CAAiB,KAAK6G,KAAtB;EACH;;AAfe;;AAiBpBc,aAAa,CAAC5F,IAAd;EAAA,iBAA0G4F,aAA1G;AAAA;;AACAA,aAAa,CAAC3F,IAAd,kBAxd+F3X,EAwd/F;EAAA,MAA8Fsd,aAA9F;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;;AACA;EAAA,mDAzd+Ftd,EAyd/F,mBAA2Fsd,aAA3F,EAAsH,CAAC;IAC3GvO,IAAI,EAAE7O,SADqG;IAE3GsI,IAAI,EAAE,CAAC;MACCqP,QAAQ,EAAE;IADX,CAAD;EAFqG,CAAD,CAAtH,QAK4B;IAAE2E,KAAK,EAAE,CAAC;MACtBzN,IAAI,EAAE5O;IADgB,CAAD,CAAT;IAEZoc,UAAU,EAAE,CAAC;MACbxN,IAAI,EAAE5O;IADO,CAAD,CAFA;IAIZiM,MAAM,EAAE,CAAC;MACT2C,IAAI,EAAE5O;IADG,CAAD,CAJI;IAMZoB,MAAM,EAAE,CAAC;MACTwN,IAAI,EAAE3O;IADG,CAAD;EANI,CAL5B;AAAA;;AAeA,MAAMqd,qBAAN,SAAoCH,aAApC,CAAkD;EAC9Cjb,WAAW,GAAG;IACV;EACH;;EACDqY,QAAQ,GAAG;IACP,MAAMgD,KAAK,GAAG,KAAKC,YAAL,CAAkBC,YAAhC;;IACA,IAAI,CAACF,KAAL,EAAY;MACR;IACH;;IACDA,KAAK,CACA/C,IADL,CACUnZ,IAAI,CAAC,CAAD,CADd,EACmBC,oBAAoB,EADvC,EAC2CC,YAAY,CAAC,KAAKE,KAAN,CADvD,EAEKkT,SAFL,CAEgB5I,KAAD,IAAW,KAAK/H,SAAL,EAF1B;EAGH;;AAZ6C;;AAclDsZ,qBAAqB,CAAC/F,IAAtB;EAAA,iBAAkH+F,qBAAlH;AAAA;;AACAA,qBAAqB,CAAC9F,IAAtB,kBAvf+F3X,EAuf/F;EAAA,MAAsGyd,qBAAtG;EAAA;EAAA;IAAA;MAvf+Fzd,EAuf/F,qBAAyQc,SAAzQ;IAAA;;IAAA;MAAA;;MAvf+Fd,EAuf/F,qBAvf+FA,EAuf/F;IAAA;EAAA;EAAA,WAvf+FA,EAuf/F;EAAA;EAAA;EAAA;EAAA;IAAA;MAvf+FA,EAwf3F,kCADJ;MAvf+FA,EA2fnF;QAAA;MAAA,EAJZ;MAvf+FA,EA6fvF,+BANR;MAvf+FA,EA6ftE,UANzB;MAvf+FA,EA6f7B,eANlE;MAvf+FA,EA8fvF,0EAPR;MAvf+FA,EAigB3F,eAVJ;IAAA;;IAAA;MAvf+FA,EAwfnF,4DADZ;MAvf+FA,EA6ftE,aANzB;MAvf+FA,EA6ftE,2DANzB;MAvf+FA,EA8f5D,aAPnC;MAvf+FA,EA8f5D,yDAPnC;IAAA;EAAA;EAAA,aAW0Ca,EAAE,CAACgd,0BAX7C,EAWqO/d,EAAE,CAACoa,OAXxO,EAWgTrZ,EAAE,CAAC6X,eAXnT,EAWqY7X,EAAE,CAAC8X,OAXxY,EAW0kB9X,EAAE,CAACid,cAX7kB,EAWypBjd,EAAE,CAACkd,uBAX5pB,EAWivBje,EAAE,CAACoY,OAXpvB;EAAA;AAAA;;AAYA;EAAA,mDAngB+FlY,EAmgB/F,mBAA2Fyd,qBAA3F,EAA8H,CAAC;IACnH1O,IAAI,EAAE7O,SAD6G;IAEnHsI,IAAI,EAAE,CAAC;MACCoP,QAAQ,EAAE,eADX;MAECC,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAbmB,CAAD;EAF6G,CAAD,CAA9H,EAiB4B,YAAY;IAAE,OAAO,EAAP;EAAY,CAjBtD,EAiBwE;IAAE8F,YAAY,EAAE,CAAC;MACzE5O,IAAI,EAAEtO,SADmE;MAEzE+H,IAAI,EAAE,CAAC,cAAD,EAAiB;QAAE4U,IAAI,EAAEtc,SAAR;QAAmBuc,MAAM,EAAE;MAA3B,CAAjB;IAFmE,CAAD;EAAhB,CAjBxE;AAAA;;AAsBA,MAAMW,uBAAN,SAAsCV,aAAtC,CAAoD;EAChDjb,WAAW,GAAG;IACV;IACA,KAAK4b,YAAL,GAAoB,KAApB;IACA,KAAKN,YAAL,GAAoB,IAAI5c,WAAJ,EAApB;EACH;;EACD2Z,QAAQ,GAAG;IACP,KAAK6C,mBAAL,GAA2B,KAAKI,YAAL,CAAkBC,YAAlB,CACtBjD,IADsB,CACjBjZ,YAAY,CAAC,KAAKE,KAAN,CADK,EAEtBkT,SAFsB,CAEXvJ,OAAD,IAAa;MACxB,KAAK0S,YAAL,GAAoB,IAApB;MACA,MAAMC,OAAO,GAAI,KAAK9R,MAAL,CAAYiE,eAAZ,MAAiC,KAAKjE,MAAL,CAAYiE,eAAZ,GAA8B8N,IAAhE,IAAyE,IAAzF;MACA,MAAMC,QAAQ,GAAI,KAAKhS,MAAL,CAAYiE,eAAZ,MAAiC,KAAKjE,MAAL,CAAYiE,eAAZ,GAA8BgO,KAAhE,IAA0E,KAA3F;MACA,KAAK7B,KAAL,GAAajR,OAAO,GAAG2S,OAAH,GAAaE,QAAjC;MACA,KAAKja,SAAL;IACH,CAR0B,CAA3B;EASH;;EACDma,WAAW,CAAC1E,KAAD,EAAQ;IACfA,KAAK,CAACC,cAAN;IACA,KAAK2C,KAAL,GAAa,EAAb;IACA,KAAKmB,YAAL,CAAkB3Q,QAAlB,CAA2B,KAA3B,EAAkC;MAAEuR,SAAS,EAAE;IAAb,CAAlC;IACA,KAAKN,YAAL,GAAoB,KAApB;IACA,KAAK9Z,SAAL;EACH;;AAvB+C;;AAyBpD6Z,uBAAuB,CAACtG,IAAxB;EAAA,iBAAoHsG,uBAApH;AAAA;;AACAA,uBAAuB,CAACrG,IAAxB,kBAnjB+F3X,EAmjB/F;EAAA,MAAwGge,uBAAxG;EAAA;EAAA,WAnjB+Fhe,EAmjB/F;EAAA;EAAA;EAAA;EAAA;IAAA;MAnjB+FA,EAojB3F,yBADJ;MAnjB+FA,EAqjB3F,kEAFJ;IAAA;;IAAA;MAnjB+FA,EAojBpE,uEAD3B;MAnjB+FA,EAqjB9E,aAFjB;MAnjB+FA,EAqjB9E,qCAFjB;IAAA;EAAA;EAAA,aAI0Ca,EAAE,CAAC4X,4BAJ7C,EAIwM5X,EAAE,CAAC6X,eAJ3M,EAI6R7X,EAAE,CAAC2d,oBAJhS,EAI6b1e,EAAE,CAACoa,OAJhc,EAIwgBpa,EAAE,CAACma,IAJ3gB;EAAA;AAAA;;AAKA;EAAA,mDAxjB+Fja,EAwjB/F,mBAA2Fge,uBAA3F,EAAgI,CAAC;IACrHjP,IAAI,EAAE7O,SAD+G;IAErHsI,IAAI,EAAE,CAAC;MACCoP,QAAQ,EAAE,iBADX;MAECC,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;IANmB,CAAD;EAF+G,CAAD,CAAhI,EAU4B,YAAY;IAAE,OAAO,EAAP;EAAY,CAVtD;AAAA;;AAYA,MAAM4G,wBAAN,SAAuCnB,aAAvC,CAAqD;EACjDjb,WAAW,CAACqc,gBAAD,EAAmB;IAC1B;IACA,KAAKA,gBAAL,GAAwBA,gBAAxB;IACA,KAAKC,gBAAL,GAAwB,IAAIxd,OAAJ,EAAxB;EACH;;EACDuZ,QAAQ,GAAG;IACP,MAAMjL,MAAM,GAAG,KAAKrD,MAAL,CAAYiE,eAAZ,GAA8BuO,SAA7C;IACAnP,MAAM,CAACoP,WAAP,GAAqB,KAAKH,gBAAL,CAAsBI,KAAtB,CAA4BrP,MAAM,CAAC5M,IAAnC,EAAyC4M,MAAM,CAACsP,YAAhD,EAA8DtP,MAAM,CAACuP,UAArE,CAArB;IACAvP,MAAM,CAACoP,WAAP,CAAmBI,gBAAnB,CAAoCxP,MAAM,CAACwP,gBAA3C;IACA,KAAK1B,mBAAL,GAA2B,KAAKoB,gBAAL,CACtBhE,IADsB,CACjBhZ,GAAG,CAAEud,EAAD,IAASA,EAAE,IAAIA,EAAE,CAAC9R,KAAV,IAAoB8R,EAApB,IAA0B,EAAnC,CADc,EAC0Bzd,oBAAoB,EAD9C,EACkDC,YAAY,CAAC,KAAKE,KAAN,CAD9D,EAEtBkT,SAFsB,CAEX1N,MAAD,IAAY;MACvB,KAAKoV,KAAL,GAAapV,MAAb;MACA,KAAKjD,SAAL;IACH,CAL0B,CAA3B;EAMH;;EACDgb,gBAAgB,CAACvF,KAAD,EAAQ;IACpB;IACA;IACA;IACA,IAAIA,KAAK,KAAK,EAAd,EAAkB;MACd,KAAK+E,gBAAL,CAAsBha,IAAtB,CAA2BiV,KAA3B;IACH;EACJ;;AAxBgD;;AA0BrD6E,wBAAwB,CAAC/G,IAAzB;EAAA,iBAAqH+G,wBAArH,EA9lB+Fze,EA8lB/F,mBAA+J8B,IAAI,CAACsd,gBAApK;AAAA;;AACAX,wBAAwB,CAAC9G,IAAzB,kBA/lB+F3X,EA+lB/F;EAAA,MAAyGye,wBAAzG;EAAA;EAAA,WA/lB+Fze,EA+lB/F;EAAA;EAAA;EAAA;EAAA;IAAA;MA/lB+FA,EAgmB3F,sCADJ;MA/lB+FA,EAgmB5E;QAAA;MAAA;QAAA,OACiB,4BADjB;MAAA;QAAA,OAMY,iCANZ;MAAA,EADnB;MA/lB+FA,EAumB3F,eARJ;IAAA;;IAAA;MA/lB+FA,EAgmB5E,wUADnB;IAAA;EAAA;EAAA,aAS0C8B,IAAI,CAACud,YAT/C,EAS0mBxe,EAAE,CAAC6X,eAT7mB,EAS+rB7X,EAAE,CAAC8X,OATlsB;EAAA;AAAA;;AAUA;EAAA,mDAzmB+F3Y,EAymB/F,mBAA2Fye,wBAA3F,EAAiI,CAAC;IACtH1P,IAAI,EAAE7O,SADgH;IAEtHsI,IAAI,EAAE,CAAC;MACCoP,QAAQ,EAAE,kBADX;MAECC,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAXmB,CAAD;EAFgH,CAAD,CAAjI,EAe4B,YAAY;IAAE,OAAO,CAAC;MAAE9I,IAAI,EAAEjN,IAAI,CAACsd;IAAb,CAAD,CAAP;EAA2C,CAfrF;AAAA;;AAiBA,MAAME,mBAAN,SAAkChC,aAAlC,CAAgD;EAC5Cjb,WAAW,GAAG;IACV;IACA,KAAKkd,SAAL,GAAiB,IAAIxe,WAAJ,EAAjB;IACA,KAAKye,OAAL,GAAe,IAAIze,WAAJ,EAAf;IACA,KAAK0e,UAAL,GAAkB,IAAI1e,WAAJ,EAAlB;IACA,KAAK2e,SAAL,GAAiB,IAAI3e,WAAJ,EAAjB;IACA,KAAK4e,SAAL,GAAiB,IAAI5e,WAAJ,EAAjB;IACA,KAAK6e,gBAAL,GAAwB,IAAI7e,WAAJ,EAAxB;IACA,KAAK8e,UAAL,GAAkB,OAAlB;IACA,KAAKC,aAAL,GAAqB,CAAC,QAAD,EAAW,OAAX,EAAoB,OAApB,EAA6B,SAA7B,CAArB;EACH;;EACDpF,QAAQ,GAAG;IACP,KAAK8C,oBAAL,GAA4B,KAAKoC,gBAAL,CAAsBhC,YAAtB,CAAmC9I,SAAnC,CAA6C5I,KAAK,IAAI;MAC9E,KAAK2T,UAAL,GAAkB3T,KAAlB;;MACA,IAAI,KAAKqR,mBAAT,EAA8B;QAC1B,KAAKA,mBAAL,CAAyBpJ,WAAzB;MACH;;MACD,KAAKoJ,mBAAL,GAA2B,KAAKnN,aAAL,GACtB0E,SADsB,CACX5I,KAAD,IAAW;QACtB,KAAKsQ,KAAL,GAAatQ,KAAb;QACA,KAAK/H,SAAL;MACH,CAJ0B,CAA3B;IAKH,CAV2B,CAA5B;EAWH;;EACDiM,aAAa,GAAG;IACZ,QAAQ,KAAKyP,UAAb;MACI,KAAK,QAAL;QAAe;UACX,OAAO,KAAKJ,UAAL,CAAgB7B,YAAhB,CAA6BjD,IAA7B,CAAkChZ,GAAG,CAAEuK,KAAD,IAAW,kBAAkBA,KAA9B,CAArC,CAAP;QACH;;MACD,KAAK,OAAL;QAAc;UACV,OAAO,KAAKwT,SAAL,CAAe9B,YAAf,CAA4BjD,IAA5B,CAAiChZ,GAAG,CAAEuK,KAAD,IAAW,iBAAiBA,KAA7B,CAApC,CAAP;QACH;;MACD,KAAK,OAAL;QAAc;UACV,OAAO,KAAKyT,SAAL,CAAe/B,YAAf,CAA4BjD,IAA5B,CAAiChZ,GAAG,CAAEuK,KAAD,IAAW,iBAAiBA,KAA7B,CAApC,CAAP;QACH;;MACD,KAAK,SAAL;QAAgB;UACZ,OAAO7K,aAAa,CAAC,CAAC,KAAKke,SAAL,CAAe3B,YAAhB,EAA8B,KAAK4B,OAAL,CAAa5B,YAA3C,CAAD,CAAb,CACFjD,IADE,CACGhZ,GAAG,CAAC,CAAC,CAACoe,IAAD,EAAOC,IAAP,CAAD,KAAkB;YAC5B,OAAO,iBAAiBD,IAAjB,GAAwB,YAAxB,GAAuCC,IAA9C;UACH,CAFY,CADN,CAAP;QAIH;;MACD;QACI,OAAO5e,EAAE,CAAC,EAAD,CAAT;IAjBR;EAmBH;;AA7C2C;;AA+ChDke,mBAAmB,CAAC5H,IAApB;EAAA,iBAAgH4H,mBAAhH;AAAA;;AACAA,mBAAmB,CAAC3H,IAApB,kBA1qB+F3X,EA0qB/F;EAAA,MAAoGsf,mBAApG;EAAA;EAAA,WA1qB+Ftf,EA0qB/F;EAAA;EAAA;EAAA;EAAA;IAAA;MA1qB+FA,EA2qB3F,+BADJ;MA1qB+FA,EA4qBzF,wEAFN;MA1qB+FA,EA6qB3F,eAHJ;MA1qB+FA,EA8qB3F,4BAJJ;MA1qB+FA,EA+qB1F,sEALL;MA1qB+FA,EAgrB1F,sEANL;MA1qB+FA,EAirB1F,sEAPL;MA1qB+FA,EAkrB1F,sEARL;MA1qB+FA,EAmrB1F,sEATL;MA1qB+FA,EAorB3F,eAVJ;IAAA;;IAAA;MA1qB+FA,EA2qBnF,gDADZ;MA1qB+FA,EA4qB5C,aAFnD;MA1qB+FA,EA4qB5C,yCAFnD;MA1qB+FA,EA8qBtF,aAJT;MA1qB+FA,EA8qBtF,uCAJT;MA1qB+FA,EA+qBlF,aALb;MA1qB+FA,EA+qBlF,qCALb;MA1qB+FA,EAgrBlF,aANb;MA1qB+FA,EAgrBlF,oCANb;MA1qB+FA,EAirBlF,aAPb;MA1qB+FA,EAirBlF,oCAPb;MA1qB+FA,EAkrBlF,aARb;MA1qB+FA,EAkrBlF,sCARb;MA1qB+FA,EAmrBlF,aATb;MA1qB+FA,EAmrBlF,sCATb;IAAA;EAAA;EAAA,aAW0Ca,EAAE,CAACgd,0BAX7C,EAWqOhd,EAAE,CAAC6X,eAXxO,EAW0T7X,EAAE,CAAC2d,oBAX7T,EAW0d1e,EAAE,CAACoY,OAX7d,EAWokBrX,EAAE,CAACid,cAXvkB,EAWmpBjd,EAAE,CAACkd,uBAXtpB,EAW2uBje,EAAE,CAACmgB,QAX9uB,EAWgzBngB,EAAE,CAACogB,YAXnzB,EAWi4Brf,EAAE,CAACsf,oBAXp4B,EAW8nCrgB,EAAE,CAACoa,OAXjoC;EAAA;AAAA;;AAYA;EAAA,mDAtrB+Fla,EAsrB/F,mBAA2Fsf,mBAA3F,EAA4H,CAAC;IACjHvQ,IAAI,EAAE7O,SAD2G;IAEjHsI,IAAI,EAAE,CAAC;MACCoP,QAAQ,EAAE,aADX;MAECC,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAbmB,CAAD;EAF2G,CAAD,CAA5H,EAiB4B,YAAY;IAAE,OAAO,EAAP;EAAY,CAjBtD;AAAA;;AAmBA,MAAMuI,sBAAN,SAAqC9C,aAArC,CAAmD;EAC/Cjb,WAAW,CAACge,IAAD,EAAO;IACd;IACA,KAAKA,IAAL,GAAYA,IAAZ;IACA,KAAKzI,QAAL,GAAgB,KAAhB;IACA,KAAK0I,YAAL,GAAoB,EAApB;IACA,KAAKhW,aAAL,GAAqB,EAArB;IACA,KAAKiW,gBAAL,GAAwB,EAAxB;EACH;;EACD7F,QAAQ,GAAG;IACP,KAAKtO,MAAL,CAAY8D,cAAZ,GAA6B,KAAKsQ,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAA7B;IACA,MAAMhR,MAAM,GAAG,KAAKrD,MAAL,CAAYiE,eAAZ,EAAf;IACA,KAAKiQ,YAAL,GAAoB7Q,MAAM,CAAC6Q,YAAP,IAAuB,EAA3C;IACA,KAAKhW,aAAL,GAAqBmF,MAAM,CAACnF,aAAP,IAAwB,EAA7C;IACA,IAAIoW,OAAO,GAAG;MACVC,eAAe,EAAE,KADP;MAEVC,IAAI,EAAE,QAFI;MAGVC,aAAa,EAAE,YAHL;MAIVC,eAAe,EAAE,cAJP;MAKVC,kBAAkB,EAAE,IALV;MAMVC,OAAO,EAAE,SANC;MAOVC,SAAS,EAAE,GAPD;MAQV3M,QAAQ,EAAE,KARA;MASV4M,YAAY,EAAE;IATJ,CAAd;IAWA,KAAKX,gBAAL,GAAwBvX,MAAM,CAACoF,MAAP,CAAcsS,OAAd,EAAuBjR,MAAM,CAAC8Q,gBAA9B,CAAxB;EACH;;EACDC,cAAc,CAACrZ,SAAD,EAAYC,MAAZ,EAAoBvE,IAApB,EAA0BwE,QAA1B,EAAoC;IAC9C,IAAID,MAAM,CAAC4E,OAAP,CAAe,KAAK4L,QAApB,KAAiC,CAAC,CAAtC,EAAyC;MACrC,IAAIuJ,WAAW,GAAG/Z,MAAM,CAACR,KAAP,CAAa,KAAKgR,QAAlB,CAAlB;MACA,OAAOuJ,WAAW,CAACnV,OAAZ,CAAoB7E,SAApB,KAAkC,CAAC,CAA1C;IACH;;IACD,OAAOD,4BAA4B,CAACC,SAAD,EAAYC,MAAZ,EAAoBvE,IAApB,EAA0BwE,QAA1B,CAAnC;EACH;;EACD+Z,YAAY,CAAC3J,IAAD,EAAO;IACf,KAAK4J,WAAL;EACH;;EACDC,cAAc,CAAC7J,IAAD,EAAO;IACjB,KAAK4J,WAAL;EACH;;EACDE,WAAW,CAACC,KAAD,EAAQ;IACf,KAAKH,WAAL;EACH;;EACDI,aAAa,CAACD,KAAD,EAAQ;IACjB,KAAKH,WAAL;EACH;;EACDA,WAAW,GAAG;IACV,KAAK7E,KAAL,GAAa,KAAKlS,aAAL,CAAmB3I,GAAnB,CAAuB8V,IAAI,IAAIA,IAAI,CAACvK,EAApC,EAAwCwU,IAAxC,CAA6C,KAAK9J,QAAlD,CAAb,CADU,CACgE;;IAC1E,KAAKzT,SAAL;EACH;;AAjD8C;;AAmDnDic,sBAAsB,CAAC1I,IAAvB;EAAA,iBAAmH0I,sBAAnH,EA5vB+FpgB,EA4vB/F,mBAA2JgC,IAAI,CAAC2f,UAAhK;AAAA;;AACAvB,sBAAsB,CAACzI,IAAvB,kBA7vB+F3X,EA6vB/F;EAAA,MAAuGogB,sBAAvG;EAAA;EAAA,WA7vB+FpgB,EA6vB/F;EAAA;EAAA;EAAA;EAAA;IAAA;MA7vB+FA,EA6vB4G,6CAA3M;MA7vB+FA,EA8vB3F;QAAA;MAAA;QAAA,OAEY,wBAFZ;MAAA;QAAA,OAGc,0BAHd;MAAA;QAAA,OAIe,uBAJf;MAAA;QAAA,OAKiB,yBALjB;MAAA,EADJ;MA7vB+FA,EAowB3F,eAPJ;IAAA;;IAAA;MA7vB+FA,EA6vBkI,qGAAjO;IAAA;EAAA;EAAA,aAOmEkC,IAAI,CAAC0f,kBAPxE,EAOgZ/gB,EAAE,CAAC6X,eAPnZ,EAOqe7X,EAAE,CAAC8X,OAPxe;EAAA;AAAA;;AAQA;EAAA,mDArwB+F3Y,EAqwB/F,mBAA2FogB,sBAA3F,EAA+H,CAAC;IACpHrR,IAAI,EAAE7O,SAD8G;IAEpHsI,IAAI,EAAE,CAAC;MACCoP,QAAQ,EAAE,gBADX;MAECC,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;IATmB,CAAD;EAF8G,CAAD,CAA/H,EAa4B,YAAY;IAAE,OAAO,CAAC;MAAE9I,IAAI,EAAE/M,IAAI,CAAC2f;IAAb,CAAD,CAAP;EAAqC,CAb/E;AAAA;;AAeA,MAAME,oBAAN,SAAmCvE,aAAnC,CAAiD;EAC7Cjb,WAAW,GAAG;IACV;IACA,KAAKsb,YAAL,GAAoB,IAAI5c,WAAJ,EAApB;EACH;;EACD2Z,QAAQ,GAAG;IACP,IAAI,KAAK8B,KAAT,EAAgB;MACZ,KAAKmB,YAAL,CAAkB3Q,QAAlB,CAA2B,KAAKwP,KAAhC;IACH;;IACD,KAAKmB,YAAL,CAAkBC,YAAlB,CACKjD,IADL,CACUlZ,oBAAoB,EAD9B,EACkCC,YAAY,CAAC,KAAKE,KAAN,CAD9C,EAEKkT,SAFL,CAEgB5I,KAAD,IAAW;MACtB,KAAKsQ,KAAL,GAAa,KAAKmB,YAAL,CAAkBzR,KAA/B;MACA,KAAK/H,SAAL;IACH,CALD;EAMH;;EACDgV,WAAW,CAACpE,OAAD,EAAU;IACjB,IAAIA,OAAO,CAACyH,KAAZ,EAAmB;MACf,KAAKmB,YAAL,CAAkB3Q,QAAlB,CAA2B,KAAKwP,KAAhC;IACH;EACJ;;AApB4C;;AAsBjDqF,oBAAoB,CAACnK,IAArB;EAAA,iBAAiHmK,oBAAjH;AAAA;;AACAA,oBAAoB,CAAClK,IAArB,kBA3yB+F3X,EA2yB/F;EAAA,MAAqG6hB,oBAArG;EAAA;EAAA,WA3yB+F7hB,EA2yB/F,6BA3yB+FA,EA2yB/F;EAAA;EAAA;EAAA;EAAA;IAAA;MA3yB+FA,EA4yB3F,yBADJ;IAAA;;IAAA;MA3yB+FA,EAizBzF,iFANN;MA3yB+FA,EA6yBzF,uEAFN;IAAA;EAAA;EAAA,aAO0Ca,EAAE,CAACsf,oBAP7C,EAOuSrgB,EAAE,CAACoa,OAP1S,EAOkXrZ,EAAE,CAAC6X,eAPrX,EAOuc7X,EAAE,CAAC2d,oBAP1c;EAAA;AAAA;;AAQA;EAAA,mDAnzB+Fxe,EAmzB/F,mBAA2F6hB,oBAA3F,EAA6H,CAAC;IAClH9S,IAAI,EAAE7O,SAD4G;IAElHsI,IAAI,EAAE,CAAC;MACCoP,QAAQ,EAAE,cADX;MAECC,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;IATmB,CAAD;EAF4G,CAAD,CAA7H,EAa4B,YAAY;IAAE,OAAO,EAAP;EAAY,CAbtD;AAAA;;AAeA,MAAMiK,sBAAN,SAAqCxF,aAArC,CAAmD;;AAEnDwF,sBAAsB,CAACpK,IAAvB;EAAA;EAAA;IAAA,sFAp0B+F1X,EAo0B/F,uBAAmH8hB,sBAAnH,SAAmHA,sBAAnH;EAAA;AAAA;;AACAA,sBAAsB,CAACnK,IAAvB,kBAr0B+F3X,EAq0B/F;EAAA,MAAuG8hB,sBAAvG;EAAA;EAAA;IAAA;EAAA;EAAA,WAr0B+F9hB,EAq0B/F;EAAA;EAAA;EAAA;EAAA;IAAA;MAr0B+FA,EAs0B3F,8BADJ;MAr0B+FA,EAu0BzF,yFAFN;MAr0B+FA,EA60BzF,6FARN;MAr0B+FA,EAm1BzF,+FAdN;MAr0B+FA,EAy1BzF,qFApBN;MAr0B+FA,EA+1BzF,2FA1BN;MAr0B+FA,EAq2BzF,uFAhCN;MAr0B+FA,EA22B3F,wBAtCJ;IAAA;;IAAA;MAr0B+FA,EAs0B7E,mDADlB;MAr0B+FA,EAu0BzE,aAFtB;MAr0B+FA,EAu0BzE,mCAFtB;MAr0B+FA,EA60BvE,aARxB;MAr0B+FA,EA60BvE,uCARxB;MAr0B+FA,EAm1BtE,aAdzB;MAr0B+FA,EAm1BtE,wCAdzB;MAr0B+FA,EAy1B3E,aApBpB;MAr0B+FA,EAy1B3E,mCApBpB;MAr0B+FA,EA+1BxE,aA1BvB;MAr0B+FA,EA+1BxE,uCA1BvB;IAAA;EAAA;EAAA,aAuC0Cyd,qBAvC1C,EAuCsGO,uBAvCtG,EAuCsKS,wBAvCtK,EAuCwOa,mBAvCxO,EAuCgSc,sBAvChS,EAuC8VyB,oBAvC9V,EAuCsa/hB,EAAE,CAACmgB,QAvCza,EAuC2engB,EAAE,CAACogB,YAvC9e,EAuC4jBpgB,EAAE,CAACoa,OAvC/jB,EAuCuoBpa,EAAE,CAACiiB,eAvC1oB;EAAA;AAAA;;AAwCA;EAAA,mDA72B+F/hB,EA62B/F,mBAA2F8hB,sBAA3F,EAA+H,CAAC;IACpH/S,IAAI,EAAE7O,SAD8G;IAEpHsI,IAAI,EAAE,CAAC;MACCoP,QAAQ,EAAE,sBADX;MAECC,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAzCmB,CAAD;EAF8G,CAAD,CAA/H,QA6C4B;IAAE2E,KAAK,EAAE,CAAC;MACtBzN,IAAI,EAAE5O;IADgB,CAAD;EAAT,CA7C5B;AAAA;;AAiDA,MAAM6hB,eAAN,SAA8B1F,aAA9B,CAA4C;EACxCja,WAAW,GAAG;IACV,MAAM,GAAGiG,SAAT;IACA,KAAKkU,KAAL,GAAa,EAAb;EACH;;EACDrD,WAAW,CAACpE,OAAD,EAAU;IACjB,IAAIA,OAAO,CAACpB,MAAZ,EAAoB;MAChB,IAAI,CAACoB,OAAO,CAACpB,MAAR,CAAe6F,WAApB,EAAiC;QAC7B,KAAKC,cAAL,CAAoBtF,WAApB;MACH;;MACD,KAAKsF,cAAL,GAAsB,KAAK9F,MAAL,CAAY3Q,SAAZ,GAAwB8R,SAAxB,CAAmC4E,WAAD,IAAiB;QACrE,MAAMvP,UAAU,GAAG,KAAKwJ,MAAL,CAAYzO,SAAZ,EAAnB;;QACA,IAAIiF,UAAU,IAAIA,UAAU,CAACC,OAAzB,IAAoCD,UAAU,CAACC,OAAX,CAAmBrD,MAAnB,KAA8B,CAAtE,EAAyE;UACrE,KAAKyV,KAAL,GAAa,EAAb,CADqE,CAErE;UACA;QACH,CAJD,MAKK,IAAIrS,UAAU,IAAIA,UAAU,CAACC,OAAzB,IAAoCD,UAAU,CAACC,OAAX,CAAmBrD,MAAnB,GAA4B,CAApE,EAAuE;UACxEoD,UAAU,CAACC,OAAX,CAAmBvB,OAAnB,CAA2B,CAACc,CAAD,EAAIsY,CAAJ,KAAU;YACjC,IAAItY,CAAC,CAACtD,KAAF,IAAW,KAAK+F,MAAL,CAAYc,EAA3B,EAA+B;cAC3B,KAAKsP,KAAL,GAAa7S,CAAC,CAACvC,MAAf;YACH;UACJ,CAJD;QAKH;MACJ,CAdqB,CAAtB;IAeH;EACJ;;AA1BuC;;AA4B5C4a,eAAe,CAACtK,IAAhB;EAAA;EAAA;IAAA,wEA17B+F1X,EA07B/F,uBAA4GgiB,eAA5G,SAA4GA,eAA5G;EAAA;AAAA;;AACAA,eAAe,CAACrK,IAAhB,kBA37B+F3X,EA27B/F;EAAA,MAAgGgiB,eAAhG;EAAA;EAAA,WA37B+FhiB,EA27B/F,6BA37B+FA,EA27B/F;EAAA;EAAA;EAAA;EAAA;IAAA;MA37B+FA,EA47BzF,8DADN;IAAA;;IAAA;MA37B+FA,EA47BrD,4CAD1C;IAAA;EAAA;EAAA,aAiBkb0c,qBAjBlb,EAiBugBoF,sBAjBvgB,EAiB4mBhiB,EAAE,CAACma,IAjB/mB,EAiB6rBna,EAAE,CAACmgB,QAjBhsB,EAiBkwBngB,EAAE,CAACogB,YAjBrwB,EAiBm1BpgB,EAAE,CAACiiB,eAjBt1B;EAAA;AAAA;;AAkBA;EAAA,mDA78B+F/hB,EA68B/F,mBAA2FgiB,eAA3F,EAAwH,CAAC;IAC7GjT,IAAI,EAAE7O,SADuG;IAE7GsI,IAAI,EAAE,CAAC;MAAEoP,QAAQ,EAAE,6BAAZ;MAA2CC,QAAQ,EAAG;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAjBmB;MAiBZC,MAAM,EAAE,CAAC,0XAAD;IAjBI,CAAD;EAFuG,CAAD,CAAxH;AAAA;;AAsBA,MAAMoK,wBAAN,CAA+B;EAC3B7f,WAAW,GAAG;IACV,KAAKgT,MAAL,GAAc,IAAIpV,YAAJ,EAAd;IACA,KAAKsB,MAAL,GAAc,IAAItB,YAAJ,EAAd;EACH;;EACDkZ,WAAW,GAAG;IACV,KAAKzE,oBAAL,GAA4B,KAAKkE,IAAL,CAAUlE,oBAAV,EAA5B;IACA,KAAKoH,oBAAL,GAA4B,KAAKlD,IAAL,CAAUvE,gBAAV,CAA2B,MAA3B,CAA5B;IACA,KAAK0H,qBAAL,GAA6B,KAAKnD,IAAL,CAAUvE,gBAAV,CAA2B,OAA3B,CAA7B;IACA,KAAK8N,gBAAL,GAAwB,KAAKvJ,IAAL,CAAUnE,UAAV,CAAqB,mBAArB,CAAxB;EACH;;EACDwH,iBAAiB,CAAC1K,OAAD,EAAU;IACvB,OAAO,CAACA,OAAO,IAAI,EAAZ,EAAgBhQ,MAAhB,CAAwB6K,MAAD,IAAY,CAACA,MAAM,CAAC0C,IAA3C,CAAP;EACH;;AAb0B;;AAe/BoT,wBAAwB,CAACxK,IAAzB;EAAA,iBAAqHwK,wBAArH;AAAA;;AACAA,wBAAwB,CAACvK,IAAzB,kBAn/B+F3X,EAm/B/F;EAAA,MAAyGkiB,wBAAzG;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA,WAn/B+FliB,EAm/B/F;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAn/B+FA,EAo/B3F,qEADJ;MAn/B+FA,EAq/B3F,qEAFJ;MAn/B+FA,EAy/B3F,qEANJ;MAn/B+FA,EAggC3F,qEAbJ;IAAA;;IAAA;MAn/B+FA,EAo/BtF,6CADT;MAn/B+FA,EAq/B/D,aAFhC;MAn/B+FA,EAq/B/D,6CAFhC;MAn/B+FA,EAy/BpE,aAN3B;MAn/B+FA,EAy/BpE,oEAN3B;MAn/B+FA,EAggC/D,aAbhC;MAn/B+FA,EAggC/D,8CAbhC;IAAA;EAAA;EAAA,aAkB0Ckc,kBAlB1C,EAkB+J8F,eAlB/J,EAkBiPliB,EAAE,CAACma,IAlBpP,EAkBkUna,EAAE,CAACoY,OAlBrU;EAAA;AAAA;;AAmBA;EAAA,mDAtgC+FlY,EAsgC/F,mBAA2FkiB,wBAA3F,EAAiI,CAAC;IACtHnT,IAAI,EAAE7O,SADgH;IAEtHsI,IAAI,EAAE,CAAC;MACCoP,QAAQ,EAAE,iCADX;MAECC,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IApBmB,CAAD;EAFgH,CAAD,CAAjI,QAwB4B;IAAEe,IAAI,EAAE,CAAC;MACrB7J,IAAI,EAAE5O;IADe,CAAD,CAAR;IAEZwT,MAAM,EAAE,CAAC;MACT5E,IAAI,EAAE5O;IADG,CAAD,CAFI;IAIZkV,MAAM,EAAE,CAAC;MACTtG,IAAI,EAAE3O;IADG,CAAD,CAJI;IAMZmB,MAAM,EAAE,CAAC;MACTwN,IAAI,EAAE3O;IADG,CAAD;EANI,CAxB5B;AAAA;;AAkCA,MAAMgiB,gBAAN,CAAuB;EACnB/f,WAAW,GAAG;IACV,KAAKgT,MAAL,GAAc,IAAIpV,YAAJ,EAAd;EACH;;EACDkZ,WAAW,GAAG;IACV,KAAKkJ,mBAAL,GAA2B,KAAKzJ,IAAL,CAAUnE,UAAV,CAAqB,yBAArB,CAA3B;IACA,KAAK6N,mBAAL,GAA2B,KAAK1J,IAAL,CAAUnE,UAAV,CAAqB,yBAArB,CAA3B;EACH;;AAPkB;;AASvB2N,gBAAgB,CAAC1K,IAAjB;EAAA,iBAA6G0K,gBAA7G;AAAA;;AACAA,gBAAgB,CAACzK,IAAjB,kBAljC+F3X,EAkjC/F;EAAA,MAAiGoiB,gBAAjG;EAAA;EAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA,WAljC+FpiB,EAkjC/F;EAAA;EAAA;EAAA;EAAA;IAAA;MAljC+FA,EAmjC3F,0BADJ;MAljC+FA,EAqjCvF;QAAS,uBAAT;QAAA,OAAiC,uBAAjC;MAAA,EAHR;MAljC+FA,EAqjCjC,eAH9D;MAljC+FA,EAsjC3F,0BAJJ;MAljC+FA,EAwjCvF;QAAS,uBAAT;QAAA,kCAAwD,KAAxD;MAAA,EANR;MAljC+FA,EAwjCvB,eANxE;IAAA;;IAAA;MAljC+FA,EAojCvF,kDApjCuFA,EAojCvF,gBAFR;MAljC+FA,EAujCvF,aALR;MAljC+FA,EAujCvF,kDAvjCuFA,EAujCvF,gBALR;IAAA;EAAA;EAAA;AAAA;;AAQA;EAAA,mDA1jC+FA,EA0jC/F,mBAA2FoiB,gBAA3F,EAAyH,CAAC;IAC9GrT,IAAI,EAAE7O,SADwG;IAE9GsI,IAAI,EAAE,CAAC;MACCoP,QAAQ,EAAE,qBADX;MAECC,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;IATmB,CAAD;EAFwG,CAAD,CAAzH,QAa4B;IAAEe,IAAI,EAAE,CAAC;MACrB7J,IAAI,EAAE5O;IADe,CAAD,CAAR;IAEZkV,MAAM,EAAE,CAAC;MACTtG,IAAI,EAAE3O;IADG,CAAD;EAFI,CAb5B;AAAA;;AAmBA,MAAMmiB,mBAAN,CAA0B;EACtBlgB,WAAW,CAACsa,QAAD,EAAW;IAClB,KAAKA,QAAL,GAAgBA,QAAhB;EACH;;EACDjC,QAAQ,GAAG;IACP,IAAI,KAAKrM,IAAL,IAAa,CAAC,KAAKuO,eAAvB,EAAwC;MACpC,KAAK4F,qBAAL;MACA,KAAKC,mBAAL;MACA,KAAKC,aAAL;IACH;EACJ;;EACDhH,WAAW,GAAG;IACV,IAAI,KAAKkB,eAAT,EAA0B;MACtB,KAAKA,eAAL,CAAqBM,OAArB;IACH;EACJ;;EACDsF,qBAAqB,GAAG;IACpB,MAAM3F,gBAAgB,GAAG,KAAKF,QAAL,CAAcG,uBAAd,CAAsC,KAAKzO,IAAL,CAAU9B,SAAV,GAAsBoD,eAA5D,CAAzB;IACA,KAAKiN,eAAL,GAAuB,KAAKG,aAAL,CAAmBC,eAAnB,CAAmCH,gBAAnC,CAAvB;EACH;;EACD4F,mBAAmB,GAAG;IAClB,MAAM5S,uBAAuB,GAAG,KAAKxB,IAAL,CAAU9B,SAAV,GAAsBqD,0BAAtB,EAAhC;IACAC,uBAAuB,IAAIA,uBAAuB,CAAC,KAAK+M,eAAL,CAAqBK,QAAtB,EAAgC,KAAK0F,QAAL,EAAhC,CAAlD;EACH;;EACDD,aAAa,GAAG;IACZ1Z,MAAM,CAACoF,MAAP,CAAc,KAAKwO,eAAL,CAAqBK,QAAnC,EAA6C,KAAK0F,QAAL,EAA7C;EACH;;EACDA,QAAQ,GAAG;IACP,OAAO;MACHzW,KAAK,EAAE,KAAKmC,IAAL,CAAU5B,QAAV,EADJ;MAEHmW,OAAO,EAAE,KAAKvU,IAAL,CAAU7B,MAAV,GAAmBO,OAAnB;IAFN,CAAP;EAIH;;AAhCqB;;AAkC1BwV,mBAAmB,CAAC7K,IAApB;EAAA,iBAAgH6K,mBAAhH,EA/mC+FviB,EA+mC/F,mBAAqJA,EAAE,CAACmd,wBAAxJ;AAAA;;AACAoF,mBAAmB,CAAC5K,IAApB,kBAhnC+F3X,EAgnC/F;EAAA,MAAoGuiB,mBAApG;EAAA;EAAA;IAAA;MAhnC+FviB,EAgnC/F,qBAAySQ,gBAAzS;IAAA;;IAAA;MAAA;;MAhnC+FR,EAgnC/F,qBAhnC+FA,EAgnC/F;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAhnC+FA,EAinC3F,yFAjnC2FA,EAinC3F,wBADJ;IAAA;EAAA;EAAA;AAAA;;AAGA;EAAA,mDAnnC+FA,EAmnC/F,mBAA2FuiB,mBAA3F,EAA4H,CAAC;IACjHxT,IAAI,EAAE7O,SAD2G;IAEjHsI,IAAI,EAAE,CAAC;MACCoP,QAAQ,EAAE,uBADX;MAECC,QAAQ,EAAG;AAC/B;AACA;IAJmB,CAAD;EAF2G,CAAD,CAA5H,EAQ4B,YAAY;IAAE,OAAO,CAAC;MAAE9I,IAAI,EAAE/O,EAAE,CAACmd;IAAX,CAAD,CAAP;EAAiD,CAR3F,EAQ6G;IAAE9O,IAAI,EAAE,CAAC;MACtGU,IAAI,EAAE5O;IADgG,CAAD,CAAR;IAE7F4c,aAAa,EAAE,CAAC;MAChBhO,IAAI,EAAEtO,SADU;MAEhB+H,IAAI,EAAE,CAAC,eAAD,EAAkB;QAAE4U,IAAI,EAAE5c,gBAAR;QAA0B6c,MAAM,EAAE;MAAlC,CAAlB;IAFU,CAAD;EAF8E,CAR7G;AAAA;;AAeA,MAAMwF,iBAAN,CAAwB;;AAExBA,iBAAiB,CAACnL,IAAlB;EAAA,iBAA8GmL,iBAA9G;AAAA;;AACAA,iBAAiB,CAAClL,IAAlB,kBAroC+F3X,EAqoC/F;EAAA,MAAkG6iB,iBAAlG;EAAA;EAAA;IAAA;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAroC+F7iB,EAsoC3F,4BADJ;MAroC+FA,EAuoCvF,oGAFR;MAroC+FA,EAwoCvF,gEAHR;MAroC+FA,EAyoCvF,gEAJR;MAroC+FA,EA0oC3F,eALJ;IAAA;;IAAA;MAroC+FA,EAsoCtF,kDADT;MAroC+FA,EAuoC/D,aAFhC;MAroC+FA,EAuoC/D,qCAFhC;MAroC+FA,EAwoCjF,aAHd;MAroC+FA,EAwoCjF,mCAHd;IAAA;EAAA;EAAA,aAM4CuiB,mBAN5C,EAM8IziB,EAAE,CAACmgB,QANjJ,EAMmNngB,EAAE,CAACogB,YANtN,EAMoSpgB,EAAE,CAACiiB,eANvS;EAAA;EAAA;AAAA;;AAOA;EAAA,mDA5oC+F/hB,EA4oC/F,mBAA2F6iB,iBAA3F,EAA0H,CAAC;IAC/G9T,IAAI,EAAE7O,SADyG;IAE/GsI,IAAI,EAAE,CAAC;MACCoP,QAAQ,EAAE,sBADX;MAECkL,eAAe,EAAEpiB,uBAAuB,CAACqiB,MAF1C;MAGClL,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;IATmB,CAAD;EAFyG,CAAD,CAA1H,QAa4B;IAAExJ,IAAI,EAAE,CAAC;MACrBU,IAAI,EAAE5O;IADe,CAAD;EAAR,CAb5B;AAAA;;AAiBA,MAAM6iB,eAAN,CAAsB;EAClB3gB,WAAW,GAAG;IACV,KAAKka,UAAL,GAAkB,EAAlB;IACA,KAAK0G,MAAL,GAAc,IAAIhjB,YAAJ,EAAd;EACH;;EACDijB,QAAQ,CAACtJ,KAAD,EAAQ;IACZ,KAAKqJ,MAAL,CAAYte,IAAZ,CAAiBiV,KAAjB;IACA,OAAO,KAAP;EACH;;EACDuJ,aAAa,GAAG;IACZ,KAAK9U,IAAL,CAAU7B,MAAV,GAAmBkB,WAAnB,GAAiC,KAAjC;IACA,OAAO,KAAP;EACH;;EACD0V,OAAO,CAACxJ,KAAD,EAAQ;IACXA,KAAK,CAACpC,eAAN;EACH;;AAfiB;;AAiBtBwL,eAAe,CAACtL,IAAhB;EAAA,iBAA4GsL,eAA5G;AAAA;;AACAA,eAAe,CAACrL,IAAhB,kBA/qC+F3X,EA+qC/F;EAAA,MAAgGgjB,eAAhG;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;;AACA;EAAA,mDAhrC+FhjB,EAgrC/F,mBAA2FgjB,eAA3F,EAAwH,CAAC;IAC7GjU,IAAI,EAAE7O,SADuG;IAE7GsI,IAAI,EAAE,CAAC;MACCqP,QAAQ,EAAE;IADX,CAAD;EAFuG,CAAD,CAAxH,QAK4B;IAAExJ,IAAI,EAAE,CAAC;MACrBU,IAAI,EAAE5O;IADe,CAAD,CAAR;IAEZoc,UAAU,EAAE,CAAC;MACbxN,IAAI,EAAE5O;IADO,CAAD,CAFA;IAIZ8iB,MAAM,EAAE,CAAC;MACTlU,IAAI,EAAE3O;IADG,CAAD;EAJI,CAL5B;AAAA;;AAaA,MAAMijB,mBAAN,SAAkCL,eAAlC,CAAkD;EAC9C3gB,WAAW,CAACsa,QAAD,EAAW;IAClB;IACA,KAAKA,QAAL,GAAgBA,QAAhB;EACH;;EACDxD,WAAW,CAACpE,OAAD,EAAU;IACjB,IAAI,KAAK1G,IAAL,IAAa,CAAC,KAAKuO,eAAvB,EAAwC;MACpC,MAAMpN,MAAM,GAAG,KAAKnB,IAAL,CAAU9B,SAAV,GAAsBiD,MAArC;MACA,IAAI,CAACA,MAAL,EACI;MACJ,MAAMqN,gBAAgB,GAAG,KAAKF,QAAL,CAAcG,uBAAd,CAAsCtN,MAAM,CAACE,SAA7C,CAAzB;MACA,KAAKkN,eAAL,GAAuB,KAAKG,aAAL,CAAmBC,eAAnB,CAAmCH,gBAAnC,CAAvB,CALoC,CAMpC;;MACA,KAAKD,eAAL,CAAqBK,QAArB,CAA8B5O,IAA9B,GAAqC,KAAKA,IAA1C;MACA,KAAKuO,eAAL,CAAqBK,QAArB,CAA8BV,UAA9B,GAA2C,KAAKA,UAAhD;MACA,KAAKK,eAAL,CAAqBK,QAArB,CAA8BkG,aAA9B,CAA4CrO,SAA5C,CAAsD,MAAM,KAAKqO,aAAL,EAA5D;MACA,KAAKvG,eAAL,CAAqBK,QAArB,CAA8BiG,QAA9B,CAAuCpO,SAAvC,CAAkD8E,KAAD,IAAW,KAAKsJ,QAAL,CAActJ,KAAd,CAA5D;MACA,KAAKgD,eAAL,CAAqBK,QAArB,CAA8BmG,OAA9B,CAAsCtO,SAAtC,CAAiD8E,KAAD,IAAW,KAAKwJ,OAAL,CAAaxJ,KAAb,CAA3D;IACH;EACJ;;EACD8B,WAAW,GAAG;IACV,IAAI,KAAKkB,eAAT,EAA0B;MACtB,KAAKA,eAAL,CAAqBM,OAArB;IACH;EACJ;;AAxB6C;;AA0BlDmG,mBAAmB,CAAC3L,IAApB;EAAA,iBAAgH2L,mBAAhH,EAvtC+FrjB,EAutC/F,mBAAqJA,EAAE,CAACmd,wBAAxJ;AAAA;;AACAkG,mBAAmB,CAAC1L,IAApB,kBAxtC+F3X,EAwtC/F;EAAA,MAAoGqjB,mBAApG;EAAA;EAAA;IAAA;MAxtC+FrjB,EAwtC/F,qBAAkRQ,gBAAlR;IAAA;;IAAA;MAAA;;MAxtC+FR,EAwtC/F,qBAxtC+FA,EAwtC/F;IAAA;EAAA;EAAA,WAxtC+FA,EAwtC/F,6BAxtC+FA,EAwtC/F;EAAA;EAAA;EAAA;EAAA;IAAA;MAxtC+FA,EAytC3F,yFAztC2FA,EAytC3F,wBADJ;IAAA;EAAA;EAAA;AAAA;;AAGA;EAAA,mDA3tC+FA,EA2tC/F,mBAA2FqjB,mBAA3F,EAA4H,CAAC;IACjHtU,IAAI,EAAE7O,SAD2G;IAEjHsI,IAAI,EAAE,CAAC;MACCoP,QAAQ,EAAE,0BADX;MAECC,QAAQ,EAAG;AAC/B;AACA;IAJmB,CAAD;EAF2G,CAAD,CAA5H,EAQ4B,YAAY;IAAE,OAAO,CAAC;MAAE9I,IAAI,EAAE/O,EAAE,CAACmd;IAAX,CAAD,CAAP;EAAiD,CAR3F,EAQ6G;IAAEJ,aAAa,EAAE,CAAC;MAC/GhO,IAAI,EAAEtO,SADyG;MAE/G+H,IAAI,EAAE,CAAC,eAAD,EAAkB;QAAE4U,IAAI,EAAE5c,gBAAR;QAA0B6c,MAAM,EAAE;MAAlC,CAAlB;IAFyG,CAAD;EAAjB,CAR7G;AAAA;;AAaA,MAAMiG,aAAN,CAAoB;EAChBjhB,WAAW,GAAG;IACV,KAAK8gB,aAAL,GAAqB,IAAIljB,YAAJ,EAArB;IACA,KAAKijB,QAAL,GAAgB,IAAIjjB,YAAJ,EAAhB;IACA,KAAKmjB,OAAL,GAAe,IAAInjB,YAAJ,EAAf;EACH;;EACsB,IAAnBsjB,mBAAmB,GAAG;IACtB,OAAO,KAAKlV,IAAL,CAAU9B,SAAV,GAAsB4D,SAAtB,MAAqC,KAAK9B,IAAL,CAAU9B,SAAV,GAAsB4D,SAAtB,GAAkCoT,mBAA9E;EACH;;AARe;;AAUpBD,aAAa,CAAC5L,IAAd;EAAA,iBAA0G4L,aAA1G;AAAA;;AACAA,aAAa,CAAC3L,IAAd,kBAnvC+F3X,EAmvC/F;EAAA,MAA8FsjB,aAA9F;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;;AACA;EAAA,mDApvC+FtjB,EAovC/F,mBAA2FsjB,aAA3F,EAAsH,CAAC;IAC3GvU,IAAI,EAAE7O,SADqG;IAE3GsI,IAAI,EAAE,CAAC;MACCqP,QAAQ,EAAE;IADX,CAAD;EAFqG,CAAD,CAAtH,QAK4B;IAAExJ,IAAI,EAAE,CAAC;MACrBU,IAAI,EAAE5O;IADe,CAAD,CAAR;IAEZoc,UAAU,EAAE,CAAC;MACbxN,IAAI,EAAE5O;IADO,CAAD,CAFA;IAIZgjB,aAAa,EAAE,CAAC;MAChBpU,IAAI,EAAE3O;IADU,CAAD,CAJH;IAMZ8iB,QAAQ,EAAE,CAAC;MACXnU,IAAI,EAAE3O;IADK,CAAD,CANE;IAQZgjB,OAAO,EAAE,CAAC;MACVrU,IAAI,EAAE3O;IADI,CAAD;EARG,CAL5B;AAAA;;AAiBA,MAAMojB,qBAAN,SAAoCF,aAApC,CAAkD;EAC9CjhB,WAAW,GAAG;IACV;EACH;;AAH6C;;AAKlDmhB,qBAAqB,CAAC9L,IAAtB;EAAA,iBAAkH8L,qBAAlH;AAAA;;AACAA,qBAAqB,CAAC7L,IAAtB,kBA3wC+F3X,EA2wC/F;EAAA,MAAsGwjB,qBAAtG;EAAA;EAAA,WA3wC+FxjB,EA2wC/F;EAAA;EAAA;EAAA;EAAA;IAAA;MA3wC+FA,EA4wC3F,+BADJ;MA3wC+FA,EA8wCnF;QAAA;MAAA;QAAA,OAGS,wBAHT;MAAA,EAHZ;MA3wC+FA,EAmxCnF,wHARZ;MA3wC+FA,EAsxCvF,0EAXR;MA3wC+FA,EAyxC3F,eAdJ;IAAA;;IAAA;MAAA;MAAA;MA3wC+FA,EA4wCnF,8NADZ;MA3wC+FA,EAsxC5D,aAXnC;MA3wC+FA,EAsxC5D,kGAXnC;IAAA;EAAA;EAAA,aAe4Ca,EAAE,CAAC4iB,kCAf/C,EAe6N3jB,EAAE,CAACoa,OAfhO,EAewSrZ,EAAE,CAAC6X,eAf3S,EAe6X7X,EAAE,CAAC8X,OAfhY,EAekkB7Y,EAAE,CAACoY,OAfrkB,EAe4qBrX,EAAE,CAACid,cAf/qB,EAe2vBjd,EAAE,CAACkd,uBAf9vB;EAAA;AAAA;;AAgBA;EAAA,mDA3xC+F/d,EA2xC/F,mBAA2FwjB,qBAA3F,EAA8H,CAAC;IACnHzU,IAAI,EAAE7O,SAD6G;IAEnHsI,IAAI,EAAE,CAAC;MACCoP,QAAQ,EAAE,eADX;MAECC,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAjBmB,CAAD;EAF6G,CAAD,CAA9H,EAqB4B,YAAY;IAAE,OAAO,EAAP;EAAY,CArBtD;AAAA;;AAuBA,MAAM6L,uBAAN,SAAsCJ,aAAtC,CAAoD;EAChDjhB,WAAW,GAAG;IACV;EACH;;AAH+C;;AAKpDqhB,uBAAuB,CAAChM,IAAxB;EAAA,iBAAoHgM,uBAApH;AAAA;;AACAA,uBAAuB,CAAC/L,IAAxB,kBAxzC+F3X,EAwzC/F;EAAA,MAAwG0jB,uBAAxG;EAAA;EAAA,WAxzC+F1jB,EAwzC/F;EAAA;EAAA;EAAA;EAAA;IAAA;MAxzC+FA,EAyzC3F,iCADJ;MAxzC+FA,EA2zCjF;QAAA;MAAA;QAAA,OAIS,wBAJT;MAAA;QAAA,kCAKwC,yBALxC;MAAA;QAAA,OAMe,wBANf;MAAA,EAHd;MAxzC+FA,EAk0C3F,kBAVJ;MAxzC+FA,EAk0C3F,eAVJ;IAAA;;IAAA;MAxzC+FA,EAyzCjF,sKADd;IAAA;EAAA;EAAA,aAW0Ia,EAAE,CAACsf,oBAX7I,EAWuYrgB,EAAE,CAACoa,OAX1Y,EAWkdrZ,EAAE,CAAC6X,eAXrd,EAWuiB7X,EAAE,CAAC8X,OAX1iB;EAAA;AAAA;;AAYA;EAAA,mDAp0C+F3Y,EAo0C/F,mBAA2F0jB,uBAA3F,EAAgI,CAAC;IACrH3U,IAAI,EAAE7O,SAD+G;IAErHsI,IAAI,EAAE,CAAC;MAAEoP,QAAQ,EAAE,iBAAZ;MAA+BC,QAAQ,EAAG;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAXmB;MAWZC,MAAM,EAAE,CAAC,kFAAD;IAXI,CAAD;EAF+G,CAAD,CAAhI,EAc4B,YAAY;IAAE,OAAO,EAAP;EAAY,CAdtD;AAAA;;AAgBA,MAAM6L,uBAAN,SAAsCL,aAAtC,CAAoD;EAChDjhB,WAAW,GAAG;IACV;EACH;;EACDuhB,QAAQ,CAAChK,KAAD,EAAQ;IACZ,MAAMsE,OAAO,GAAI,KAAK7P,IAAL,CAAU9B,SAAV,GAAsB4D,SAAtB,MAAqC,KAAK9B,IAAL,CAAU9B,SAAV,GAAsB4D,SAAtB,GAAkCgO,IAAxE,IAAiF,IAAjG;IACA,MAAMC,QAAQ,GAAI,KAAK/P,IAAL,CAAU9B,SAAV,GAAsB4D,SAAtB,MAAqC,KAAK9B,IAAL,CAAU9B,SAAV,GAAsB4D,SAAtB,GAAkCkO,KAAxE,IAAkF,KAAnG;IACA,KAAKhQ,IAAL,CAAU/B,QAAV,GAAqBsN,KAAK,CAACrR,MAAN,CAAagD,OAAb,GAAuB2S,OAAvB,GAAiCE,QAAtD;EACH;;AAR+C;;AAUpDuF,uBAAuB,CAACjM,IAAxB;EAAA,iBAAoHiM,uBAApH;AAAA;;AACAA,uBAAuB,CAAChM,IAAxB,kBA/1C+F3X,EA+1C/F;EAAA,MAAwG2jB,uBAAxG;EAAA;EAAA,WA/1C+F3jB,EA+1C/F;EAAA;EAAA;EAAA;EAAA;IAAA;MA/1C+FA,EAg2C3F,8BADJ;MA/1C+FA,EAs2CpF;QAAA,OAAS,wBAAT;MAAA;QAAA,OACU,oBADV;MAAA,EAPX;MA/1C+FA,EAg2C3F,eADJ;IAAA;;IAAA;MAAA;MA/1C+FA,EAg2CpF,8NADX;IAAA;EAAA;EAAA,aAS0IF,EAAE,CAACoa,OAT7I;EAAA;AAAA;;AAUA;EAAA,mDAz2C+Fla,EAy2C/F,mBAA2F2jB,uBAA3F,EAAgI,CAAC;IACrH5U,IAAI,EAAE7O,SAD+G;IAErHsI,IAAI,EAAE,CAAC;MAAEoP,QAAQ,EAAE,iBAAZ;MAA+BC,QAAQ,EAAG;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KATmB;MASZC,MAAM,EAAE,CAAC,kFAAD;IATI,CAAD;EAF+G,CAAD,CAAhI,EAY4B,YAAY;IAAE,OAAO,EAAP;EAAY,CAZtD;AAAA;;AAcA,MAAM+L,wBAAN,SAAuCP,aAAvC,CAAqD;EACjDjhB,WAAW,CAACqc,gBAAD,EAAmB;IAC1B;IACA,KAAKA,gBAAL,GAAwBA,gBAAxB;IACA,KAAKoF,YAAL,GAAoB,EAApB;EACH;;EACDpJ,QAAQ,GAAG;IACP,MAAMlL,MAAM,GAAG,KAAKnB,IAAL,CAAU9B,SAAV,GAAsBiD,MAArC;;IACA,IAAIA,MAAM,IAAIA,MAAM,CAACT,IAAP,KAAgB,WAA9B,EAA2C;MACvC,MAAMU,MAAM,GAAG,KAAKpB,IAAL,CAAU9B,SAAV,GAAsB4D,SAAtB,GAAkCyO,SAAjD;MACAnP,MAAM,CAACoP,WAAP,GAAqB,KAAKH,gBAAL,CAAsBI,KAAtB,CAA4BrP,MAAM,CAAC5M,IAAnC,EAAyC4M,MAAM,CAACsP,YAAhD,EAA8DtP,MAAM,CAACuP,UAArE,CAArB;MACAvP,MAAM,CAACoP,WAAP,CAAmBI,gBAAnB,CAAoCxP,MAAM,CAACwP,gBAA3C;IACH;EACJ;;EACD8E,iBAAiB,CAACnK,KAAD,EAAQ;IACrB,KAAKvL,IAAL,CAAU/B,QAAV,GAAqBsN,KAAK,CAACxM,KAA3B;IACA,OAAO,KAAP;EACH;;AAjBgD;;AAmBrDyW,wBAAwB,CAACnM,IAAzB;EAAA,iBAAqHmM,wBAArH,EA14C+F7jB,EA04C/F,mBAA+J8B,IAAI,CAACsd,gBAApK;AAAA;;AACAyE,wBAAwB,CAAClM,IAAzB,kBA34C+F3X,EA24C/F;EAAA,MAAyG6jB,wBAAzG;EAAA;EAAA,WA34C+F7jB,EA24C/F;EAAA;EAAA;EAAA;EAAA;IAAA;MA34C+FA,EA44C3F,sCADJ;MA34C+FA,EA44C5E;QAAA;MAAA;QAAA,OAKY,6BALZ;MAAA,EADnB;MA34C+FA,EAk5C3F,eAPJ;IAAA;;IAAA;MA34C+FA,EA44C5E,+VADnB;IAAA;EAAA;EAAA,aAQ4C8B,IAAI,CAACud,YARjD,EAQ4mBxe,EAAE,CAAC6X,eAR/mB,EAQisB7X,EAAE,CAAC8X,OARpsB;EAAA;AAAA;;AASA;EAAA,mDAp5C+F3Y,EAo5C/F,mBAA2F6jB,wBAA3F,EAAiI,CAAC;IACtH9U,IAAI,EAAE7O,SADgH;IAEtHsI,IAAI,EAAE,CAAC;MACCoP,QAAQ,EAAE,kBADX;MAECC,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAVmB,CAAD;EAFgH,CAAD,CAAjI,EAc4B,YAAY;IAAE,OAAO,CAAC;MAAE9I,IAAI,EAAEjN,IAAI,CAACsd;IAAb,CAAD,CAAP;EAA2C,CAdrF;AAAA;;AAgBA,MAAM4E,oBAAN,SAAmCV,aAAnC,CAAiD;EAC7CjhB,WAAW,GAAG;IACV;EACH;;AAH4C;;AAKjD2hB,oBAAoB,CAACtM,IAArB;EAAA,iBAAiHsM,oBAAjH;AAAA;;AACAA,oBAAoB,CAACrM,IAArB,kBA16C+F3X,EA06C/F;EAAA,MAAqGgkB,oBAArG;EAAA;EAAA,WA16C+FhkB,EA06C/F;EAAA;EAAA;EAAA;EAAA;IAAA;MA16C+FA,EA26C3F,8BADJ;MA16C+FA,EA66CpF;QAAA;MAAA;QAAA,OAIS,wBAJT;MAAA;QAAA,kCAKwC,yBALxC;MAAA;QAAA,OAMe,wBANf;MAAA,EAHX;MA16C+FA,EA26C3F,eADJ;IAAA;;IAAA;MA16C+FA,EA26CpF,sKADX;IAAA;EAAA;EAAA,aAU0Ia,EAAE,CAACsf,oBAV7I,EAUuYrgB,EAAE,CAACoa,OAV1Y,EAUkdrZ,EAAE,CAAC6X,eAVrd,EAUuiB7X,EAAE,CAAC8X,OAV1iB;EAAA;AAAA;;AAWA;EAAA,mDAr7C+F3Y,EAq7C/F,mBAA2FgkB,oBAA3F,EAA6H,CAAC;IAClHjV,IAAI,EAAE7O,SAD4G;IAElHsI,IAAI,EAAE,CAAC;MAAEoP,QAAQ,EAAE,cAAZ;MAA4BC,QAAQ,EAAG;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAVmB;MAUZC,MAAM,EAAE,CAAC,kFAAD;IAVI,CAAD;EAF4G,CAAD,CAA7H,EAa4B,YAAY;IAAE,OAAO,EAAP;EAAY,CAbtD;AAAA;;AAeA,MAAMmM,oBAAN,SAAmCjB,eAAnC,CAAmD;EAC/C3gB,WAAW,GAAG;IACV;EACH;;EACD6hB,aAAa,GAAG;IACZ,MAAM1U,MAAM,GAAG,KAAKnB,IAAL,CAAU9B,SAAV,GAAsBiD,MAArC;;IACA,IAAI,CAACA,MAAL,EAAa;MACT,OAAO,SAAP;IACH;;IACD,OAAOA,MAAM,CAACT,IAAd;EACH;;AAV8C;;AAYnDkV,oBAAoB,CAACvM,IAArB;EAAA,iBAAiHuM,oBAAjH;AAAA;;AACAA,oBAAoB,CAACtM,IAArB,kBAj9C+F3X,EAi9C/F;EAAA,MAAqGikB,oBAArG;EAAA;EAAA,WAj9C+FjkB,EAi9C/F;EAAA;EAAA;EAAA;EAAA;IAAA;MAj9C+FA,EAi9CmH,4BAAlN;MAj9C+FA,EAi9C6J,uFAA5P;MAj9C+FA,EAi9Cqd,2FAApjB;MAj9C+FA,EAi9C+xB,2FAA93B;MAj9C+FA,EAi9Cy/B,6FAAxlC;MAj9C+FA,EAi9CinC,qFAAhtC;MAj9C+FA,EAi9Co5C,eAAn/C;IAAA;;IAAA;MAj9C+FA,EAi9CwH,4CAAvN;MAj9C+FA,EAi9C6K,aAA5Q;MAj9C+FA,EAi9C6K,mCAA5Q;MAj9C+FA,EAi9Cue,aAAtkB;MAj9C+FA,EAi9Cue,uCAAtkB;MAj9C+FA,EAi9CizB,aAAh5B;MAj9C+FA,EAi9CizB,uCAAh5B;MAj9C+FA,EAi9C4gC,aAA3mC;MAj9C+FA,EAi9C4gC,wCAA3mC;IAAA;EAAA;EAAA,aAAihDwjB,qBAAjhD,EAA6kDE,uBAA7kD,EAA6oDC,uBAA7oD,EAA6sDE,wBAA7sD,EAA+wDG,oBAA/wD,EAAu1DlkB,EAAE,CAACmgB,QAA11D,EAA45DngB,EAAE,CAACogB,YAA/5D,EAA6+DpgB,EAAE,CAACiiB,eAAh/D;EAAA;AAAA;;AACA;EAAA,mDAl9C+F/hB,EAk9C/F,mBAA2FikB,oBAA3F,EAA6H,CAAC;IAClHlV,IAAI,EAAE7O,SAD4G;IAElHsI,IAAI,EAAE,CAAC;MAAEoP,QAAQ,EAAE,2BAAZ;MAAyCC,QAAQ,EAAE;IAAnD,CAAD;EAF4G,CAAD,CAA7H,EAG4B,YAAY;IAAE,OAAO,EAAP;EAAY,CAHtD;AAAA;;AAKA,MAAMsM,iBAAN,CAAwB;EACpB9hB,WAAW,GAAG;IACV,KAAKka,UAAL,GAAkB,EAAlB;IACA,KAAK0G,MAAL,GAAc,IAAIhjB,YAAJ,EAAd;EACH;;EACDya,QAAQ,GAAG;IACP,KAAKrM,IAAL,CAAUd,UAAV;EACH;;EACD2V,QAAQ,CAACtJ,KAAD,EAAQ;IACZ,KAAKqJ,MAAL,CAAYte,IAAZ,CAAiBiV,KAAjB;IACA,OAAO,KAAP;EACH;;EACDsK,aAAa,GAAG;IACZ,MAAM1U,MAAM,GAAG,KAAKnB,IAAL,CAAU9B,SAAV,GAAsBiD,MAArC;;IACA,IAAI,CAACA,MAAL,EAAa;MACT,OAAO,SAAP;IACH;;IACD,OAAOA,MAAM,CAACT,IAAd;EACH;;AAlBmB;;AAoBxBoV,iBAAiB,CAACzM,IAAlB;EAAA,iBAA8GyM,iBAA9G;AAAA;;AACAA,iBAAiB,CAACxM,IAAlB,kBA5+C+F3X,EA4+C/F;EAAA,MAAkGmkB,iBAAlG;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MA5+C+FnkB,EA6+CzF,4BADN;MA5+C+FA,EA8+CvF,0GAFR;MA5+C+FA,EAm/CvF,4GAPR;MA5+C+FA,EAw/CzF,eAZN;IAAA;;IAAA;MA5+C+FA,EA6+CpF,4CADX;MA5+C+FA,EA8+C5D,aAFnC;MA5+C+FA,EA8+C5D,qCAFnC;IAAA;EAAA;EAAA,aAa4CqjB,mBAb5C,EAaiHY,oBAbjH,EAasMnkB,EAAE,CAACmgB,QAbzM,EAa2QngB,EAAE,CAACogB,YAb9Q,EAa4VpgB,EAAE,CAACiiB,eAb/V;EAAA;AAAA;;AAcA;EAAA,mDA1/C+F/hB,EA0/C/F,mBAA2FmkB,iBAA3F,EAA0H,CAAC;IAC/GpV,IAAI,EAAE7O,SADyG;IAE/GsI,IAAI,EAAE,CAAC;MACCoP,QAAQ,EAAE,sBADX;MAECC,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAfmB,CAAD;EAFyG,CAAD,CAA1H,QAmB4B;IAAExJ,IAAI,EAAE,CAAC;MACrBU,IAAI,EAAE5O;IADe,CAAD,CAAR;IAEZoc,UAAU,EAAE,CAAC;MACbxN,IAAI,EAAE5O;IADO,CAAD,CAFA;IAIZ8iB,MAAM,EAAE,CAAC;MACTlU,IAAI,EAAE3O;IADG,CAAD;EAJI,CAnB5B;AAAA;;AA2BA,MAAMgkB,aAAN,CAAoB;EAChB/hB,WAAW,GAAG;IACV,KAAKka,UAAL,GAAkB,EAAlB;IACA,KAAK8H,IAAL,GAAY,QAAZ;IACA,KAAK3W,WAAL,GAAmB,KAAnB;IACA,KAAKuV,MAAL,GAAc,IAAIhjB,YAAJ,EAAd;EACH;;EACDijB,QAAQ,CAACtJ,KAAD,EAAQ;IACZ,IAAI,KAAK0K,KAAT,EAAgB;MACZ,KAAK1L,IAAL,CAAUvD,MAAV,CAAiB,KAAKuD,IAAL,CAAUjE,SAAV,EAAjB,EAAwC,KAAK4P,aAA7C;IACH,CAFD,MAGK;MACD,KAAK3L,IAAL,CAAU/C,IAAV,CAAe,KAAKzK,GAApB,EAAyB,KAAKoZ,WAA9B;IACH;EACJ;;AAde;;AAgBpBJ,aAAa,CAAC1M,IAAd;EAAA,iBAA0G0M,aAA1G;AAAA;;AACAA,aAAa,CAACzM,IAAd,kBAtiD+F3X,EAsiD/F;EAAA,MAA8FokB,aAA9F;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAtiD+FpkB,EAuiD3F,8FADJ;MAtiD+FA,EAwiD3F,8FAFJ;IAAA;;IAAA;MAtiD+FA,EAuiDpE,qCAD3B;MAtiD+FA,EAwiDpE,aAF3B;MAtiD+FA,EAwiDpE,oCAF3B;IAAA;EAAA;EAAA,aAM0C6iB,iBAN1C,EAM2HsB,iBAN3H,EAM6PrkB,EAAE,CAACma,IANhQ;EAAA;AAAA;;AAOA;EAAA,mDA7iD+Fja,EA6iD/F,mBAA2FokB,aAA3F,EAAsH,CAAC;IAC3GrV,IAAI,EAAE7O,SADqG;IAE3GsI,IAAI,EAAE,CAAC;MACCoP,QAAQ,EAAE,2BADX;MAECC,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;IARmB,CAAD;EAFqG,CAAD,CAAtH,QAY4B;IAAEe,IAAI,EAAE,CAAC;MACrB7J,IAAI,EAAE5O;IADe,CAAD,CAAR;IAEZiL,GAAG,EAAE,CAAC;MACN2D,IAAI,EAAE5O;IADA,CAAD,CAFO;IAIZqkB,WAAW,EAAE,CAAC;MACdzV,IAAI,EAAE5O;IADQ,CAAD,CAJD;IAMZokB,aAAa,EAAE,CAAC;MAChBxV,IAAI,EAAE5O;IADU,CAAD,CANH;IAQZmkB,KAAK,EAAE,CAAC;MACRvV,IAAI,EAAE5O;IADE,CAAD,CARK;IAUZkO,IAAI,EAAE,CAAC;MACPU,IAAI,EAAE5O;IADC,CAAD,CAVM;IAYZoc,UAAU,EAAE,CAAC;MACbxN,IAAI,EAAE5O;IADO,CAAD,CAZA;IAcZkkB,IAAI,EAAE,CAAC;MACPtV,IAAI,EAAE5O;IADC,CAAD,CAdM;IAgBZuN,WAAW,EAAE,CAAC;MACdqB,IAAI,EAAE5O;IADQ,CAAD,CAhBD;IAkBZ8iB,MAAM,EAAE,CAAC;MACTlU,IAAI,EAAE3O;IADG,CAAD;EAlBI,CAZ5B;AAAA;;AAkCA,MAAMqkB,qBAAN,CAA4B;EACxBpiB,WAAW,GAAG;IACV,KAAKgT,MAAL,GAAc,IAAIpV,YAAJ,EAAd;EACH;;EACDykB,QAAQ,CAAC9K,KAAD,EAAQ;IACZA,KAAK,CAACpC,eAAN;IACA,KAAKoB,IAAL,CAAUvD,MAAV,CAAiB,KAAKuD,IAAL,CAAUjE,SAAV,EAAjB,EAAwC,KAAK4P,aAA7C;EACH;;EACDpL,WAAW,GAAG;IACV,KAAKzE,oBAAL,GAA4B,KAAKkE,IAAL,CAAUlE,oBAAV,EAA5B;IACA,KAAKoH,oBAAL,GAA4B,KAAKlD,IAAL,CAAUvE,gBAAV,CAA2B,MAA3B,CAA5B;IACA,KAAK0H,qBAAL,GAA6B,KAAKnD,IAAL,CAAUvE,gBAAV,CAA2B,OAA3B,CAA7B;IACA,KAAKsQ,aAAL,GAAqB,KAAK/L,IAAL,CAAUnE,UAAV,CAAqB,gBAArB,CAArB;EACH;;EACDmQ,eAAe,CAAChX,KAAD,EAAQ;IACnB,OAAO,CAACA,KAAK,IAAI,EAAV,EAAcrM,MAAd,CAAsB8M,IAAD,IAAU,CAACA,IAAI,CAAC9B,SAAL,GAAiBuC,IAAjD,CAAP;EACH;;AAhBuB;;AAkB5B2V,qBAAqB,CAAC/M,IAAtB;EAAA,iBAAkH+M,qBAAlH;AAAA;;AACAA,qBAAqB,CAAC9M,IAAtB,kBAlmD+F3X,EAkmD/F;EAAA,MAAsGykB,qBAAtG;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA,WAlmD+FzkB,EAkmD/F;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAlmD+FA,EAmmDzF,kEADN;MAlmD+FA,EAomDzF,kEAFN;MAlmD+FA,EAumDzF,kEALN;MAlmD+FA,EAinDzF,kEAfN;IAAA;;IAAA;MAlmD+FA,EAomDnF,aAFZ;MAlmD+FA,EAomDnF,6CAFZ;MAlmD+FA,EAumDpE,aAL3B;MAlmD+FA,EAumDpE,4EAL3B;MAlmD+FA,EAinDnF,aAfZ;MAlmD+FA,EAinDnF,8CAfZ;IAAA;EAAA;EAAA,aAkB0CoiB,gBAlB1C,EAkB8IgC,aAlB9I,EAkBgWtkB,EAAE,CAACma,IAlBnW,EAkBibna,EAAE,CAACoY,OAlBpb;EAAA;AAAA;;AAmBA;EAAA,mDArnD+FlY,EAqnD/F,mBAA2FykB,qBAA3F,EAA8H,CAAC;IACnH1V,IAAI,EAAE7O,SAD6G;IAEnHsI,IAAI,EAAE,CAAC;MACCoP,QAAQ,EAAE,8BADX;MAECC,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IApBmB,CAAD;EAF6G,CAAD,CAA9H,QAwB4B;IAAEe,IAAI,EAAE,CAAC;MACrB7J,IAAI,EAAE5O;IADe,CAAD,CAAR;IAEZiL,GAAG,EAAE,CAAC;MACN2D,IAAI,EAAE5O;IADA,CAAD,CAFO;IAIZokB,aAAa,EAAE,CAAC;MAChBxV,IAAI,EAAE5O;IADU,CAAD,CAJH;IAMZkV,MAAM,EAAE,CAAC;MACTtG,IAAI,EAAE3O;IADG,CAAD;EANI,CAxB5B;AAAA;;AAkCA,MAAMykB,2BAAN,CAAkC;EAC9BxiB,WAAW,CAACmY,YAAD,EAAe;IACtB,KAAKA,YAAL,GAAoBA,YAApB;IACA,KAAKrV,IAAL,GAAY,IAAIlF,YAAJ,EAAZ;IACA,KAAK6O,IAAL,GAAY,IAAI7O,YAAJ,EAAZ;IACA,KAAKyW,aAAL,GAAqB,IAAIzW,YAAJ,EAArB;IACA,KAAKoV,MAAL,GAAc,IAAIpV,YAAJ,EAAd;IACA,KAAKsB,MAAL,GAAc,IAAItB,YAAJ,EAAd;EACH;;EACDkZ,WAAW,GAAG;IACV,KAAK2L,YAAL,GAAoB,KAAKlM,IAAL,CAAUnE,UAAV,CAAqB,YAArB,CAApB;IACA,KAAKsQ,eAAL,GAAuB,KAAKnM,IAAL,CAAUnE,UAAV,CAAqB,eAArB,CAAvB;EACH;;EACDuQ,SAAS,CAACpL,KAAD,EAAQ;IACb,KAAKY,YAAL,CAAkBnC,eAAlB,CAAkC1T,IAAlC,CAAuCiV,KAAvC;EACH;;AAf6B;;AAiBlCiL,2BAA2B,CAACnN,IAA5B;EAAA,iBAAwHmN,2BAAxH,EAxqD+F7kB,EAwqD/F,mBAAqKoY,YAArK;AAAA;;AACAyM,2BAA2B,CAAClN,IAA5B,kBAzqD+F3X,EAyqD/F;EAAA,MAA4G6kB,2BAA5G;EAAA;EAAA;IAAA;MAzqD+F7kB,EAyqD/F;QAAA,OAA4G,qBAA5G;MAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WAzqD+FA,EAyqD/F;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAzqD+FA,EAyqD6Y,wEAA5e;MAzqD+FA,EAyqD22B,wEAA18B;MAzqD+FA,EAyqDqtC,wEAApzC;IAAA;;IAAA;MAzqD+FA,EAyqD+a,sCAA9gB;MAzqD+FA,EAyqD84B,aAA7+B;MAzqD+FA,EAyqD84B,yCAA7+B;MAzqD+FA,EAyqDqvC,aAAp1C;MAzqD+FA,EAyqDqvC,6CAAp1C;IAAA;EAAA;EAAA,aAA2/C6b,uBAA3/C,EAAmqDqG,wBAAnqD,EAA+yDuC,qBAA/yD,EAAu8D3kB,EAAE,CAACma,IAA18D;EAAA;AAAA;;AACA;EAAA,mDA1qD+Fja,EA0qD/F,mBAA2F6kB,2BAA3F,EAAoI,CAAC;IACzH9V,IAAI,EAAE7O,SADmH;IAEzHsI,IAAI,EAAE,CAAC;MAAEoP,QAAQ,EAAE,qBAAZ;MAAmCC,QAAQ,EAAE;IAA7C,CAAD;EAFmH,CAAD,CAApI,EAG4B,YAAY;IAAE,OAAO,CAAC;MAAE9I,IAAI,EAAEqJ;IAAR,CAAD,CAAP;EAAkC,CAH5E,EAG8F;IAAEQ,IAAI,EAAE,CAAC;MACvF7J,IAAI,EAAE5O;IADiF,CAAD,CAAR;IAE9EwT,MAAM,EAAE,CAAC;MACT5E,IAAI,EAAE5O;IADG,CAAD,CAFsE;IAI9E0Y,aAAa,EAAE,CAAC;MAChB9J,IAAI,EAAE5O;IADU,CAAD,CAJ+D;IAM9EokB,aAAa,EAAE,CAAC;MAChBxV,IAAI,EAAE5O;IADU,CAAD,CAN+D;IAQ9EgF,IAAI,EAAE,CAAC;MACP4J,IAAI,EAAE3O;IADC,CAAD,CARwE;IAU9E0O,IAAI,EAAE,CAAC;MACPC,IAAI,EAAE3O;IADC,CAAD,CAVwE;IAY9EsW,aAAa,EAAE,CAAC;MAChB3H,IAAI,EAAE3O;IADU,CAAD,CAZ+D;IAc9EiV,MAAM,EAAE,CAAC;MACTtG,IAAI,EAAE3O;IADG,CAAD,CAdsE;IAgB9EmB,MAAM,EAAE,CAAC;MACTwN,IAAI,EAAE3O;IADG,CAAD,CAhBsE;IAkB9E4kB,SAAS,EAAE,CAAC;MACZjW,IAAI,EAAExO,YADM;MAEZiI,IAAI,EAAE,CAAC,WAAD,EAAc,CAAC,QAAD,CAAd;IAFM,CAAD;EAlBmE,CAH9F;AAAA;;AA0BA,MAAMyc,wBAAN,CAA+B;EAC3B5iB,WAAW,CAACsa,QAAD,EAAW;IAClB,KAAKA,QAAL,GAAgBA,QAAhB;EACH;;EACDjC,QAAQ,GAAG;IACP,IAAI,KAAK9V,MAAL,IAAe,CAAC,KAAKgY,eAAzB,EAA0C;MACtC,KAAK4F,qBAAL;MACA,KAAKE,aAAL;IACH;EACJ;;EACDF,qBAAqB,GAAG;IACpB,MAAM3F,gBAAgB,GAAG,KAAKF,QAAL,CAAcG,uBAAd,CAAsC,KAAKlY,MAAL,CAAY+K,eAAlD,CAAzB;IACA,KAAKiN,eAAL,GAAuB,KAAKG,aAAL,CAAmBC,eAAnB,CAAmCH,gBAAnC,CAAvB;EACH;;EACD6F,aAAa,GAAG;IACZ1Z,MAAM,CAACoF,MAAP,CAAc,KAAKwO,eAAL,CAAqBK,QAAnC,EAA6C,KAAK0F,QAAL,EAA7C;EACH;;EACDA,QAAQ,GAAG;IACP,OAAO;MACH/d,MAAM,EAAE,KAAKA,MADV;MAEHge,OAAO,EAAE,KAAKxX,GAAL,CAAS2B,OAAT;IAFN,CAAP;EAIH;;AAtB0B;;AAwB/BkY,wBAAwB,CAACvN,IAAzB;EAAA,iBAAqHuN,wBAArH,EA5tD+FjlB,EA4tD/F,mBAA+JA,EAAE,CAACmd,wBAAlK;AAAA;;AACA8H,wBAAwB,CAACtN,IAAzB,kBA7tD+F3X,EA6tD/F;EAAA,MAAyGilB,wBAAzG;EAAA;EAAA;IAAA;MA7tD+FjlB,EA6tD/F,qBAA2UQ,gBAA3U;IAAA;;IAAA;MAAA;;MA7tD+FR,EA6tD/F,qBA7tD+FA,EA6tD/F;IAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MA7tD+FA,EA8tD3F,8FA9tD2FA,EA8tD3F,wBADJ;IAAA;EAAA;EAAA;AAAA;;AAGA;EAAA,mDAhuD+FA,EAguD/F,mBAA2FilB,wBAA3F,EAAiI,CAAC;IACtHlW,IAAI,EAAE7O,SADgH;IAEtHsI,IAAI,EAAE,CAAC;MACCoP,QAAQ,EAAE,+BADX;MAECC,QAAQ,EAAG;AAC/B;AACA;IAJmB,CAAD;EAFgH,CAAD,CAAjI,EAQ4B,YAAY;IAAE,OAAO,CAAC;MAAE9I,IAAI,EAAE/O,EAAE,CAACmd;IAAX,CAAD,CAAP;EAAiD,CAR3F,EAQ6G;IAAEvY,MAAM,EAAE,CAAC;MACxGmK,IAAI,EAAE5O;IADkG,CAAD,CAAV;IAE7FiL,GAAG,EAAE,CAAC;MACN2D,IAAI,EAAE5O;IADA,CAAD,CAFwF;IAI7F4c,aAAa,EAAE,CAAC;MAChBhO,IAAI,EAAEtO,SADU;MAEhB+H,IAAI,EAAE,CAAC,eAAD,EAAkB;QAAE4U,IAAI,EAAE5c,gBAAR;QAA0B6c,MAAM,EAAE;MAAlC,CAAlB;IAFU,CAAD;EAJ8E,CAR7G;AAAA;;AAiBA,MAAM6H,oBAAN,CAA2B;EACvB7iB,WAAW,GAAG;IACV,KAAK8iB,MAAL,GAAc,IAAIllB,YAAJ,EAAd;EACH;;EACDmlB,QAAQ,CAACxgB,MAAD,EAASgV,KAAT,EAAgB;IACpBA,KAAK,CAACC,cAAN;IACAD,KAAK,CAACpC,eAAN;IACA,KAAK2N,MAAL,CAAYxP,IAAZ,CAAiB;MACb/Q,MAAM,EAAEA,MAAM,CAAC4E,IADF;MAEb3G,IAAI,EAAE,KAAKuI,GAAL,CAAS2B,OAAT,EAFO;MAGb4G,MAAM,EAAE,KAAKA;IAHA,CAAjB;EAKH;;AAZsB;;AAc3BuR,oBAAoB,CAACxN,IAArB;EAAA,iBAAiHwN,oBAAjH;AAAA;;AACAA,oBAAoB,CAACvN,IAArB,kBAhwD+F3X,EAgwD/F;EAAA,MAAqGklB,oBAArG;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAhwD+FllB,EAiwD3F,qFADJ;IAAA;;IAAA;MAhwD+FA,EAiwD1D,6DADrC;IAAA;EAAA;EAAA,aAe0CilB,wBAf1C,EAekKnlB,EAAE,CAACoY,OAfrK,EAe4QpY,EAAE,CAACma,IAf/Q;EAAA;EAAA;AAAA;;AAgBA;EAAA,mDAhxD+Fja,EAgxD/F,mBAA2FklB,oBAA3F,EAA6H,CAAC;IAClHnW,IAAI,EAAE7O,SAD4G;IAElHsI,IAAI,EAAE,CAAC;MACCoP,QAAQ,EAAE,0BADX;MAECkL,eAAe,EAAEpiB,uBAAuB,CAACqiB,MAF1C;MAGClL,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAlBmB,CAAD;EAF4G,CAAD,CAA7H,QAsB4B;IAAEe,IAAI,EAAE,CAAC;MACrB7J,IAAI,EAAE5O;IADe,CAAD,CAAR;IAEZiL,GAAG,EAAE,CAAC;MACN2D,IAAI,EAAE5O;IADA,CAAD,CAFO;IAIZwT,MAAM,EAAE,CAAC;MACT5E,IAAI,EAAE5O;IADG,CAAD,CAJI;IAMZglB,MAAM,EAAE,CAAC;MACTpW,IAAI,EAAE3O;IADG,CAAD;EANI,CAtB5B;AAAA;;AAgCA,MAAMilB,uBAAN,CAA8B;EAC1BhjB,WAAW,GAAG;IACV,KAAKijB,WAAL,GAAmB,IAAIrlB,YAAJ,EAAnB;EACH;;EACDslB,QAAQ,CAAC3L,KAAD,EAAQ;IACZA,KAAK,CAACC,cAAN;IACAD,KAAK,CAACpC,eAAN;IACA,KAAK8N,WAAL,CAAiB3P,IAAjB,CAAsB,KAAKvK,GAA3B;EACH;;EACD+N,WAAW,GAAG;IACV,KAAKqM,sBAAL,GAA8B,KAAK5M,IAAL,CAAUnE,UAAV,CAAqB,+BAArB,CAA9B;EACH;;AAXyB;;AAa9B4Q,uBAAuB,CAAC3N,IAAxB;EAAA,iBAAoH2N,uBAApH;AAAA;;AACAA,uBAAuB,CAAC1N,IAAxB,kBA9zD+F3X,EA8zD/F;EAAA,MAAwGqlB,uBAAxG;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA,WA9zD+FrlB,EA8zD/F;EAAA;EAAA;EAAA;EAAA;IAAA;MA9zD+FA,EA+zDzF,0BADN;MA9zD+FA,EAg0DhD;QAAA,OAAS,oBAAT;MAAA,EAF/C;MA9zD+FA,EAg0DrB,eAF1E;IAAA;;IAAA;MA9zD+FA,EAg0DrF,qDAh0DqFA,EAg0DrF,gBAFV;IAAA;EAAA;EAAA;EAAA;AAAA;;AAIA;EAAA,mDAl0D+FA,EAk0D/F,mBAA2FqlB,uBAA3F,EAAgI,CAAC;IACrHtW,IAAI,EAAE7O,SAD+G;IAErHsI,IAAI,EAAE,CAAC;MACCoP,QAAQ,EAAE,0BADX;MAECkL,eAAe,EAAEpiB,uBAAuB,CAACqiB,MAF1C;MAGClL,QAAQ,EAAG;AAC/B;AACA;AACA;IANmB,CAAD;EAF+G,CAAD,CAAhI,EAU4B,YAAY;IAAE,OAAO,EAAP;EAAY,CAVtD,EAUwE;IAAEe,IAAI,EAAE,CAAC;MACjE7J,IAAI,EAAE5O;IAD2D,CAAD,CAAR;IAExDiL,GAAG,EAAE,CAAC;MACN2D,IAAI,EAAE5O;IADA,CAAD,CAFmD;IAIxDmlB,WAAW,EAAE,CAAC;MACdvW,IAAI,EAAE3O;IADQ,CAAD;EAJ2C,CAVxE;AAAA;;AAkBA,MAAMqlB,wBAAN,CAA+B;EAC3BpjB,WAAW,GAAG;IACV,KAAK+S,IAAL,GAAY,IAAInV,YAAJ,EAAZ;IACA,KAAK8V,MAAL,GAAc,IAAI9V,YAAJ,EAAd;IACA,KAAKylB,aAAL,GAAqB,IAAIzlB,YAAJ,EAArB;EACH;;EACD0lB,MAAM,CAAC/L,KAAD,EAAQ;IACVA,KAAK,CAACC,cAAN;IACAD,KAAK,CAACpC,eAAN;IACA,KAAKkO,aAAL,CAAmB/P,IAAnB,CAAwB,KAAKvK,GAA7B;;IACA,IAAI,KAAKwN,IAAL,CAAUnE,UAAV,CAAqB,MAArB,MAAiC,UAArC,EAAiD;MAC7C,KAAKW,IAAL,CAAUO,IAAV,CAAe;QACX9S,IAAI,EAAE,KAAKuI,GAAL,CAAS2B,OAAT,EADK;QAEX4G,MAAM,EAAE,KAAKA;MAFF,CAAf;IAIH,CALD,MAMK;MACD,KAAKiF,IAAL,CAAUxD,IAAV,CAAe,KAAKhK,GAApB;IACH;EACJ;;EACDwa,QAAQ,CAAChM,KAAD,EAAQ;IACZA,KAAK,CAACC,cAAN;IACAD,KAAK,CAACpC,eAAN;;IACA,IAAI,KAAKoB,IAAL,CAAUnE,UAAV,CAAqB,MAArB,MAAiC,UAArC,EAAiD;MAC7C,KAAKsB,MAAL,CAAYJ,IAAZ,CAAiB;QACb9S,IAAI,EAAE,KAAKuI,GAAL,CAAS2B,OAAT,EADO;QAEb4G,MAAM,EAAE,KAAKA;MAFA,CAAjB;IAIH,CALD,MAMK;MACD,KAAKiF,IAAL,CAAU7C,MAAV,CAAiB,KAAK3K,GAAtB,EAA2B,KAAKya,aAAhC;IACH;EACJ;;EACD1M,WAAW,GAAG;IACV,KAAK2M,YAAL,GAAoB,KAAKlN,IAAL,CAAUnE,UAAV,CAAqB,cAArB,CAApB;IACA,KAAKsR,cAAL,GAAsB,KAAKnN,IAAL,CAAUnE,UAAV,CAAqB,gBAArB,CAAtB;IACA,KAAKuR,oBAAL,GAA4B,KAAKpN,IAAL,CAAUnE,UAAV,CAAqB,wBAArB,CAA5B;IACA,KAAKwR,sBAAL,GAA8B,KAAKrN,IAAL,CAAUnE,UAAV,CAAqB,4BAArB,CAA9B;EACH;;AAtC0B;;AAwC/BgR,wBAAwB,CAAC/N,IAAzB;EAAA,iBAAqH+N,wBAArH;AAAA;;AACAA,wBAAwB,CAAC9N,IAAzB,kBA73D+F3X,EA63D/F;EAAA,MAAyGylB,wBAAzG;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WA73D+FzlB,EA63D/F;EAAA;EAAA;EAAA;EAAA;IAAA;MA73D+FA,EA83D3F,mEADJ;MA73D+FA,EAg4D3F,mEAHJ;IAAA;;IAAA;MA73D+FA,EA83D9E,qCADjB;MA73D+FA,EAg4D9E,aAHjB;MA73D+FA,EAg4D9E,uCAHjB;IAAA;EAAA;EAAA,aAK0CF,EAAE,CAACma,IAL7C;EAAA;EAAA;AAAA;;AAMA;EAAA,mDAn4D+Fja,EAm4D/F,mBAA2FylB,wBAA3F,EAAiI,CAAC;IACtH1W,IAAI,EAAE7O,SADgH;IAEtHsI,IAAI,EAAE,CAAC;MACCoP,QAAQ,EAAE,+BADX;MAECkL,eAAe,EAAEpiB,uBAAuB,CAACqiB,MAF1C;MAGClL,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;IARmB,CAAD;EAFgH,CAAD,CAAjI,QAY4B;IAAEe,IAAI,EAAE,CAAC;MACrB7J,IAAI,EAAE5O;IADe,CAAD,CAAR;IAEZiL,GAAG,EAAE,CAAC;MACN2D,IAAI,EAAE5O;IADA,CAAD,CAFO;IAIZwT,MAAM,EAAE,CAAC;MACT5E,IAAI,EAAE5O;IADG,CAAD,CAJI;IAMZ0lB,aAAa,EAAE,CAAC;MAChB9W,IAAI,EAAE5O;IADU,CAAD,CANH;IAQZqkB,WAAW,EAAE,CAAC;MACdzV,IAAI,EAAE5O;IADQ,CAAD,CARD;IAUZiV,IAAI,EAAE,CAAC;MACPrG,IAAI,EAAE3O;IADC,CAAD,CAVM;IAYZ2V,MAAM,EAAE,CAAC;MACThH,IAAI,EAAE3O;IADG,CAAD,CAZI;IAcZslB,aAAa,EAAE,CAAC;MAChB3W,IAAI,EAAE3O;IADU,CAAD;EAdH,CAZ5B;AAAA;;AA8BA,MAAM8lB,0BAAN,CAAiC;EAC7BC,MAAM,CAACvM,KAAD,EAAQ;IACVA,KAAK,CAACC,cAAN;IACAD,KAAK,CAACpC,eAAN;IACA,KAAKoB,IAAL,CAAU/C,IAAV,CAAe,KAAKzK,GAApB,EAAyB,KAAKoZ,WAA9B;EACH;;EACD4B,YAAY,CAACxM,KAAD,EAAQ;IAChBA,KAAK,CAACC,cAAN;IACAD,KAAK,CAACpC,eAAN;IACA,KAAKpM,GAAL,CAASsC,WAAT,GAAuB,KAAvB;EACH;;EACDyL,WAAW,GAAG;IACV,KAAKkN,iBAAL,GAAyB,KAAKzN,IAAL,CAAUnE,UAAV,CAAqB,wBAArB,CAAzB;IACA,KAAK6N,mBAAL,GAA2B,KAAK1J,IAAL,CAAUnE,UAAV,CAAqB,0BAArB,CAA3B;EACH;;AAd4B;;AAgBjCyR,0BAA0B,CAACxO,IAA3B;EAAA,iBAAuHwO,0BAAvH;AAAA;;AACAA,0BAA0B,CAACvO,IAA3B,kBAl7D+F3X,EAk7D/F;EAAA,MAA2GkmB,0BAA3G;EAAA;EAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WAl7D+FlmB,EAk7D/F;EAAA;EAAA;EAAA;EAAA;IAAA;MAl7D+FA,EAm7D3F,0BADJ;MAl7D+FA,EAo7DvD;QAAA,OAAS,kBAAT;MAAA,EAFxC;MAl7D+FA,EAo7D9B,eAFjE;MAl7D+FA,EAq7D3F,0BAHJ;MAl7D+FA,EAs7DrD;QAAA,OAAS,wBAAT;MAAA,EAJ1C;MAl7D+FA,EAs7DtB,eAJzE;IAAA;;IAAA;MAl7D+FA,EAo7DvF,gDAp7DuFA,EAo7DvF,gBAFR;MAl7D+FA,EAs7DvF,aAJR;MAl7D+FA,EAs7DvF,kDAt7DuFA,EAs7DvF,gBAJR;IAAA;EAAA;EAAA;AAAA;;AAMA;EAAA,mDAx7D+FA,EAw7D/F,mBAA2FkmB,0BAA3F,EAAmI,CAAC;IACxHnX,IAAI,EAAE7O,SADkH;IAExHsI,IAAI,EAAE,CAAC;MACCoP,QAAQ,EAAE,iCADX;MAECC,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;IAPmB,CAAD;EAFkH,CAAD,CAAnI,QAW4B;IAAEe,IAAI,EAAE,CAAC;MACrB7J,IAAI,EAAE5O;IADe,CAAD,CAAR;IAEZiL,GAAG,EAAE,CAAC;MACN2D,IAAI,EAAE5O;IADA,CAAD,CAFO;IAIZqkB,WAAW,EAAE,CAAC;MACdzV,IAAI,EAAE5O;IADQ,CAAD;EAJD,CAX5B;AAAA;;AAmBA,MAAMmmB,2BAAN,CAAkC;EAC9BjkB,WAAW,CAACsa,QAAD,EAAW4J,KAAX,EAAkB;IACzB,KAAK5J,QAAL,GAAgBA,QAAhB;IACA,KAAK4J,KAAL,GAAaA,KAAb;IACA,KAAK1Q,IAAL,GAAY,IAAI5V,YAAJ,EAAZ;IACA,KAAKumB,MAAL,GAAc,IAAIvmB,YAAJ,EAAd;IACA,KAAKmV,IAAL,GAAY,IAAInV,YAAJ,EAAZ;IACA,KAAK8V,MAAL,GAAc,IAAI9V,YAAJ,EAAd;IACA,KAAKklB,MAAL,GAAc,IAAIllB,YAAJ,EAAd;IACA,KAAKgjB,MAAL,GAAc,IAAIhjB,YAAJ,EAAd;IACA,KAAKwmB,aAAL,GAAqB,IAAIxmB,YAAJ,EAArB;IACA,KAAKylB,aAAL,GAAqB,IAAIzlB,YAAJ,EAArB;IACA,KAAK2S,iBAAL,GAAyB,IAAI3S,YAAJ,EAAzB;IACA,KAAKymB,QAAL,GAAgB,IAAIzmB,YAAJ,EAAhB;IACA,KAAKqlB,WAAL,GAAmB,IAAIrlB,YAAJ,EAAnB;IACA,KAAK0mB,iBAAL,GAAyB,KAAzB;EACH;;EACD3N,eAAe,GAAG;IACd,IAAI4N,GAAG,GAAG,KAAKhO,IAAL,CAAUlK,QAAV,CAAmBmY,oBAA7B;;IACA,IAAID,GAAG,IAAI,CAAC,KAAKhK,eAAjB,EAAkC;MAC9B,KAAKkK,gBAAL,CAAsBje,OAAtB,CAA8Bke,CAAC,IAAIA,CAAC,CAACC,KAAF,EAAnC;MACA,KAAKL,iBAAL,GAAyB,IAAzB;MACA,KAAKnE,qBAAL;IACH;EACJ;;EACD9G,WAAW,GAAG;IACV,IAAI,KAAKkB,eAAT,EACI,KAAKA,eAAL,CAAqBM,OAArB;EACP;;EACD8J,KAAK,GAAG;IACJ,KAAKT,KAAL,CAAWS,KAAX;EACH;;EACDxE,qBAAqB,GAAG;IACpB,IAAIoE,GAAG,GAAG,KAAKhO,IAAL,CAAUlK,QAAV,CAAmBmY,oBAA7B;;IACA,IAAID,GAAJ,EAAS;MACL,MAAM/J,gBAAgB,GAAG,KAAKF,QAAL,CAAcG,uBAAd,CAAsC8J,GAAtC,CAAzB;MACA,KAAKE,gBAAL,CAAsB/R,OAAtB,CACK4F,IADL,CACU/Y,KAAK,CAAC,CAAD,CADf,EAEKkT,SAFL,CAEe2C,IAAI,IAAI;QACnB,IAAIA,IAAI,CAAC1Q,MAAT,EAAiB;UACb,KAAK6V,eAAL,GAAuBnF,IAAI,CAACwP,KAAL,CAAWjK,eAAX,CAA2BH,gBAA3B,CAAvB;UACA7T,MAAM,CAACoF,MAAP,CAAc,KAAKwO,eAAL,CAAqBK,QAAnC,EAA6C,KAAKrE,IAAL,CAAUvM,OAAV,CAAkBwG,SAA/D,EAA0E;YACtE+P,OAAO,EAAE,KAAKhK,IAAL,CAAUvM,OAAV,CAAkByF,cAAlB,GAAmC/E,OAAnC;UAD6D,CAA1E;QAGH;MACJ,CATD;IAUH;EACJ;;EACoB,IAAjBma,iBAAiB,GAAG;IACpB,MAAMC,aAAa,GAAG,KAAKhL,WAAL,IAAoB,KAAK2J,YAAzB,IAAyC,KAAKC,cAA9C,GAA+D,CAA/D,GAAmE,CAAzF;IACA,OAAO,KAAKnN,IAAL,CAAUrK,UAAV,GAAuBxH,MAAvB,GAAgCogB,aAAvC;EACH;;EACDhO,WAAW,GAAG;IACV,KAAKzE,oBAAL,GAA4B,KAAKkE,IAAL,CAAUlE,oBAAV,EAA5B;IACA,KAAKoH,oBAAL,GAA4B,KAAKlD,IAAL,CAAUvE,gBAAV,CAA2B,MAA3B,CAA5B;IACA,KAAKgQ,IAAL,GAAY,KAAKzL,IAAL,CAAUnE,UAAV,CAAqB,MAArB,CAAZ;IACA,KAAK2S,cAAL,GAAsB,KAAKxO,IAAL,CAAUnE,UAAV,CAAqB,iBAArB,CAAtB;IACA,KAAKsH,qBAAL,GAA6B,KAAKnD,IAAL,CAAUvE,gBAAV,CAA2B,OAA3B,CAA7B;IACA,KAAK8H,WAAL,GAAmB,KAAKvD,IAAL,CAAUnE,UAAV,CAAqB,aAArB,CAAnB;IACA,KAAKqR,YAAL,GAAoB,KAAKlN,IAAL,CAAUnE,UAAV,CAAqB,cAArB,CAApB;IACA,KAAKsR,cAAL,GAAsB,KAAKnN,IAAL,CAAUnE,UAAV,CAAqB,gBAArB,CAAtB;IACA,KAAK4S,aAAL,GAAqB,KAAKzO,IAAL,CAAUnE,UAAV,CAAqB,eAArB,CAArB;EACH;;EACDmQ,eAAe,CAAChX,KAAD,EAAQ;IACnB,OAAO,CAACA,KAAK,IAAI,EAAV,EAAcrM,MAAd,CAAsB8M,IAAD,IAAU,CAACA,IAAI,CAAC9B,SAAL,GAAiBuC,IAAjD,CAAP;EACH;;EACDwY,gBAAgB,CAAClc,GAAD,EAAM;IAClB,KAAKka,WAAL,CAAiB3P,IAAjB,CAAsBvK,GAAtB;EACH;;AApE6B;;AAsElCkb,2BAA2B,CAAC5O,IAA5B;EAAA,iBAAwH4O,2BAAxH,EAjhE+FtmB,EAihE/F,mBAAqKA,EAAE,CAACmd,wBAAxK,GAjhE+Fnd,EAihE/F,mBAA6MA,EAAE,CAACQ,gBAAhN;AAAA;;AACA8lB,2BAA2B,CAAC3O,IAA5B,kBAlhE+F3X,EAkhE/F;EAAA,MAA4GsmB,2BAA5G;EAAA;EAAA;IAAA;MAlhE+FtmB,EAkhE/F,sBAA+qBQ,gBAA/qB;IAAA;;IAAA;MAAA;;MAlhE+FR,EAkhE/F,qBAlhE+FA,EAkhE/F;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WAlhE+FA,EAkhE/F;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAlhE+FA,EAkhEmpB,6FAAlvB;MAlhE+FA,EAkhE24I,wEAA1+I;IAAA;;IAAA;MAlhE+FA,EAkhEmrB,0CAAlxB;MAlhE+FA,EAkhEg5I,aAA/+I;MAlhE+FA,EAkhEg5I,mDAA/+I;IAAA;EAAA;EAAA,aAA2gKklB,oBAA3gK,EAAyoKG,uBAAzoK,EAAqwKI,wBAArwK,EAAq8KS,0BAAr8K,EAAgkL9B,aAAhkL,EAAkxLtkB,EAAE,CAACoY,OAArxL,EAA43LpY,EAAE,CAACoa,OAA/3L,EAAu8Lpa,EAAE,CAACma,IAA18L,EAAwhMpZ,EAAE,CAAC4X,4BAA3hM,EAAsrM5X,EAAE,CAAC6X,eAAzrM,EAA2wM7X,EAAE,CAAC8X,OAA9wM;EAAA;AAAA;;AACA;EAAA,mDAnhE+F3Y,EAmhE/F,mBAA2FsmB,2BAA3F,EAAoI,CAAC;IACzHvX,IAAI,EAAE7O,SADmH;IAEzHsI,IAAI,EAAE,CAAC;MAAEoP,QAAQ,EAAE,qBAAZ;MAAmCC,QAAQ,EAAE,23HAA7C;MAA06HC,MAAM,EAAE,CAAC,4XAAD;IAAl7H,CAAD;EAFmH,CAAD,CAApI,EAG4B,YAAY;IAAE,OAAO,CAAC;MAAE/I,IAAI,EAAE/O,EAAE,CAACmd;IAAX,CAAD,EAAwC;MAAEpO,IAAI,EAAE/O,EAAE,CAACQ;IAAX,CAAxC,CAAP;EAAgF,CAH1H,EAG4I;IAAEoY,IAAI,EAAE,CAAC;MACrI7J,IAAI,EAAE5O;IAD+H,CAAD,CAAR;IAE5HwT,MAAM,EAAE,CAAC;MACT5E,IAAI,EAAE5O;IADG,CAAD,CAFoH;IAI5H0lB,aAAa,EAAE,CAAC;MAChB9W,IAAI,EAAE5O;IADU,CAAD,CAJ6G;IAM5HqkB,WAAW,EAAE,CAAC;MACdzV,IAAI,EAAE5O;IADQ,CAAD,CAN+G;IAQ5HonB,gBAAgB,EAAE,CAAC;MACnBxY,IAAI,EAAE5O;IADa,CAAD,CAR0G;IAU5H0V,IAAI,EAAE,CAAC;MACP9G,IAAI,EAAE3O;IADC,CAAD,CAVsH;IAY5HomB,MAAM,EAAE,CAAC;MACTzX,IAAI,EAAE3O;IADG,CAAD,CAZoH;IAc5HgV,IAAI,EAAE,CAAC;MACPrG,IAAI,EAAE3O;IADC,CAAD,CAdsH;IAgB5H2V,MAAM,EAAE,CAAC;MACThH,IAAI,EAAE3O;IADG,CAAD,CAhBoH;IAkB5H+kB,MAAM,EAAE,CAAC;MACTpW,IAAI,EAAE3O;IADG,CAAD,CAlBoH;IAoB5H6iB,MAAM,EAAE,CAAC;MACTlU,IAAI,EAAE3O;IADG,CAAD,CApBoH;IAsB5HqmB,aAAa,EAAE,CAAC;MAChB1X,IAAI,EAAE3O;IADU,CAAD,CAtB6G;IAwB5HslB,aAAa,EAAE,CAAC;MAChB3W,IAAI,EAAE3O;IADU,CAAD,CAxB6G;IA0B5HwS,iBAAiB,EAAE,CAAC;MACpB7D,IAAI,EAAE3O;IADc,CAAD,CA1ByG;IA4B5HsmB,QAAQ,EAAE,CAAC;MACX3X,IAAI,EAAE3O;IADK,CAAD,CA5BkH;IA8B5HklB,WAAW,EAAE,CAAC;MACdvW,IAAI,EAAE3O;IADQ,CAAD,CA9B+G;IAgC5H0mB,gBAAgB,EAAE,CAAC;MACnB/X,IAAI,EAAEpO,YADa;MAEnB6H,IAAI,EAAE,CAAC,kBAAD,EAAqB;QAAE4U,IAAI,EAAE5c;MAAR,CAArB;IAFa,CAAD;EAhC0G,CAH5I;AAAA;;AAwCA,MAAMgnB,cAAN,CAAqB;EACjBnlB,WAAW,GAAG;IACV,KAAKolB,aAAL,GAAqB,EAArB;IACA,KAAKC,UAAL,GAAkB,IAAIznB,YAAJ,EAAlB;IACA,KAAKiL,KAAL,GAAa,CAAb;EACH;;EACDiO,WAAW,CAACpE,OAAD,EAAU;IACjB,IAAIA,OAAO,CAACpB,MAAZ,EAAoB;MAChB,IAAI,CAACoB,OAAO,CAACpB,MAAR,CAAe6F,WAApB,EAAiC;QAC7B,KAAKC,cAAL,CAAoBtF,WAApB;MACH;;MACD,KAAKsF,cAAL,GAAsB,KAAK9F,MAAL,CAAY3Q,SAAZ,GAAwB8R,SAAxB,CAAmC4E,WAAD,IAAiB;QACrE,KAAKlV,IAAL,GAAY,KAAKmP,MAAL,CAAY1O,SAAZ,GAAwBT,IAApC;QACA,KAAKC,OAAL,GAAe,KAAKkP,MAAL,CAAY1O,SAAZ,GAAwBR,OAAvC;QACA,KAAKkjB,cAAL,GAAsB,KAAKljB,OAA3B;QACA,KAAKyG,KAAL,GAAa,KAAKyI,MAAL,CAAYzI,KAAZ,EAAb;;QACA,IAAI,KAAK0c,iBAAL,EAAJ,EAA8B;UAC1B,KAAKjU,MAAL,CAAYjP,OAAZ,CAAoB,EAAE,KAAKF,IAA3B;QACH;;QACD,KAAKqjB,iBAAL,CAAuBnO,WAAvB;QACA,KAAKoO,SAAL;MACH,CAVqB,CAAtB;IAWH;EACJ;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACID,iBAAiB,CAAC9S,OAAD,EAAU;IACvB,IAAIA,OAAO,CAAC,QAAD,CAAP,KAAsB,SAA1B,EAAqC;MACjC,KAAKpB,MAAL,CAAYjP,OAAZ,CAAoB,CAApB;IACH;;IACD,IAAIqQ,OAAO,CAAC,QAAD,CAAP,KAAsB,QAA1B,EAAoC;MAChC,KAAKpB,MAAL,CAAYjP,OAAZ,CAAoB,KAAKqjB,OAAL,EAApB;IACH;EACJ;;EACDC,UAAU,GAAG;IACT,OAAO,KAAKrU,MAAL,CAAYzI,KAAZ,KAAsB,KAAKzG,OAAlC;EACH;;EACDyD,QAAQ,CAAC1D,IAAD,EAAO;IACX,KAAKmP,MAAL,CAAYjP,OAAZ,CAAoBF,IAApB;IACA,KAAKA,IAAL,GAAYA,IAAZ;IACA,KAAKkjB,UAAL,CAAgB/R,IAAhB,CAAqB;MAAEnR;IAAF,CAArB;IACA,OAAO,KAAP;EACH;;EACDG,IAAI,GAAG;IACH,OAAO,KAAKuD,QAAL,CAAc,KAAK+f,OAAL,KAAiB,CAA/B,CAAP;EACH;;EACDC,IAAI,GAAG;IACH,OAAO,KAAKhgB,QAAL,CAAc,KAAK+f,OAAL,KAAiB,CAA/B,CAAP;EACH;;EACDA,OAAO,GAAG;IACN,OAAO,KAAKzjB,IAAZ;EACH;;EACD2jB,QAAQ,GAAG;IACP,OAAO,KAAKC,KAAZ;EACH;;EACDL,OAAO,GAAG;IACN,OAAOje,IAAI,CAACoN,IAAL,CAAU,KAAKhM,KAAL,GAAa,KAAKzG,OAA5B,CAAP;EACH;;EACDmjB,iBAAiB,GAAG;IAChB,OAAQ,KAAKpjB,IAAL,GAAY,KAAKC,OAAlB,IAA+B,KAAKyG,KAAL,GAAa,KAAKzG,OAAjD,IAA6D,KAAKD,IAAL,GAAY,CAAhF;EACH;;EACDsjB,SAAS,GAAG;IACR,MAAMO,UAAU,GAAG,KAAKN,OAAL,EAAnB;IACA,IAAIO,cAAc,GAAG,CAArB;IACAA,cAAc,GAAGD,UAAU,GAAGC,cAAb,GAA8BD,UAA9B,GAA2CC,cAA5D;IACA,KAAKF,KAAL,GAAa,EAAb;;IACA,IAAI,KAAKJ,UAAL,EAAJ,EAAuB;MACnB,IAAIO,SAAS,GAAGze,IAAI,CAACoN,IAAL,CAAUoR,cAAc,GAAG,CAA3B,CAAhB;MACAC,SAAS,GAAG,KAAK/jB,IAAL,IAAa+jB,SAAb,GAAyB,KAAK/jB,IAA9B,GAAqC+jB,SAAjD;MACA,IAAIC,OAAO,GAAGD,SAAS,GAAGze,IAAI,CAACC,KAAL,CAAWue,cAAc,GAAG,CAA5B,CAA1B;MACAE,OAAO,GAAGA,OAAO,IAAIH,UAAX,GAAwBA,UAAxB,GAAqCG,OAA/C;MACA,MAAMC,QAAQ,GAAGD,OAAO,GAAGF,cAAV,GAA2B,CAA5C;;MACA,KAAK,IAAIxhB,CAAC,GAAG2hB,QAAb,EAAuB3hB,CAAC,IAAI0hB,OAA5B,EAAqC1hB,CAAC,EAAtC,EAA0C;QACtC,KAAKshB,KAAL,CAAW3d,IAAX,CAAgB3D,CAAhB;MACH;IACJ;EACJ;;EACD4hB,eAAe,CAAC9O,KAAD,EAAQ;IACnB,IAAI,KAAK+N,cAAT,EAAyB;MACrB,IAAI,OAAO,KAAKA,cAAZ,KAA+B,QAA/B,IAA2C,KAAKA,cAAL,CAAoBhgB,WAApB,OAAsC,KAArF,EAA4F;QACxF,KAAKgM,MAAL,CAAY1O,SAAZ,GAAwBR,OAAxB,GAAkC,IAAlC;MACH,CAFD,MAGK;QACD,KAAKkP,MAAL,CAAY1O,SAAZ,GAAwBR,OAAxB,GAAkC,KAAKkjB,cAAL,GAAsB,CAAxD;QACA,KAAKhU,MAAL,CAAYjR,OAAZ;MACH;;MACD,KAAKolB,SAAL;IACH;EACJ;;AA5FgB;;AA8FrBN,cAAc,CAAC9P,IAAf;EAAA,iBAA2G8P,cAA3G;AAAA;;AACAA,cAAc,CAAC7P,IAAf,kBA1pE+F3X,EA0pE/F;EAAA,MAA+FwnB,cAA/F;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA,WA1pE+FxnB,EA0pE/F;EAAA;EAAA;EAAA;EAAA;IAAA;MA1pE+FA,EA2pE3F,+DADJ;MA1pE+FA,EAusE3F,6DA7CJ;IAAA;;IAAA;MA1pE+FA,EA2pErF,qCADV;MA1pE+FA,EAusErF,aA7CV;MA1pE+FA,EAusErF,sEA7CV;IAAA;EAAA;EAAA,aAqDukBF,EAAE,CAACma,IArD1kB,EAqDwpBna,EAAE,CAACoa,OArD3pB,EAqDmuBpa,EAAE,CAACoY,OArDtuB,EAqD60BrX,EAAE,CAACgd,0BArDh1B,EAqDwgChd,EAAE,CAAC6X,eArD3gC,EAqD6lC7X,EAAE,CAAC8X,OArDhmC,EAqDkyC9X,EAAE,CAACid,cArDryC,EAqDi3Cjd,EAAE,CAACkd,uBArDp3C;EAAA;AAAA;;AAsDA;EAAA,mDAhtE+F/d,EAgtE/F,mBAA2FwnB,cAA3F,EAAuH,CAAC;IAC5GzY,IAAI,EAAE7O,SADsG;IAE5GsI,IAAI,EAAE,CAAC;MAAEoP,QAAQ,EAAE,4BAAZ;MAA0CC,QAAQ,EAAG;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GArDmB;MAqDdC,MAAM,EAAE,CAAC,ihBAAD;IArDM,CAAD;EAFsG,CAAD,CAAvH,QAwD4B;IAAEnE,MAAM,EAAE,CAAC;MACvB5E,IAAI,EAAE5O;IADiB,CAAD,CAAV;IAEZsnB,aAAa,EAAE,CAAC;MAChB1Y,IAAI,EAAE5O;IADU,CAAD,CAFH;IAIZunB,UAAU,EAAE,CAAC;MACb3Y,IAAI,EAAE3O;IADO,CAAD;EAJA,CAxD5B;AAAA;;AAgEA,MAAMuoB,2BAAN,CAAkC;EAC9BtmB,WAAW,GAAG;IACV,KAAKqM,QAAL,GAAgB,EAAhB;IACA,KAAKka,SAAL,GAAiB,IAAI3oB,YAAJ,EAAjB;IACA,KAAK4oB,WAAL,GAAmB,IAAI5oB,YAAJ,EAAnB;IACA,KAAK6oB,aAAL,GAAqB,IAAI7oB,YAAJ,EAArB;IACA,KAAK8V,MAAL,GAAc,IAAI9V,YAAJ,EAAd;IACA,KAAKmV,IAAL,GAAY,IAAInV,YAAJ,EAAZ;IACA,KAAKoV,MAAL,GAAc,IAAIpV,YAAJ,EAAd;IACA,KAAKklB,MAAL,GAAc,IAAIllB,YAAJ,EAAd;IACA,KAAK4lB,aAAL,GAAqB,IAAI5lB,YAAJ,EAArB;IACA,KAAKukB,WAAL,GAAmB,IAAIvkB,YAAJ,EAAnB;IACA,KAAKskB,aAAL,GAAqB,IAAItkB,YAAJ,EAArB;IACA,KAAKymB,QAAL,GAAgB,IAAIzmB,YAAJ,EAAhB;IACA,KAAK8oB,aAAL,GAAqB,IAAI9oB,YAAJ,EAArB;IACA,KAAK+oB,eAAL,GAAuB;MACnB3E,IAAI,EAAE,QADa;MAEnB4E,UAAU,EAAEta,iBAAiB,CAACua,MAFX;;MAGnB;AACZ;AACA;AACA;AACA;MACY3V,gBAAgB,EAAE,CARC;MASnBsD,2BAA2B,EAAE,KATV;MAUnBsS,UAAU,EAAE,KAVO;MAWnBC,aAAa,EAAE,KAXI;MAYnBC,SAAS,EAAE,KAZQ;MAanBC,QAAQ,EAAE,KAbS;MAcnBC,OAAO,EAAE;QACLC,WAAW,EAAE,SADR;QAEL/lB,GAAG,EAAE,IAFA;QAGL2R,IAAI,EAAE,IAHD;QAILW,MAAM,EAAE,IAJH;QAKLoP,MAAM,EAAE,EALH;QAML7Q,QAAQ,EAAE,MANL,CAMa;;MANb,CAdU;MAsBnB/S,MAAM,EAAE;QACJgb,UAAU,EAAE;MADR,CAtBW;MAyBnBnH,IAAI,EAAE;QACFmH,UAAU,EAAE,EADV;QAEFkN,iBAAiB,EAAE,MAFjB;QAGFpD,iBAAiB,EAAE,QAHjB;QAIF/D,mBAAmB,EAAE,QAJnB;QAKFoH,WAAW,EAAE;MALX,CAzBa;MAgCnBjmB,GAAG,EAAE;QACD8Y,UAAU,EAAE,EADX;QAEDoN,gBAAgB,EAAE,SAFjB;QAGDtH,mBAAmB,EAAE,QAHpB;QAIDC,mBAAmB,EAAE,QAJpB;QAKDsH,aAAa,EAAE;MALd,CAhCc;MAuCnB7T,MAAM,EAAE;QACJ8T,mBAAmB,EAAE,QADjB;QAEJC,aAAa,EAAE;MAFX,CAvCW;MA2CnBC,MAAM,EAAE;QACJvE,sBAAsB,EAAE;MADpB,CA3CW;MA8CnBwE,IAAI,EAAE;QACF9c,EAAE,EAAE,EADF;QAEF+B,KAAK,EAAE;MAFL,CA9Ca;MAkDnBoY,aAAa,EAAE,eAlDI;MAmDnB9V,OAAO,EAAE,EAnDU;MAoDnB0Y,KAAK,EAAE;QACHC,OAAO,EAAE,IADN;QAEH1lB,IAAI,EAAE,CAFH;QAGHC,OAAO,EAAE;MAHN,CApDY;MAyDnB8iB,gBAAgB,EAAE,MAAM;IAzDL,CAAvB;IA2DA,KAAK1O,aAAL,GAAqB,KAArB;IACA,KAAK4B,UAAL,GAAkB,IAAItZ,OAAJ,EAAlB;EACH;;EACDgY,WAAW,CAACpE,OAAD,EAAU;IACjB,IAAI,KAAK6D,IAAT,EAAe;MACX,IAAI7D,OAAO,CAAC,UAAD,CAAX,EAAyB;QACrB,KAAK6D,IAAL,CAAU7E,WAAV,CAAsB,KAAKoW,eAAL,EAAtB;MACH;;MACD,IAAIpV,OAAO,CAAC,QAAD,CAAX,EAAuB;QACnB,KAAKpB,MAAL,GAAc,KAAKkB,aAAL,EAAd;QACA,KAAK+D,IAAL,CAAU5E,SAAV,CAAoB,KAAKL,MAAzB;MACH;IACJ,CARD,MASK;MACD,KAAKyW,QAAL;IACH;;IACD,KAAKC,OAAL,GAAe,KAAKzR,IAAL,CAAUnE,UAAV,CAAqB,SAArB,CAAf;IACA,KAAK6V,UAAL,GAAkB,KAAK1R,IAAL,CAAUnE,UAAV,CAAqB,YAArB,CAAlB;IACA,KAAKqQ,YAAL,GAAoB,KAAKlM,IAAL,CAAUnE,UAAV,CAAqB,YAArB,CAApB;IACA,KAAKsQ,eAAL,GAAuB,KAAKnM,IAAL,CAAUnE,UAAV,CAAqB,eAArB,CAAvB;IACA,KAAK8V,cAAL,GAAsB,KAAK3R,IAAL,CAAUnE,UAAV,CAAqB,eAArB,CAAtB;IACA,KAAK8V,cAAL,GAAsB,KAAK3R,IAAL,CAAUnE,UAAV,CAAqB,eAArB,CAAtB;IACA,KAAKgT,aAAL,GAAqB,KAAK7O,IAAL,CAAUnE,UAAV,CAAqB,qBAArB,CAArB;IACA,KAAK8S,gBAAL,GAAwB,KAAK3O,IAAL,CAAUnE,UAAV,CAAqB,kBAArB,CAAxB;EACH;;EACDiH,WAAW,GAAG;IACV,KAAKjB,UAAL,CAAgB9V,IAAhB;EACH;;EACD+N,SAAS,CAAC7I,KAAD,EAAQgN,2BAA2B,GAAG,KAAK+B,IAAL,CAAUnE,UAAV,CAAqB,6BAArB,CAAtC,EAA2F;IAChG,IAAI,CAAC,KAAKmE,IAAV,EAAgB;MACZ;IACH;;IACD,KAAKA,IAAL,CAAUlK,QAAV,CAAmB6E,gBAAnB,GAAsC1J,KAAtC;;IACA,IAAI,KAAK2gB,iBAAL,CAAuB3gB,KAAvB,CAAJ,EAAmC;MAC/B;MACA,KAAK4gB,eAAL;MACA;IACH;;IACD,IAAI5T,2BAAJ,EAAiC;MAC7B,MAAMlD,MAAM,GAAG,KAAKA,MAApB;MACA,MAAM3O,MAAM,GAAG2O,MAAM,CAAC1O,SAAP,EAAf;MACA,MAAMT,IAAI,GAAGoF,kBAAkB,CAACC,KAAD,EAAQ7E,MAAM,CAACP,OAAf,CAA/B;MACAoF,KAAK,GAAGA,KAAK,GAAG7E,MAAM,CAACP,OAAvB;MACA,KAAKmU,IAAL,CAAUlK,QAAV,CAAmB6E,gBAAnB,GAAsC1J,KAAtC;;MACA,IAAIrF,IAAI,KAAKQ,MAAM,CAACR,IAApB,EAA0B;QACtBmP,MAAM,CAACjP,OAAP,CAAeF,IAAf;QACA;MACH;IACJ;;IACD,MAAM4G,GAAG,GAAG,KAAKwN,IAAL,CAAUxG,OAAV,GAAoBvI,KAApB,CAAZ;;IACA,IAAIuB,GAAJ,EAAS;MACL,KAAK8J,WAAL,CAAiB9J,GAAjB;IACH,CAFD,MAGK;MACD;MACA,KAAKqf,eAAL;IACH;EACJ;;EACDA,eAAe,GAAG;IACd,KAAK7R,IAAL,CAAUvM,OAAV,CAAkBmG,WAAlB;IACA,KAAKkY,eAAL,CAAqB,IAArB;EACH;;EACDhF,aAAa,CAACta,GAAD,EAAM;IACf,IAAI,KAAKwN,IAAL,CAAUnE,UAAV,CAAqB,YAArB,MAAuC,OAA3C,EAAoD;MAChD,KAAKkW,mBAAL,CAAyBvf,GAAzB;IACH,CAFD,MAGK;MACD,KAAK8J,WAAL,CAAiB9J,GAAjB;IACH;EACJ;;EACDwf,eAAe,CAACxf,GAAD,EAAM;IACjB,IAAI,KAAKwN,IAAL,CAAUnE,UAAV,CAAqB,YAArB,MAAuC,OAA3C,EAAoD;MAChD,KAAKmE,IAAL,CAAUlG,SAAV,CAAoBtH,GAApB;MACA,KAAKyf,iBAAL,CAAuBzf,GAAvB;MACA,KAAK0f,aAAL,CAAmB1f,GAAnB;IACH;EACJ;;EACD2f,UAAU,CAAC3f,GAAD,EAAM;IACZ,KAAKsb,QAAL,CAAc/Q,IAAd,CAAmBvK,GAAnB;EACH;;EACDwH,iBAAiB,CAACxH,GAAD,EAAM;IACnB,KAAKwN,IAAL,CAAUhG,iBAAV,CAA4BxH,GAA5B;IACA,KAAKyf,iBAAL,CAAuBzf,GAAvB;IACA,KAAK0f,aAAL,CAAmB1f,GAAnB;EACH;;EACD4f,eAAe,CAACC,MAAD,EAAS;IACpB,OAAO/pB,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;MAChD,KAAK2X,aAAL,GAAqB,CAAC,KAAKA,aAA3B;MACA,MAAM,KAAKD,IAAL,CAAUlC,aAAV,CAAwB,KAAKmC,aAA7B,CAAN;MACA,KAAKgS,iBAAL,CAAuB,IAAvB;MACA,KAAKC,aAAL,CAAmB,IAAnB;IACH,CALe,CAAhB;EAMH;;EACD5V,WAAW,CAAC9J,GAAD,EAAM;IACb,KAAKwN,IAAL,CAAUlG,SAAV,CAAoBtH,GAApB;IACA,KAAK0f,aAAL,CAAmB1f,GAAnB;EACH;;EACDka,WAAW,CAACla,GAAD,EAAM;IACb,KAAKwN,IAAL,CAAU/F,SAAV,CAAoBzH,GAApB;EACH;;EACDuf,mBAAmB,CAACvf,GAAD,EAAM;IACrB,KAAK0f,aAAL,CAAmB1f,GAAnB;EACH;;EACDgf,QAAQ,GAAG;IACP,KAAKzW,MAAL,GAAc,KAAKkB,aAAL,EAAd;IACA,KAAK+D,IAAL,GAAY,IAAIlF,IAAJ,CAAS,KAAKC,MAAd,EAAsB,KAAKwW,eAAL,EAAtB,CAAZ;IACA,KAAKe,sBAAL;IACA,KAAKC,wBAAL;IACA;;IACAC,UAAU,CAAC,MAAM;MACb,KAAKrC,aAAL,CAAmBpT,IAAnB,CAAwB,KAAKiD,IAAL,CAAUvM,OAAlC;IACH,CAFS,EAEP,EAFO,CAAV;EAGH;;EACDwI,aAAa,GAAG;IACZ,IAAI,KAAKlB,MAAL,YAAuBvR,UAA3B,EAAuC;MACnC,OAAO,KAAKuR,MAAZ;IACH,CAFD,MAGK,IAAI,KAAKA,MAAL,YAAuBlL,KAA3B,EAAkC;MACnC,OAAO,IAAIuB,eAAJ,CAAoB,KAAK2J,MAAzB,CAAP;IACH;;IACD,OAAO,IAAI3J,eAAJ,EAAP;EACH;;EACDmgB,eAAe,GAAG;IACd,OAAO/hB,UAAU,CAAC,EAAD,EAAK,KAAK4gB,eAAV,EAA2B,KAAKta,QAAhC,CAAjB;EACH;;EACDgZ,UAAU,CAACuD,MAAD,EAAS;IACf,KAAKI,gBAAL;EACH;;EACDlmB,IAAI,CAAC8lB,MAAD,EAAS;IACT,KAAKI,gBAAL;EACH;;EACD9pB,MAAM,CAAC0pB,MAAD,EAAS;IACX,KAAKI,gBAAL;EACH;;EACDC,oBAAoB,GAAG;IACnB,IAAIhkB,EAAJ,EAAQC,EAAR;;IACA,OAAO,CAAC,CAACA,EAAE,GAAG,CAACD,EAAE,GAAG,KAAKsR,IAAX,MAAqB,IAArB,IAA6BtR,EAAE,KAAK,KAAK,CAAzC,GAA6C,KAAK,CAAlD,GAAsDA,EAAE,CAACiH,UAAH,EAA5D,MAAiF,IAAjF,IAAyFhH,EAAE,KAAK,KAAK,CAArG,GAAyGA,EAAzG,GAA8G,EAA/G,EAAmHhG,MAAnH,CAA2H6K,MAAD,IAAYA,MAAM,CAAC0C,IAA7I,CAAP;EACH;;EACDyc,sBAAsB,CAACC,QAAD,EAAW;IAC7B,KAAK9c,QAAL,CAAc6C,OAAd,CAAsBia,QAAtB,EAAgC1c,IAAhC,GAAuC,KAAvC,CAD6B,CAE7B;;IACA,KAAK8J,IAAL,CAAU7E,WAAV,CAAsB,KAAKoW,eAAL,EAAtB;EACH;;EACDsB,YAAY,CAACD,QAAD,EAAW;IACnB,KAAK9c,QAAL,CAAc6C,OAAd,CAAsBia,QAAtB,EAAgC1c,IAAhC,GAAuC,IAAvC;IACA,KAAK8J,IAAL,CAAU7E,WAAV,CAAsB,KAAKoW,eAAL,EAAtB;EACH;;EACDkB,gBAAgB,GAAG,CACf;EACH;;EACDR,iBAAiB,CAACzf,GAAD,EAAM;IACnB,MAAMwG,YAAY,GAAG,KAAKgH,IAAL,CAAUpC,eAAV,EAArB;IACA,MAAMlM,aAAa,GAAG,KAAKsO,IAAL,CAAUnN,gBAAV,EAAtB;IACA,KAAKqd,aAAL,CAAmBnT,IAAnB,CAAwB;MACpB9S,IAAI,EAAEuI,GAAG,GAAGA,GAAG,CAAC2B,OAAJ,EAAH,GAAmB,IADR;MAEpB1B,UAAU,EAAED,GAAG,GAAGA,GAAG,CAAC6C,aAAJ,EAAH,GAAyB,IAFpB;MAGpB0F,MAAM,EAAE,KAAKA,MAHO;MAIpB+X,QAAQ,EAAE9Z,YAAY,IAAIA,YAAY,CAAC7K,MAA7B,GAAsC6K,YAAY,CAACjQ,GAAb,CAAkB8U,CAAD,IAAOA,CAAC,CAAC1J,OAAF,EAAxB,CAAtC,GAA6E,EAJnE;MAKpBzC;IALoB,CAAxB;EAOH;;EACDwgB,aAAa,CAAC1f,GAAD,EAAM;IACf,MAAMvI,IAAI,GAAG;MACTA,IAAI,EAAEuI,GAAG,GAAGA,GAAG,CAAC2B,OAAJ,EAAH,GAAmB,IADnB;MAET1B,UAAU,EAAED,GAAG,GAAGA,GAAG,CAAC6C,aAAJ,EAAH,GAAyB,IAF/B;MAGTN,UAAU,EAAEvC,GAAG,GAAGA,GAAG,CAAC8C,aAAJ,EAAH,GAAyB,IAH/B;MAITyF,MAAM,EAAE,KAAKA;IAJJ,CAAb;IAMA,KAAKiV,SAAL,CAAejT,IAAf,CAAoB9S,IAApB;;IACA,IAAI,EAAEuI,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAK,KAAK,CAA7B,GAAiC,KAAK,CAAtC,GAA0CA,GAAG,CAACC,UAAhD,CAAJ,EAAiE;MAC7D,KAAKwd,WAAL,CAAiBlT,IAAjB,CAAsB9S,IAAtB;IACH;;IACD,IAAI,EAAEuI,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAK,KAAK,CAA7B,GAAiC,KAAK,CAAtC,GAA0CA,GAAG,CAACuC,UAAhD,CAAJ,EAAiE;MAC7D,KAAKkb,WAAL,CAAiBlT,IAAjB,CAAsB9S,IAAtB;IACH;EACJ;;EACD6nB,eAAe,CAACtf,GAAD,EAAM;IACjB,IAAIA,GAAJ,EACI,KAAKyd,WAAL,CAAiBlT,IAAjB,CAAsB;MAClB9S,IAAI,EAAEuI,GAAG,GAAGA,GAAG,CAAC2B,OAAJ,EAAH,GAAmB,IADV;MAElB1B,UAAU,EAAED,GAAG,GAAGA,GAAG,CAAC6C,aAAJ,EAAH,GAAyB,IAFtB;MAGlB0F,MAAM,EAAE,KAAKA;IAHK,CAAtB;EAKP;;EACD6W,iBAAiB,CAAC3gB,KAAD,EAAQ;IACrB,IAAIvC,EAAJ;;IACA,MAAMwP,UAAU,GAAG,CAACxP,EAAE,GAAG,KAAKqM,MAAX,MAAuB,IAAvB,IAA+BrM,EAAE,KAAK,KAAK,CAA3C,GAA+C,KAAK,CAApD,GAAwDA,EAAE,CAAC4D,KAAH,EAA3E;IACA,OAAOrB,KAAK,GAAG,CAAR,IAAc,OAAOiN,UAAP,KAAsB,QAAtB,IAAkCjN,KAAK,IAAIiN,UAAhE;EACH;;EACDoU,sBAAsB,GAAG;IACrB,IAAI,KAAKS,uBAAT,EAAkC;MAC9B,KAAKA,uBAAL,CAA6BxX,WAA7B;IACH;;IACD,KAAKwX,uBAAL,GAA+B,KAAK/S,IAAL,CAAU1D,WAAV,GAC1ByF,IAD0B,CACrBrZ,SAAS,CAAC,KAAKmZ,UAAN,CADY,EAE1B3F,SAF0B,CAEf1J,GAAD,IAAS;MACpB,KAAK0f,aAAL,CAAmB1f,GAAnB;IACH,CAJ8B,CAA/B;EAKH;;EACD+f,wBAAwB,GAAG;IACvB,IAAI,KAAKS,yBAAT,EAAoC;MAChC,KAAKA,yBAAL,CAA+BzX,WAA/B;IACH;;IACD,KAAKyX,yBAAL,GAAiC,KAAKhT,IAAL,CAAUzD,aAAV,GAC5BwF,IAD4B,CACvBrZ,SAAS,CAAC,KAAKmZ,UAAN,CADc,EAE5B3F,SAF4B,CAEjB1J,GAAD,IAAS;MACpB,KAAKsf,eAAL,CAAqBtf,GAArB;IACH,CAJgC,CAAjC;EAKH;;AA1R6B;;AA4RlCud,2BAA2B,CAACjR,IAA5B;EAAA,iBAAwHiR,2BAAxH;AAAA;;AACAA,2BAA2B,CAAChR,IAA5B,kBA7iF+F3X,EA6iF/F;EAAA,MAA4G2oB,2BAA5G;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WA7iF+F3oB,EA6iF/F;EAAA;EAAA;EAAA;EAAA;IAAA;MA7iF+FA,EA6iFqe,uDAApkB;MA7iF+FA,EA6iF0iB;QAAA,OAAU,kCAAV;MAAA,EAAzoB;MA7iF+FA,EA6iFulB,eAAtrB;MA7iF+FA,EA6iF4nB,2CAA3tB;MA7iF+FA,EA6iF0vB,8EAAz1B;MA7iF+FA,EA6iF2qC,8BAA1wC;MA7iF+FA,EA6iFi4C;QAAA,OAAS,qBAAT;MAAA;QAAA,OAA+C,uBAA/C;MAAA;QAAA,OAAuF,uBAAvF;MAAA;QAAA,OAAsI,2BAAtI;MAAA;QAAA,OAAyL,yBAAzL;MAAA;QAAA,OAA8O,6BAA9O;MAAA;QAAA,OAAiS,uBAAjS;MAAA;QAAA,OAA2U,sBAA3U;MAAA,EAAh+C;MA7iF+FA,EA6iFuuD,mBAAt0D;MA7iF+FA,EA6iFqwD,wHAAp2D;IAAA;;IAAA;MA7iF+FA,EA6iFwgB,+CAAvmB;MA7iF+FA,EA6iF0sB,aAAzyB;MA7iF+FA,EA6iF0sB,yDAAzyB;MA7iF+FA,EA6iFkyB,aAAj4B;MA7iF+FA,EA6iFkyB,8DAAj4B;MA7iF+FA,EA6iFktC,aAAjzC;MA7iF+FA,EA6iFktC,iKAAjzC;MA7iF+FA,EA6iFqyD,aAAp4D;MA7iF+FA,EA6iFqyD,uCAAp4D;IAAA;EAAA;EAAA,aAAo5F+X,iBAAp5F,EAAmgG8M,2BAAngG,EAAysGyB,2BAAzsG,EAAs/GkB,cAAt/G,EAAooH1nB,EAAE,CAACoa,OAAvoH,EAA+sHpa,EAAE,CAACma,IAAltH;EAAA;AAAA;;AACA;EAAA,mDA9iF+Fja,EA8iF/F,mBAA2F2oB,2BAA3F,EAAoI,CAAC;IACzH5Z,IAAI,EAAE7O,SADmH;IAEzHsI,IAAI,EAAE,CAAC;MAAEoP,QAAQ,EAAE,sBAAZ;MAAoCC,QAAQ,EAAE,g+CAA9C;MAAghDC,MAAM,EAAE,CAAC,80BAAD;IAAxhD,CAAD;EAFmH,CAAD,CAApI,QAG4B;IAAEnE,MAAM,EAAE,CAAC;MACvB5E,IAAI,EAAE5O;IADiB,CAAD,CAAV;IAEZuO,QAAQ,EAAE,CAAC;MACXK,IAAI,EAAE5O;IADK,CAAD,CAFE;IAIZyoB,SAAS,EAAE,CAAC;MACZ7Z,IAAI,EAAE3O;IADM,CAAD,CAJC;IAMZyoB,WAAW,EAAE,CAAC;MACd9Z,IAAI,EAAE3O;IADQ,CAAD,CAND;IAQZ0oB,aAAa,EAAE,CAAC;MAChB/Z,IAAI,EAAE3O;IADU,CAAD,CARH;IAUZ2V,MAAM,EAAE,CAAC;MACThH,IAAI,EAAE3O;IADG,CAAD,CAVI;IAYZgV,IAAI,EAAE,CAAC;MACPrG,IAAI,EAAE3O;IADC,CAAD,CAZM;IAcZiV,MAAM,EAAE,CAAC;MACTtG,IAAI,EAAE3O;IADG,CAAD,CAdI;IAgBZ+kB,MAAM,EAAE,CAAC;MACTpW,IAAI,EAAE3O;IADG,CAAD,CAhBI;IAkBZylB,aAAa,EAAE,CAAC;MAChB9W,IAAI,EAAE3O;IADU,CAAD,CAlBH;IAoBZokB,WAAW,EAAE,CAAC;MACdzV,IAAI,EAAE3O;IADQ,CAAD,CApBD;IAsBZmkB,aAAa,EAAE,CAAC;MAChBxV,IAAI,EAAE3O;IADU,CAAD,CAtBH;IAwBZsmB,QAAQ,EAAE,CAAC;MACX3X,IAAI,EAAE3O;IADK,CAAD,CAxBE;IA0BZ2oB,aAAa,EAAE,CAAC;MAChBha,IAAI,EAAE3O;IADU,CAAD;EA1BH,CAH5B;AAAA;;AAiCA,MAAMyrB,eAAe,GAAG,CACpBzH,aADoB,EAEpBpB,eAFoB,EAGpBM,aAHoB,EAIpBD,mBAJoB,EAKpBY,oBALoB,EAMpBE,iBANoB,EAOpBR,uBAPoB,EAQpBE,wBARoB,EASpBG,oBAToB,EAUpBR,qBAVoB,EAWpBE,uBAXoB,EAYpBnB,mBAZoB,EAapBM,iBAboB,CAAxB;;AAeA,MAAMiJ,UAAN,CAAiB;;AAEjBA,UAAU,CAACpU,IAAX;EAAA,iBAAuGoU,UAAvG;AAAA;;AACAA,UAAU,CAACC,IAAX,kBAjmF+F/rB,EAimF/F;EAAA,MAAwG8rB;AAAxG;AA2BAA,UAAU,CAACE,IAAX,kBA5nF+FhsB,EA4nF/F;EAAA,UAA8H,CAClHD,YADkH,EAElHiB,WAFkH,EAGlHe,kBAHkH,CAA9H;AAAA;;AAKA;EAAA,mDAjoF+F/B,EAioF/F,mBAA2F8rB,UAA3F,EAAmH,CAAC;IACxG/c,IAAI,EAAEnO,QADkG;IAExG4H,IAAI,EAAE,CAAC;MACCyjB,OAAO,EAAE,CACLlsB,YADK,EAELiB,WAFK,EAGLe,kBAHK,CADV;MAMCmqB,YAAY,EAAE,CACV,GAAGL,eADO,CANf;MASCM,OAAO,EAAE,CACL,GAAGN,eADE;IATV,CAAD;EAFkG,CAAD,CAAnH;AAAA;;AAiBA,MAAMO,iBAAiB,GAAG,CACtB9P,aADsB,EAEtBgB,aAFsB,EAGtB0E,eAHsB,EAItB1C,mBAJsB,EAKtBwC,sBALsB,EAMtBpF,qBANsB,EAOtBsB,uBAPsB,EAQtBS,wBARsB,EAStBoD,oBATsB,EAUtBpE,qBAVsB,EAWtB2C,sBAXsB,CAA1B;;AAaA,MAAMiM,YAAN,CAAmB;;AAEnBA,YAAY,CAAC3U,IAAb;EAAA,iBAAyG2U,YAAzG;AAAA;;AACAA,YAAY,CAACN,IAAb,kBAlqF+F/rB,EAkqF/F;EAAA,MAA0GqsB;AAA1G;AAyBAA,YAAY,CAACL,IAAb,kBA3rF+FhsB,EA2rF/F;EAAA,UAAkI,CACtHD,YADsH,EAEtHiB,WAFsH,EAGtHC,mBAHsH,EAItHc,kBAJsH,EAKtHI,wBALsH,CAAlI;AAAA;;AAOA;EAAA,mDAlsF+FnC,EAksF/F,mBAA2FqsB,YAA3F,EAAqH,CAAC;IAC1Gtd,IAAI,EAAEnO,QADoG;IAE1G4H,IAAI,EAAE,CAAC;MACCyjB,OAAO,EAAE,CACLlsB,YADK,EAELiB,WAFK,EAGLC,mBAHK,EAILc,kBAJK,EAKLI,wBALK,CADV;MAQC+pB,YAAY,EAAE,CACV,GAAGE,iBADO,CARf;MAWCD,OAAO,EAAE,CACL,GAAGC,iBADE;IAXV,CAAD;EAFoG,CAAD,CAArH;AAAA;;AAmBA,MAAME,WAAN,CAAkB;;AAElBA,WAAW,CAAC5U,IAAZ;EAAA,iBAAwG4U,WAAxG;AAAA;;AACAA,WAAW,CAACP,IAAZ,kBAxtF+F/rB,EAwtF/F;EAAA,MAAyGssB;AAAzG;AAEAA,WAAW,CAACN,IAAZ,kBA1tF+FhsB,EA0tF/F;EAAA,UAAgI,CACpHD,YADoH,EAEpHiB,WAFoH,CAAhI;AAAA;;AAIA;EAAA,mDA9tF+FhB,EA8tF/F,mBAA2FssB,WAA3F,EAAoH,CAAC;IACzGvd,IAAI,EAAEnO,QADmG;IAEzG4H,IAAI,EAAE,CAAC;MACCyjB,OAAO,EAAE,CACLlsB,YADK,EAELiB,WAFK,CADV;MAKCkrB,YAAY,EAAE,CACV1E,cADU,CALf;MAQC2E,OAAO,EAAE,CACL3E,cADK;IARV,CAAD;EAFmG,CAAD,CAApH;AAAA;;AAgBA,MAAM+E,UAAN,CAAiB;;AAEjBA,UAAU,CAAC7U,IAAX;EAAA,iBAAuG6U,UAAvG;AAAA;;AACAA,UAAU,CAACR,IAAX,kBAjvF+F/rB,EAivF/F;EAAA,MAAwGusB;AAAxG;AAGAA,UAAU,CAACP,IAAX,kBApvF+FhsB,EAovF/F;EAAA,UAA8H,CAClHD,YADkH,CAA9H;AAAA;;AAGA;EAAA,mDAvvF+FC,EAuvF/F,mBAA2FusB,UAA3F,EAAmH,CAAC;IACxGxd,IAAI,EAAEnO,QADkG;IAExG4H,IAAI,EAAE,CAAC;MACCyjB,OAAO,EAAE,CACLlsB,YADK,CADV;MAICmsB,YAAY,EAAE,CACV9U,YADU,EAEVW,iBAFU,CAJf;MAQCoU,OAAO,EAAE,CACL/U,YADK,EAELW,iBAFK;IARV,CAAD;EAFkG,CAAD,CAAnH;AAAA;;AAiBA,MAAMyU,gBAAgB,GAAG,CACrBtG,0BADqB,EAErBT,wBAFqB,EAGrBP,oBAHqB,EAIrBG,uBAJqB,EAKrBJ,wBALqB,EAMrBqB,2BANqB,CAAzB;;AAQA,MAAMmG,WAAN,CAAkB;;AAElBA,WAAW,CAAC/U,IAAZ;EAAA,iBAAwG+U,WAAxG;AAAA;;AACAA,WAAW,CAACV,IAAZ,kBAnxF+F/rB,EAmxF/F;EAAA,MAAyGysB;AAAzG;AAaAA,WAAW,CAACT,IAAZ,kBAhyF+FhsB,EAgyF/F;EAAA,UAAgI,CACpHD,YADoH,EAEpHiB,WAFoH,EAGpH8qB,UAHoH,CAAhI;AAAA;;AAKA;EAAA,mDAryF+F9rB,EAqyF/F,mBAA2FysB,WAA3F,EAAoH,CAAC;IACzG1d,IAAI,EAAEnO,QADmG;IAEzG4H,IAAI,EAAE,CAAC;MACCyjB,OAAO,EAAE,CACLlsB,YADK,EAELiB,WAFK,EAGL8qB,UAHK,CADV;MAMCI,YAAY,EAAE,CACV,GAAGM,gBADO,CANf;MASCL,OAAO,EAAE,CACL,GAAGK,gBADE;IATV,CAAD;EAFmG,CAAD,CAApH;AAAA;;AAiBA,MAAME,UAAU,GAAG,CACfrS,mBADe,CAAnB;;AAGA,MAAMsS,gBAAN,CAAuB;;AAEvBA,gBAAgB,CAACjV,IAAjB;EAAA,iBAA6GiV,gBAA7G;AAAA;;AACAA,gBAAgB,CAACZ,IAAjB,kBA5zF+F/rB,EA4zF/F;EAAA,MAA8G2sB;AAA9G;AACAA,gBAAgB,CAACX,IAAjB,kBA7zF+FhsB,EA6zF/F;EAAA,UAA0I,CAC9HD,YAD8H,CAA1I;AAAA;;AAGA;EAAA,mDAh0F+FC,EAg0F/F,mBAA2F2sB,gBAA3F,EAAyH,CAAC;IAC9G5d,IAAI,EAAEnO,QADwG;IAE9G4H,IAAI,EAAE,CAAC;MACCyjB,OAAO,EAAE,CACLlsB,YADK,CADV;MAICmsB,YAAY,EAAE,CACV,GAAGQ,UADO,CAJf;MAOCP,OAAO,EAAE,CACL,GAAGO,UADE;IAPV,CAAD;EAFwG,CAAD,CAAzH;AAAA;;AAeA,MAAME,gBAAgB,GAAG,CACrBxK,gBADqB,EAErBtJ,qBAFqB,EAGrBoD,kBAHqB,EAIrB1D,0BAJqB,EAKrB4B,oBALqB,EAMrBd,cANqB,EAOrB4I,wBAPqB,EAQrBuC,qBARqB,EASrB5I,uBATqB,EAUrBgJ,2BAVqB,CAAzB;;AAYA,MAAMgI,WAAN,CAAkB;;AAElBA,WAAW,CAACnV,IAAZ;EAAA,iBAAwGmV,WAAxG;AAAA;;AACAA,WAAW,CAACd,IAAZ,kBA91F+F/rB,EA81F/F;EAAA,MAAyG6sB;AAAzG;AAuBAA,WAAW,CAACb,IAAZ,kBAr3F+FhsB,EAq3F/F;EAAA,UAAgI,CACpHD,YADoH,EAEpHiB,WAFoH,EAGpHqrB,YAHoH,EAIpHP,UAJoH,EAKpHa,gBALoH,CAAhI;AAAA;;AAOA;EAAA,mDA53F+F3sB,EA43F/F,mBAA2F6sB,WAA3F,EAAoH,CAAC;IACzG9d,IAAI,EAAEnO,QADmG;IAEzG4H,IAAI,EAAE,CAAC;MACCyjB,OAAO,EAAE,CACLlsB,YADK,EAELiB,WAFK,EAGLqrB,YAHK,EAILP,UAJK,EAKLa,gBALK,CADV;MAQCT,YAAY,EAAE,CACV,GAAGU,gBADO,CARf;MAWCT,OAAO,EAAE,CACL,GAAGS,gBADE;IAXV,CAAD;EAFmG,CAAD,CAApH;AAAA;;AAmBA,MAAME,wBAAN,CAA+B;;AAE/BA,wBAAwB,CAACpV,IAAzB;EAAA,iBAAqHoV,wBAArH;AAAA;;AACAA,wBAAwB,CAACf,IAAzB,kBAl5F+F/rB,EAk5F/F;EAAA,MAAsH8sB;AAAtH;AASAA,wBAAwB,CAACd,IAAzB,kBA35F+FhsB,EA25F/F;EAAA,UAA0J,CAC9ID,YAD8I,EAE9IiB,WAF8I,EAG9IC,mBAH8I,EAI9I6qB,UAJ8I,EAK9IO,YAL8I,EAM9IC,WAN8I,EAO9IG,WAP8I,EAQ9II,WAR8I,EAS9IN,UAT8I,CAA1J;AAAA;;AAWA;EAAA,mDAt6F+FvsB,EAs6F/F,mBAA2F8sB,wBAA3F,EAAiI,CAAC;IACtH/d,IAAI,EAAEnO,QADgH;IAEtH4H,IAAI,EAAE,CAAC;MACC0jB,YAAY,EAAE,CACVvD,2BADU,CADf;MAICsD,OAAO,EAAE,CACLlsB,YADK,EAELiB,WAFK,EAGLC,mBAHK,EAIL6qB,UAJK,EAKLO,YALK,EAMLC,WANK,EAOLG,WAPK,EAQLI,WARK,EASLN,UATK,CAJV;MAeCJ,OAAO,EAAE,CACLxD,2BADK;IAfV,CAAD;EAFgH,CAAD,CAAjI;AAAA;;AAuBA,MAAMoE,gBAAN,CAAuB;EACnB1qB,WAAW,CAAC;IAAE2qB,QAAQ,GAAG,EAAb;IAAiBC,YAAY,GAAG,EAAhC;IAAoCC,UAAU,GAAG,EAAjD;IAAqDC,YAAY,GAAG,EAApE;IAAwEC,aAAa,GAAG,EAAxF;IAA4FC,cAAc,GAAG,EAA7G;IAAiHC,QAAQ,GAAG,EAA5H;IAAgIC,OAAO,GAAG;EAA1I,IAAiJ,EAAlJ,EAAsJ;IAC7J,KAAKP,QAAL,GAAgBA,QAAQ,GAAGA,QAAH,GAAc,EAAtC;IACA,KAAKC,YAAL,GAAoBA,YAAY,GAAGA,YAAH,GAAkBF,gBAAgB,CAACS,cAAnE;IACA,KAAKN,UAAL,GAAkBA,UAAU,GAAGA,UAAH,GAAgBH,gBAAgB,CAACU,YAA7D;IACA,KAAKN,YAAL,GAAoBA,YAAY,GAAGA,YAAH,GAAkBJ,gBAAgB,CAACW,cAAnE;IACA,KAAKN,aAAL,GAAqBA,aAAa,GAAGA,aAAH,GAAmBL,gBAAgB,CAACY,eAAtE;IACA,KAAKN,cAAL,GAAsBA,cAAc,GAAGA,cAAH,GAAoBN,gBAAgB,CAACa,gBAAzE;IACA,KAAKN,QAAL,GAAgBA,QAAQ,GAAGA,QAAH,GAAcP,gBAAgB,CAACc,SAAvD;IACA,KAAKN,OAAL,GAAeA,OAAO,GAAGA,OAAH,GAAaR,gBAAgB,CAACe,QAApD;EACH;;AAVkB;;AAYvBf,gBAAgB,CAACS,cAAjB,GAAkC,OAAlC;AACAT,gBAAgB,CAACU,YAAjB,GAAgC,QAAhC;AACAV,gBAAgB,CAACW,cAAjB,GAAkC,OAAlC;AACAX,gBAAgB,CAACY,eAAjB,GAAmC,QAAnC;AACAZ,gBAAgB,CAACa,gBAAjB,GAAoC,cAApC;AACAb,gBAAgB,CAACc,SAAjB,GAA6B,eAA7B;AACAd,gBAAgB,CAACe,QAAjB,GAA4B,EAA5B;;AAEA,MAAMC,gBAAN,SAA+B/jB,eAA/B,CAA+C;EAC3C3H,WAAW,CAACge,IAAD,EAAOpc,IAAI,GAAG,EAAd,EAAkB;IACzB;IACA,KAAKoc,IAAL,GAAYA,IAAZ;IACA,KAAK2N,gBAAL,GAAwB,CAAxB;IACA,KAAK/pB,IAAL,GAAY,IAAI8oB,gBAAJ,CAAqB9oB,IAArB,CAAZ;;IACA,IAAI,CAAC,KAAKA,IAAL,CAAU+oB,QAAf,EAAyB;MACrB,MAAM,IAAIniB,KAAJ,CAAU,mFAAV,CAAN;IACH;EACJ;;EACDK,KAAK,GAAG;IACJ,OAAO,KAAK8iB,gBAAZ;EACH;;EACDnpB,WAAW,GAAG;IACV,OAAO,KAAKopB,eAAL,GACFtT,IADE,CACGhZ,GAAG,CAACusB,GAAG,IAAI;MACjB,KAAKF,gBAAL,GAAwB,KAAKG,wBAAL,CAA8BD,GAA9B,CAAxB;MACA,KAAKrrB,IAAL,GAAY,KAAKurB,uBAAL,CAA6BF,GAA7B,CAAZ;MACA,OAAO,KAAKrrB,IAAZ;IACH,CAJY,CADN,EAKHwrB,SALG,EAAP;EAMH;EACD;AACJ;AACA;AACA;AACA;;;EACID,uBAAuB,CAACF,GAAD,EAAM;IACzB,MAAMI,OAAO,GAAGJ,GAAG,CAACK,IAApB;IACA,MAAM1rB,IAAI,GAAG,CAAC,CAAC,KAAKoB,IAAL,CAAUspB,OAAZ,GAAsBjkB,iBAAiB,CAACglB,OAAD,EAAU,KAAKrqB,IAAL,CAAUspB,OAApB,EAA6B,EAA7B,CAAvC,GAA0Ee,OAAvF;;IACA,IAAIzrB,IAAI,YAAY4F,KAApB,EAA2B;MACvB,OAAO5F,IAAP;IACH;;IACD,MAAM,IAAIgI,KAAJ,CAAW;AACzB,4EAA4E,KAAK5G,IAAL,CAAUspB,OAAQ,wBADhF,CAAN;EAEH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACIY,wBAAwB,CAACD,GAAD,EAAM;IAC1B,IAAIA,GAAG,CAACM,OAAJ,CAAYC,GAAZ,CAAgB,KAAKxqB,IAAL,CAAUqpB,QAA1B,CAAJ,EAAyC;MACrC,OAAO,CAACY,GAAG,CAACM,OAAJ,CAAYE,GAAZ,CAAgB,KAAKzqB,IAAL,CAAUqpB,QAA1B,CAAR;IACH,CAFD,MAGK;MACD,MAAMgB,OAAO,GAAGJ,GAAG,CAACK,IAApB;MACA,OAAOjlB,iBAAiB,CAACglB,OAAD,EAAU,KAAKrqB,IAAL,CAAUqpB,QAApB,EAA8B,CAA9B,CAAxB;IACH;EACJ;;EACDW,eAAe,GAAG;IACd,IAAIU,UAAU,GAAG,KAAKC,kBAAL,EAAjB;IACA,OAAO,KAAKvO,IAAL,CAAUqO,GAAV,CAAc,KAAKzqB,IAAL,CAAU+oB,QAAxB,EAAkC;MAAE6B,MAAM,EAAEF,UAAV;MAAsBG,OAAO,EAAE;IAA/B,CAAlC,CAAP;EACH;;EACDF,kBAAkB,GAAG;IACjB,IAAID,UAAU,GAAG,IAAI1sB,UAAJ,EAAjB;IACA0sB,UAAU,GAAG,KAAKI,oBAAL,CAA0BJ,UAA1B,CAAb;IACAA,UAAU,GAAG,KAAKK,sBAAL,CAA4BL,UAA5B,CAAb;IACA,OAAO,KAAKM,qBAAL,CAA2BN,UAA3B,CAAP;EACH;;EACDI,oBAAoB,CAACJ,UAAD,EAAa;IAC7B,IAAI,KAAKzkB,QAAT,EAAmB;MACf,KAAKA,QAAL,CAAcrB,OAAd,CAAuBvE,SAAD,IAAe;QACjCqqB,UAAU,GAAGA,UAAU,CAACO,GAAX,CAAe,KAAKjrB,IAAL,CAAUgpB,YAAzB,EAAuC3oB,SAAS,CAAC+B,KAAjD,CAAb;QACAsoB,UAAU,GAAGA,UAAU,CAACO,GAAX,CAAe,KAAKjrB,IAAL,CAAUipB,UAAzB,EAAqC5oB,SAAS,CAACgB,SAAV,CAAoB6pB,WAApB,EAArC,CAAb;MACH,CAHD;IAIH;;IACD,OAAOR,UAAP;EACH;;EACDK,sBAAsB,CAACL,UAAD,EAAa;IAC/B,IAAI,KAAKxkB,UAAL,CAAgBC,OAApB,EAA6B;MACzB,KAAKD,UAAL,CAAgBC,OAAhB,CAAwBvB,OAAxB,CAAiCvE,SAAD,IAAe;QAC3C,IAAIA,SAAS,CAAC,QAAD,CAAb,EAAyB;UACrBqqB,UAAU,GAAGA,UAAU,CAACO,GAAX,CAAe,KAAKjrB,IAAL,CAAUopB,cAAV,CAAyB+B,OAAzB,CAAiC,SAAjC,EAA4C9qB,SAAS,CAAC,OAAD,CAArD,CAAf,EAAgFA,SAAS,CAAC,QAAD,CAAzF,CAAb;QACH;MACJ,CAJD;IAKH;;IACD,OAAOqqB,UAAP;EACH;;EACDM,qBAAqB,CAACN,UAAD,EAAa;IAC9B,IAAI,KAAKtkB,UAAL,IAAmB,KAAKA,UAAL,CAAgB,MAAhB,CAAnB,IAA8C,KAAKA,UAAL,CAAgB,SAAhB,CAAlD,EAA8E;MAC1EskB,UAAU,GAAGA,UAAU,CAACO,GAAX,CAAe,KAAKjrB,IAAL,CAAUkpB,YAAzB,EAAuC,KAAK9iB,UAAL,CAAgB,MAAhB,CAAvC,CAAb;MACAskB,UAAU,GAAGA,UAAU,CAACO,GAAX,CAAe,KAAKjrB,IAAL,CAAUmpB,aAAzB,EAAwC,KAAK/iB,UAAL,CAAgB,SAAhB,CAAxC,CAAb;IACH;;IACD,OAAOskB,UAAP;EACH;;AArF0C;AAwF/C;AACA;AACA;;AAEA;AACA;AACA;;;AAEA,SAAShG,2BAAT,EAAsCmE,wBAAtC,EAAgE3gB,IAAhE,EAAsEkF,OAAtE,EAA+EiS,aAA/E,EAA8FhG,aAA9F,EAA6G1O,WAA7G,EAA0H5E,eAA1H,EAA2IwD,GAA3I,EAAgJmB,iBAAhJ,EAAmKof,gBAAnK"},"metadata":{},"sourceType":"module"}