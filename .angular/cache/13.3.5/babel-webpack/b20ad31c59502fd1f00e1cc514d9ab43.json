{"ast":null,"code":"import * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, Injectable, Directive, HostListener, ViewContainerRef, ViewChild, ChangeDetectionStrategy, ViewChildren, NgModule } from '@angular/core';\nimport * as i1 from '@angular/forms';\nimport { NgControl, FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { __awaiter } from 'tslib';\nimport { Subject, of, combineLatest } from 'rxjs';\nimport { takeUntil, filter, skip, distinctUntilChanged, debounceTime, map, delay } from 'rxjs/operators';\nimport { cloneDeep } from 'lodash-es';\nimport * as i1$1 from 'ng2-completer';\nimport { Ng2CompleterModule } from 'ng2-completer';\nimport * as i1$2 from '@angular/common/http';\nimport { HttpParams } from '@angular/common/http';\nimport * as i2$1 from 'angular2-multiselect-dropdown';\nimport { AngularMultiSelectModule } from 'angular2-multiselect-dropdown';\n\nfunction TagsListComponent_angular2_smart_table_tag_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"angular2-smart-table-tag\", 2);\n    i0.ɵɵlistener(\"close\", function TagsListComponent_angular2_smart_table_tag_1_Template_angular2_smart_table_tag_close_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.closedTag($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tag_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"item\", tag_r1);\n  }\n}\n\nconst _c0 = \"*[_ngcontent-%COMP%]{box-sizing:border-box}*[_ngcontent-%COMP%]{padding:0;margin:0}ul[_ngcontent-%COMP%]{list-style-type:none}.add-tag-list[_ngcontent-%COMP%]{font-family:font8272;font-size:1.5em}.add-tag-list[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{padding-left:20px;padding-right:20px;padding-bottom:8px;display:flex;flex-direction:row-reverse;float:left}.add-tag-list[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:last-child{padding-right:0}.closeButton[_ngcontent-%COMP%]{display:inline}.closeButton[_ngcontent-%COMP%]:after{content:\\\"\\\\f057\\\";padding-left:4px;font-family:FontAwesome;color:#df0024;cursor:pointer}.closeButton[_ngcontent-%COMP%]:hover:after{color:#900110;transition:.6s linear}\";\nconst _c1 = [\"angular2-st-checkbox-select-all\", \"\"];\nconst _c2 = [\"angular2-st-actions-title\", \"\"];\n\nfunction TitleComponent_a_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 3);\n    i0.ɵɵlistener(\"click\", function TitleComponent_a_0_Template_a_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3._sort($event);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.currentDirection);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.column.title, \" \");\n  }\n}\n\nfunction TitleComponent_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.column.title);\n  }\n}\n\nfunction TitleComponent_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function TitleComponent_button_2_Template_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5._hideColumnClicked($event);\n    });\n    i0.ɵɵtext(1, \"X\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c3 = [\"angular2-st-thead-titles-row\", \"\"];\n\nfunction TheadTitlesRowComponent_th_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"th\", 3);\n    i0.ɵɵlistener(\"click\", function TheadTitlesRowComponent_th_0_Template_th_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.selectAllRows.emit($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"grid\", ctx_r0.grid)(\"source\", ctx_r0.source)(\"isAllSelected\", ctx_r0.isAllSelected);\n  }\n}\n\nfunction TheadTitlesRowComponent_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"th\", 4);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"grid\", ctx_r1.grid);\n  }\n}\n\nfunction TheadTitlesRowComponent_th_2_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 8);\n  }\n}\n\nfunction TheadTitlesRowComponent_th_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"th\", 5)(1, \"angular2-st-column-title\", 6);\n    i0.ɵɵlistener(\"sort\", function TheadTitlesRowComponent_th_2_Template_angular2_st_column_title_sort_1_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.sort.emit($event);\n    })(\"hide\", function TheadTitlesRowComponent_th_2_Template_angular2_st_column_title_hide_1_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.hide.emit($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, TheadTitlesRowComponent_th_2_div_2_Template, 1, 0, \"div\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const column_r6 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_2_0;\n    i0.ɵɵclassMapInterpolate1(\"angular2-smart-th \", column_r6.id, \"\");\n    i0.ɵɵstyleProp(\"width\", column_r6.width);\n    i0.ɵɵproperty(\"ngClass\", (tmp_2_0 = column_r6.class) !== null && tmp_2_0 !== undefined ? tmp_2_0 : \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"source\", ctx_r2.source)(\"column\", column_r6)(\"isHideable\", ctx_r2.isHideable);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isResizable);\n  }\n}\n\nfunction TheadTitlesRowComponent_th_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"th\", 4);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"grid\", ctx_r3.grid);\n  }\n}\n\nconst _c4 = [\"angular2-st-add-button\", \"\"];\n\nfunction AddButtonComponent_a_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 1);\n    i0.ɵɵlistener(\"click\", function AddButtonComponent_a_0_Template_a_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return ctx_r1.onAdd($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r0.addNewButtonContent, i0.ɵɵsanitizeHtml);\n  }\n}\n\nconst _c5 = [\"dynamicTarget\"];\n\nfunction CustomFilterComponent_ng_template_0_Template(rf, ctx) {}\n\nconst _c6 = [\"inputControl\"];\n\nfunction SelectFilterComponent_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r2.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r2.title, \" \");\n  }\n}\n\nfunction CheckboxFilterComponent_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 2);\n    i0.ɵɵlistener(\"click\", function CheckboxFilterComponent_a_1_Template_a_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return ctx_r1.resetFilter($event);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(((tmp_0_0 = ctx_r0.column.getFilterConfig()) == null ? null : tmp_0_0.resetText) || \"reset\");\n  }\n}\n\nfunction DateFilterComponent_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(option_r6);\n  }\n}\n\nfunction DateFilterComponent_input_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formControl\", ctx_r1.dateBefore)(\"ngClass\", ctx_r1.inputClass);\n  }\n}\n\nfunction DateFilterComponent_input_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formControl\", ctx_r2.dateAfter)(\"ngClass\", ctx_r2.inputClass);\n  }\n}\n\nfunction DateFilterComponent_input_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formControl\", ctx_r3.dateEqual)(\"ngClass\", ctx_r3.inputClass);\n  }\n}\n\nfunction DateFilterComponent_input_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formControl\", ctx_r4.startDate)(\"ngClass\", ctx_r4.inputClass);\n  }\n}\n\nfunction DateFilterComponent_input_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formControl\", ctx_r5.endDate)(\"ngClass\", ctx_r5.inputClass);\n  }\n}\n\nfunction DefaultFilterComponent_select_filter_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"select-filter\", 3);\n    i0.ɵɵlistener(\"filter\", function DefaultFilterComponent_select_filter_1_Template_select_filter_filter_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.onFilter($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"query\", ctx_r0.query)(\"ngClass\", ctx_r0.inputClass)(\"column\", ctx_r0.column);\n  }\n}\n\nfunction DefaultFilterComponent_checkbox_filter_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"checkbox-filter\", 3);\n    i0.ɵɵlistener(\"filter\", function DefaultFilterComponent_checkbox_filter_2_Template_checkbox_filter_filter_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.onFilter($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"query\", ctx_r1.query)(\"ngClass\", ctx_r1.inputClass)(\"column\", ctx_r1.column);\n  }\n}\n\nfunction DefaultFilterComponent_completer_filter_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"completer-filter\", 3);\n    i0.ɵɵlistener(\"filter\", function DefaultFilterComponent_completer_filter_3_Template_completer_filter_filter_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.onFilter($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"query\", ctx_r2.query)(\"ngClass\", ctx_r2.inputClass)(\"column\", ctx_r2.column);\n  }\n}\n\nfunction DefaultFilterComponent_date_filter_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"date-filter\", 3);\n    i0.ɵɵlistener(\"filter\", function DefaultFilterComponent_date_filter_4_Template_date_filter_filter_0_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.onFilter($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"query\", ctx_r3.query)(\"ngClass\", ctx_r3.inputClass)(\"column\", ctx_r3.column);\n  }\n}\n\nfunction DefaultFilterComponent_mselect_filter_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mselect-filter\", 3);\n    i0.ɵɵlistener(\"filter\", function DefaultFilterComponent_mselect_filter_5_Template_mselect_filter_filter_0_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.onFilter($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"query\", ctx_r4.query)(\"ngClass\", ctx_r4.inputClass)(\"column\", ctx_r4.column);\n  }\n}\n\nfunction DefaultFilterComponent_input_filter_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input-filter\", 3);\n    i0.ɵɵlistener(\"filter\", function DefaultFilterComponent_input_filter_6_Template_input_filter_filter_0_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.onFilter($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"query\", ctx_r5.query)(\"ngClass\", ctx_r5.inputClass)(\"column\", ctx_r5.column);\n  }\n}\n\nfunction FilterComponent_div_0_custom_table_filter_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"custom-table-filter\", 4);\n    i0.ɵɵlistener(\"filter\", function FilterComponent_div_0_custom_table_filter_1_Template_custom_table_filter_filter_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext(2);\n      return ctx_r3.onFilter($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"query\", ctx_r1.query)(\"column\", ctx_r1.column)(\"source\", ctx_r1.source)(\"inputClass\", ctx_r1.inputClass);\n  }\n}\n\nfunction FilterComponent_div_0_default_table_filter_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"default-table-filter\", 4);\n    i0.ɵɵlistener(\"filter\", function FilterComponent_div_0_default_table_filter_2_Template_default_table_filter_filter_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return ctx_r5.onFilter($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"query\", ctx_r2.query)(\"column\", ctx_r2.column)(\"source\", ctx_r2.source)(\"inputClass\", ctx_r2.inputClass);\n  }\n}\n\nfunction FilterComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtemplate(1, FilterComponent_div_0_custom_table_filter_1_Template, 1, 4, \"custom-table-filter\", 2);\n    i0.ɵɵtemplate(2, FilterComponent_div_0_default_table_filter_2_Template, 1, 4, \"default-table-filter\", 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngSwitch\", ctx_r0.column.getFilterType());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"custom\");\n  }\n}\n\nconst _c7 = [\"angular2-st-thead-filters-row\", \"\"];\n\nfunction TheadFitlersRowComponent_th_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"th\");\n  }\n}\n\nfunction TheadFitlersRowComponent_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"th\", 4);\n    i0.ɵɵlistener(\"create\", function TheadFitlersRowComponent_th_1_Template_th_create_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.create.emit($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"grid\", ctx_r1.grid);\n  }\n}\n\nfunction TheadFitlersRowComponent_th_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"th\")(1, \"angular2-smart-table-filter\", 5);\n    i0.ɵɵlistener(\"filter\", function TheadFitlersRowComponent_th_2_Template_angular2_smart_table_filter_filter_1_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.filter.emit($event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const column_r6 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassMapInterpolate1(\"angular2-smart-th \", column_r6.id, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"source\", ctx_r2.source)(\"column\", column_r6)(\"inputClass\", ctx_r2.filterInputClass);\n  }\n}\n\nfunction TheadFitlersRowComponent_th_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"th\", 6);\n    i0.ɵɵlistener(\"create\", function TheadFitlersRowComponent_th_3_Template_th_create_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.create.emit($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"grid\", ctx_r3.grid)(\"source\", ctx_r3.source);\n  }\n}\n\nfunction CustomViewComponent_ng_template_0_Template(rf, ctx) {}\n\nfunction ViewCellComponent_custom_view_component_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"custom-view-component\", 4);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cell\", ctx_r0.cell);\n  }\n}\n\nfunction ViewCellComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r1.cell.getValue(), i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction ViewCellComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.cell.getValue());\n  }\n}\n\nfunction CustomEditComponent_ng_template_0_Template(rf, ctx) {}\n\nfunction SelectEditorComponent_option_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 2);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", option_r1.value)(\"selected\", option_r1.value === ctx_r0.cell.getValue());\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", option_r1.title, \" \");\n  }\n}\n\nconst _c8 = \"[_nghost-%COMP%]   input[_ngcontent-%COMP%], [_nghost-%COMP%]   textarea[_ngcontent-%COMP%]{width:100%;line-height:normal;padding:.375em .75em}\";\n\nfunction DefaultEditComponent_select_editor_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"select-editor\", 5);\n    i0.ɵɵlistener(\"onClick\", function DefaultEditComponent_select_editor_1_Template_select_editor_onClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.onClick($event);\n    })(\"onEdited\", function DefaultEditComponent_select_editor_1_Template_select_editor_onEdited_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.onEdited($event);\n    })(\"onStopEditing\", function DefaultEditComponent_select_editor_1_Template_select_editor_onStopEditing_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.onStopEditing();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cell\", ctx_r0.cell)(\"inputClass\", ctx_r0.inputClass);\n  }\n}\n\nfunction DefaultEditComponent_textarea_editor_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"textarea-editor\", 5);\n    i0.ɵɵlistener(\"onClick\", function DefaultEditComponent_textarea_editor_2_Template_textarea_editor_onClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.onClick($event);\n    })(\"onEdited\", function DefaultEditComponent_textarea_editor_2_Template_textarea_editor_onEdited_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.onEdited($event);\n    })(\"onStopEditing\", function DefaultEditComponent_textarea_editor_2_Template_textarea_editor_onStopEditing_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.onStopEditing();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cell\", ctx_r1.cell)(\"inputClass\", ctx_r1.inputClass);\n  }\n}\n\nfunction DefaultEditComponent_checkbox_editor_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"checkbox-editor\", 6);\n    i0.ɵɵlistener(\"onClick\", function DefaultEditComponent_checkbox_editor_3_Template_checkbox_editor_onClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.onClick($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cell\", ctx_r2.cell)(\"inputClass\", ctx_r2.inputClass);\n  }\n}\n\nfunction DefaultEditComponent_completer_editor_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"completer-editor\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cell\", ctx_r3.cell);\n  }\n}\n\nfunction DefaultEditComponent_input_editor_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input-editor\", 5);\n    i0.ɵɵlistener(\"onClick\", function DefaultEditComponent_input_editor_5_Template_input_editor_onClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.onClick($event);\n    })(\"onEdited\", function DefaultEditComponent_input_editor_5_Template_input_editor_onEdited_0_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.onEdited($event);\n    })(\"onStopEditing\", function DefaultEditComponent_input_editor_5_Template_input_editor_onStopEditing_0_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return ctx_r18.onStopEditing();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cell\", ctx_r4.cell)(\"inputClass\", ctx_r4.inputClass);\n  }\n}\n\nfunction EditCellComponent_table_cell_custom_editor_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"table-cell-custom-editor\", 3);\n    i0.ɵɵlistener(\"edited\", function EditCellComponent_table_cell_custom_editor_1_Template_table_cell_custom_editor_edited_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.onEdited($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cell\", ctx_r0.cell)(\"inputClass\", ctx_r0.inputClass);\n  }\n}\n\nfunction EditCellComponent_table_cell_default_editor_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"table-cell-default-editor\", 3);\n    i0.ɵɵlistener(\"edited\", function EditCellComponent_table_cell_default_editor_2_Template_table_cell_default_editor_edited_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onEdited($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cell\", ctx_r1.cell)(\"inputClass\", ctx_r1.inputClass);\n  }\n}\n\nfunction CellComponent_table_cell_view_mode_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"table-cell-view-mode\", 2);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cell\", ctx_r0.cell);\n  }\n}\n\nfunction CellComponent_table_cell_edit_mode_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"table-cell-edit-mode\", 3);\n    i0.ɵɵlistener(\"edited\", function CellComponent_table_cell_edit_mode_1_Template_table_cell_edit_mode_edited_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.onEdited($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cell\", ctx_r1.cell)(\"inputClass\", ctx_r1.inputClass);\n  }\n}\n\nconst _c9 = [\"angular2-st-thead-form-row\", \"\"];\n\nfunction TheadFormRowComponent_td_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"td\");\n  }\n}\n\nfunction TheadFormRowComponent_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 3)(1, \"angular2-st-actions\", 4);\n    i0.ɵɵlistener(\"create\", function TheadFormRowComponent_td_1_Template_angular2_st_actions_create_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onCreate($event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"grid\", ctx_r1.grid);\n  }\n}\n\nfunction TheadFormRowComponent_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\")(1, \"angular2-smart-table-cell\", 5);\n    i0.ɵɵlistener(\"edited\", function TheadFormRowComponent_td_2_Template_angular2_smart_table_cell_edited_1_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.onCreate($event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const cell_r6 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"cell\", cell_r6)(\"grid\", ctx_r2.grid)(\"isNew\", true)(\"createConfirm\", ctx_r2.createConfirm)(\"inputClass\", ctx_r2.addInputClass)(\"isInEditing\", ctx_r2.grid.getNewRow().isInEditing);\n  }\n}\n\nfunction TheadFormRowComponent_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 3)(1, \"angular2-st-actions\", 4);\n    i0.ɵɵlistener(\"create\", function TheadFormRowComponent_td_3_Template_angular2_st_actions_create_1_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.onCreate($event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"grid\", ctx_r3.grid);\n  }\n}\n\nconst _c10 = [\"angular2-st-thead\", \"\"];\n\nfunction NgxSmartTableTheadComponent_tr_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\", 3);\n    i0.ɵɵlistener(\"sort\", function NgxSmartTableTheadComponent_tr_0_Template_tr_sort_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.sort.emit($event);\n    })(\"hide\", function NgxSmartTableTheadComponent_tr_0_Template_tr_hide_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.hide.emit($event);\n    })(\"selectAllRows\", function NgxSmartTableTheadComponent_tr_0_Template_tr_selectAllRows_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.selectAllRows.emit($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"grid\", ctx_r0.grid)(\"isAllSelected\", ctx_r0.isAllSelected)(\"source\", ctx_r0.source);\n  }\n}\n\nfunction NgxSmartTableTheadComponent_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\", 4);\n    i0.ɵɵlistener(\"create\", function NgxSmartTableTheadComponent_tr_1_Template_tr_create_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.create.emit($event);\n    })(\"filter\", function NgxSmartTableTheadComponent_tr_1_Template_tr_filter_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.filter.emit($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"grid\", ctx_r1.grid)(\"source\", ctx_r1.source);\n  }\n}\n\nfunction NgxSmartTableTheadComponent_tr_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"grid\", ctx_r2.grid)(\"createConfirm\", ctx_r2.createConfirm);\n  }\n}\n\nfunction TbodyCustomItemComponent_ng_template_0_Template(rf, ctx) {}\n\nfunction TbodyCustomComponent_ng_container_0_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 3);\n    i0.ɵɵlistener(\"click\", function TbodyCustomComponent_ng_container_0_a_1_Template_a_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const action_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onCustom(action_r1, $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const action_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"innerHTML\", action_r1.title, i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction TbodyCustomComponent_ng_container_0_a_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 4);\n    i0.ɵɵlistener(\"click\", function TbodyCustomComponent_ng_container_0_a_2_Template_a_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const action_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.onCustom(action_r1, $event);\n    });\n    i0.ɵɵelement(1, \"angular2-st-tbody-custom-item\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const action_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"action\", action_r1)(\"row\", ctx_r3.row);\n  }\n}\n\nfunction TbodyCustomComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TbodyCustomComponent_ng_container_0_a_1_Template, 1, 1, \"a\", 1);\n    i0.ɵɵtemplate(2, TbodyCustomComponent_ng_container_0_a_2_Template, 2, 2, \"a\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const action_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !action_r1.renderComponent);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", action_r1.renderComponent);\n  }\n}\n\nfunction TbodyEditDeleteComponent_a_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 2);\n    i0.ɵɵlistener(\"click\", function TbodyEditDeleteComponent_a_0_Template_a_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.onEdit($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r0.editRowButtonContent, i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction TbodyEditDeleteComponent_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 3);\n    i0.ɵɵlistener(\"click\", function TbodyEditDeleteComponent_a_1_Template_a_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onDelete($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r1.deleteRowButtonContent, i0.ɵɵsanitizeHtml);\n  }\n}\n\nconst _c11 = [\"expandedRowChild\"];\nconst _c12 = [\"angular2-st-tbody\", \"\"];\n\nfunction NgxSmartTableTbodyComponent_ng_container_0_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 6);\n    i0.ɵɵlistener(\"click\", function NgxSmartTableTbodyComponent_ng_container_0_td_2_Template_td_click_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const row_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.multipleSelectRow.emit(row_r2);\n    });\n    i0.ɵɵelement(1, \"input\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", row_r2.isSelected);\n  }\n}\n\nfunction NgxSmartTableTbodyComponent_ng_container_0_td_3_angular2_st_tbody_expand_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"angular2-st-tbody-expand\", 12);\n    i0.ɵɵlistener(\"onExpandRow\", function NgxSmartTableTbodyComponent_ng_container_0_td_3_angular2_st_tbody_expand_2_Template_angular2_st_tbody_expand_onExpandRow_0_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const row_r2 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.onExpandRow.emit(row_r2);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r2 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r14 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"grid\", ctx_r14.grid)(\"row\", row_r2);\n  }\n}\n\nfunction NgxSmartTableTbodyComponent_ng_container_0_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 8)(1, \"angular2-st-tbody-custom\", 9);\n    i0.ɵɵlistener(\"custom\", function NgxSmartTableTbodyComponent_ng_container_0_td_3_Template_angular2_st_tbody_custom_custom_1_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return ctx_r19.custom.emit($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, NgxSmartTableTbodyComponent_ng_container_0_td_3_angular2_st_tbody_expand_2_Template, 1, 2, \"angular2-st-tbody-expand\", 10);\n    i0.ɵɵelementStart(3, \"angular2-st-tbody-edit-delete\", 11);\n    i0.ɵɵlistener(\"edit\", function NgxSmartTableTbodyComponent_ng_container_0_td_3_Template_angular2_st_tbody_edit_delete_edit_3_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const row_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r21 = i0.ɵɵnextContext();\n      return ctx_r21.edit.emit(row_r2);\n    })(\"delete\", function NgxSmartTableTbodyComponent_ng_container_0_td_3_Template_angular2_st_tbody_edit_delete_delete_3_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const row_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r23 = i0.ɵɵnextContext();\n      return ctx_r23.delete.emit(row_r2);\n    })(\"editRowSelect\", function NgxSmartTableTbodyComponent_ng_container_0_td_3_Template_angular2_st_tbody_edit_delete_editRowSelect_3_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r25 = i0.ɵɵnextContext(2);\n      return ctx_r25.editRowSelect.emit($event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const row_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"grid\", ctx_r4.grid)(\"row\", row_r2)(\"source\", ctx_r4.source);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.hasChildComponent);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"grid\", ctx_r4.grid)(\"deleteConfirm\", ctx_r4.deleteConfirm)(\"editConfirm\", ctx_r4.editConfirm)(\"row\", row_r2)(\"source\", ctx_r4.source);\n  }\n}\n\nfunction NgxSmartTableTbodyComponent_ng_container_0_td_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 8);\n    i0.ɵɵelement(1, \"angular2-st-tbody-create-cancel\", 13);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"grid\", ctx_r5.grid)(\"row\", row_r2)(\"editConfirm\", ctx_r5.editConfirm);\n  }\n}\n\nfunction NgxSmartTableTbodyComponent_ng_container_0_td_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵelement(1, \"angular2-smart-table-cell\", 14);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const cell_r28 = ctx.$implicit;\n    const row_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"cell\", cell_r28)(\"grid\", ctx_r6.grid)(\"row\", row_r2)(\"isNew\", false)(\"mode\", ctx_r6.mode)(\"editConfirm\", ctx_r6.editConfirm)(\"inputClass\", ctx_r6.editInputClass)(\"isInEditing\", row_r2.isInEditing);\n  }\n}\n\nfunction NgxSmartTableTbodyComponent_ng_container_0_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 8);\n    i0.ɵɵelement(1, \"angular2-st-tbody-create-cancel\", 13);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"grid\", ctx_r7.grid)(\"row\", row_r2)(\"editConfirm\", ctx_r7.editConfirm);\n  }\n}\n\nfunction NgxSmartTableTbodyComponent_ng_container_0_td_7_angular2_st_tbody_expand_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r34 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"angular2-st-tbody-expand\", 12);\n    i0.ɵɵlistener(\"onExpandRow\", function NgxSmartTableTbodyComponent_ng_container_0_td_7_angular2_st_tbody_expand_2_Template_angular2_st_tbody_expand_onExpandRow_0_listener() {\n      i0.ɵɵrestoreView(_r34);\n      const row_r2 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r32 = i0.ɵɵnextContext();\n      return ctx_r32.onExpandRow.emit(row_r2);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r2 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r31 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"grid\", ctx_r31.grid)(\"row\", row_r2);\n  }\n}\n\nfunction NgxSmartTableTbodyComponent_ng_container_0_td_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r37 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 8)(1, \"angular2-st-tbody-custom\", 9);\n    i0.ɵɵlistener(\"custom\", function NgxSmartTableTbodyComponent_ng_container_0_td_7_Template_angular2_st_tbody_custom_custom_1_listener($event) {\n      i0.ɵɵrestoreView(_r37);\n      const ctx_r36 = i0.ɵɵnextContext(2);\n      return ctx_r36.custom.emit($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, NgxSmartTableTbodyComponent_ng_container_0_td_7_angular2_st_tbody_expand_2_Template, 1, 2, \"angular2-st-tbody-expand\", 10);\n    i0.ɵɵelementStart(3, \"angular2-st-tbody-edit-delete\", 11);\n    i0.ɵɵlistener(\"edit\", function NgxSmartTableTbodyComponent_ng_container_0_td_7_Template_angular2_st_tbody_edit_delete_edit_3_listener() {\n      i0.ɵɵrestoreView(_r37);\n      const row_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r38 = i0.ɵɵnextContext();\n      return ctx_r38.edit.emit(row_r2);\n    })(\"delete\", function NgxSmartTableTbodyComponent_ng_container_0_td_7_Template_angular2_st_tbody_edit_delete_delete_3_listener() {\n      i0.ɵɵrestoreView(_r37);\n      const row_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r40 = i0.ɵɵnextContext();\n      return ctx_r40.delete.emit(row_r2);\n    })(\"editRowSelect\", function NgxSmartTableTbodyComponent_ng_container_0_td_7_Template_angular2_st_tbody_edit_delete_editRowSelect_3_listener($event) {\n      i0.ɵɵrestoreView(_r37);\n      const ctx_r42 = i0.ɵɵnextContext(2);\n      return ctx_r42.editRowSelect.emit($event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const row_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"grid\", ctx_r8.grid)(\"row\", row_r2)(\"source\", ctx_r8.source);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.hasChildComponent);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"grid\", ctx_r8.grid)(\"deleteConfirm\", ctx_r8.deleteConfirm)(\"editConfirm\", ctx_r8.editConfirm)(\"row\", row_r2)(\"source\", ctx_r8.source);\n  }\n}\n\nfunction NgxSmartTableTbodyComponent_ng_container_0_tr_8_ng_template_2_Template(rf, ctx) {}\n\nfunction NgxSmartTableTbodyComponent_ng_container_0_tr_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 15)(1, \"td\", 16);\n    i0.ɵɵtemplate(2, NgxSmartTableTbodyComponent_ng_container_0_tr_8_ng_template_2_Template, 0, 0, \"ng-template\", null, 17, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", ctx_r9.tableColumnsCount);\n  }\n}\n\nconst _c13 = function (a0) {\n  return {\n    selected: a0\n  };\n};\n\nfunction NgxSmartTableTbodyComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r47 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"tr\", 2);\n    i0.ɵɵlistener(\"click\", function NgxSmartTableTbodyComponent_ng_container_0_Template_tr_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r47);\n      const row_r2 = restoredCtx.$implicit;\n      const ctx_r46 = i0.ɵɵnextContext();\n      return ctx_r46.userSelectRow.emit(row_r2);\n    })(\"mouseover\", function NgxSmartTableTbodyComponent_ng_container_0_Template_tr_mouseover_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r47);\n      const row_r2 = restoredCtx.$implicit;\n      const ctx_r48 = i0.ɵɵnextContext();\n      return ctx_r48.rowHover.emit(row_r2);\n    });\n    i0.ɵɵtemplate(2, NgxSmartTableTbodyComponent_ng_container_0_td_2_Template, 2, 1, \"td\", 3);\n    i0.ɵɵtemplate(3, NgxSmartTableTbodyComponent_ng_container_0_td_3_Template, 4, 9, \"td\", 4);\n    i0.ɵɵtemplate(4, NgxSmartTableTbodyComponent_ng_container_0_td_4_Template, 2, 3, \"td\", 4);\n    i0.ɵɵtemplate(5, NgxSmartTableTbodyComponent_ng_container_0_td_5_Template, 2, 8, \"td\", 0);\n    i0.ɵɵtemplate(6, NgxSmartTableTbodyComponent_ng_container_0_td_6_Template, 2, 3, \"td\", 4);\n    i0.ɵɵtemplate(7, NgxSmartTableTbodyComponent_ng_container_0_td_7_Template, 4, 9, \"td\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, NgxSmartTableTbodyComponent_ng_container_0_tr_8_Template, 4, 1, \"tr\", 5);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const row_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"className\", ctx_r0.rowClassFunction(row_r2))(\"ngClass\", i0.ɵɵpureFunction1(9, _c13, row_r2.isSelected));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isMultiSelectVisible);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !row_r2.isInEditing && ctx_r0.showActionColumnLeft);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", row_r2.isInEditing && ctx_r0.showActionColumnLeft);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.getVisibleCells(row_r2.cells));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", row_r2.isInEditing && ctx_r0.showActionColumnRight);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !row_r2.isInEditing && ctx_r0.showActionColumnRight);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", row_r2.isExpanded);\n  }\n}\n\nfunction NgxSmartTableTbodyComponent_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", ctx_r1.tableColumnsCount);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.noDataMessage, \" \");\n  }\n}\n\nfunction PagerComponent_nav_0_li_14_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"span\", 7);\n    i0.ɵɵtext(3, \"(current)\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const page_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", page_r3, \" \");\n  }\n}\n\nfunction PagerComponent_nav_0_li_14_a_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 15);\n    i0.ɵɵlistener(\"click\", function PagerComponent_nav_0_li_14_a_2_Template_a_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const page_r3 = i0.ɵɵnextContext().$implicit;\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return ctx_r7.paginate(page_r3);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const page_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(page_r3);\n  }\n}\n\nconst _c14 = function (a0) {\n  return {\n    active: a0\n  };\n};\n\nfunction PagerComponent_nav_0_li_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 4);\n    i0.ɵɵtemplate(1, PagerComponent_nav_0_li_14_span_1_Template, 4, 1, \"span\", 12);\n    i0.ɵɵtemplate(2, PagerComponent_nav_0_li_14_a_2_Template, 2, 1, \"a\", 13);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const page_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c14, ctx_r2.getPage() == page_r3));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.getPage() == page_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.getPage() != page_r3);\n  }\n}\n\nconst _c15 = function (a0) {\n  return {\n    disabled: a0\n  };\n};\n\nfunction PagerComponent_nav_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"nav\", 2)(1, \"ul\", 3)(2, \"li\", 4)(3, \"a\", 5);\n    i0.ɵɵlistener(\"click\", function PagerComponent_nav_0_Template_a_click_3_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.getPage() == 1 ? false : ctx_r11.paginate(1);\n    });\n    i0.ɵɵelementStart(4, \"span\", 6);\n    i0.ɵɵtext(5, \"\\xAB\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\", 7);\n    i0.ɵɵtext(7, \"First\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(8, \"li\", 4)(9, \"a\", 8);\n    i0.ɵɵlistener(\"click\", function PagerComponent_nav_0_Template_a_click_9_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.getPage() == 1 ? false : ctx_r13.prev();\n    });\n    i0.ɵɵelementStart(10, \"span\", 6);\n    i0.ɵɵtext(11, \"<\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"span\", 7);\n    i0.ɵɵtext(13, \"Prev\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(14, PagerComponent_nav_0_li_14_Template, 3, 5, \"li\", 9);\n    i0.ɵɵelementStart(15, \"li\", 4)(16, \"a\", 10);\n    i0.ɵɵlistener(\"click\", function PagerComponent_nav_0_Template_a_click_16_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.getPage() == ctx_r14.getLast() ? false : ctx_r14.next();\n    });\n    i0.ɵɵelementStart(17, \"span\", 6);\n    i0.ɵɵtext(18, \">\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"span\", 7);\n    i0.ɵɵtext(20, \"Next\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(21, \"li\", 4)(22, \"a\", 11);\n    i0.ɵɵlistener(\"click\", function PagerComponent_nav_0_Template_a_click_22_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.getPage() == ctx_r15.getLast() ? false : ctx_r15.paginate(ctx_r15.getLast());\n    });\n    i0.ɵɵelementStart(23, \"span\", 6);\n    i0.ɵɵtext(24, \"\\xBB\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"span\", 7);\n    i0.ɵɵtext(26, \"Last\");\n    i0.ɵɵelementEnd()()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c15, ctx_r0.getPage() == 1));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c15, ctx_r0.getPage() == 1));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.getPages());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c15, ctx_r0.getPage() == ctx_r0.getLast()));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c15, ctx_r0.getPage() == ctx_r0.getLast()));\n  }\n}\n\nfunction PagerComponent_nav_1_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r17 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r17);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r17);\n  }\n}\n\nfunction PagerComponent_nav_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"nav\", 16)(1, \"label\", 17);\n    i0.ɵɵtext(2, \" Per Page: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"select\", 18);\n    i0.ɵɵlistener(\"change\", function PagerComponent_nav_1_Template_select_change_3_listener($event) {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return ctx_r18.onChangePerPage($event);\n    })(\"ngModelChange\", function PagerComponent_nav_1_Template_select_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return ctx_r20.currentPerPage = $event;\n    });\n    i0.ɵɵtemplate(4, PagerComponent_nav_1_option_4_Template, 2, 2, \"option\", 19);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.currentPerPage);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.perPageSelect);\n  }\n}\n\nfunction Angular2SmartTableComponent_thead_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"thead\", 6);\n    i0.ɵɵlistener(\"create\", function Angular2SmartTableComponent_thead_3_Template_thead_create_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.create.emit($event);\n    })(\"selectAllRows\", function Angular2SmartTableComponent_thead_3_Template_thead_selectAllRows_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onSelectAllRows($event);\n    })(\"sort\", function Angular2SmartTableComponent_thead_3_Template_thead_sort_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.sort($event);\n    })(\"hide\", function Angular2SmartTableComponent_thead_3_Template_thead_hide_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.onHideHeader($event);\n    })(\"filter\", function Angular2SmartTableComponent_thead_3_Template_thead_filter_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.filter($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"grid\", ctx_r0.grid)(\"isAllSelected\", ctx_r0.isAllSelected)(\"source\", ctx_r0.source)(\"createConfirm\", ctx_r0.createConfirm);\n  }\n}\n\nfunction Angular2SmartTableComponent_angular2_smart_table_pager_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"angular2-smart-table-pager\", 7);\n    i0.ɵɵlistener(\"changePage\", function Angular2SmartTableComponent_angular2_smart_table_pager_5_Template_angular2_smart_table_pager_changePage_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.changePage($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"source\", ctx_r1.source)(\"perPageSelect\", ctx_r1.perPageSelect);\n  }\n}\n\nclass DataSource {\n  constructor() {\n    this.onChangedSource = new Subject();\n    this.onAddedSource = new Subject();\n    this.onUpdatedSource = new Subject();\n    this.onRemovedSource = new Subject();\n  }\n\n  refresh() {\n    this.emitOnChanged('refresh');\n  }\n\n  load(data) {\n    this.emitOnChanged('load');\n    return Promise.resolve();\n  }\n\n  onChanged() {\n    return this.onChangedSource.asObservable();\n  }\n\n  onAdded() {\n    return this.onAddedSource.asObservable();\n  }\n\n  onUpdated() {\n    return this.onUpdatedSource.asObservable();\n  }\n\n  onRemoved() {\n    return this.onRemovedSource.asObservable();\n  }\n\n  prepend(element) {\n    this.emitOnAdded(element);\n    this.emitOnChanged('prepend');\n    return Promise.resolve();\n  }\n\n  append(element) {\n    this.emitOnAdded(element);\n    this.emitOnChanged('append');\n    return Promise.resolve();\n  }\n\n  add(element) {\n    this.emitOnAdded(element);\n    this.emitOnChanged('add');\n    return Promise.resolve();\n  }\n\n  remove(element) {\n    this.emitOnRemoved(element);\n    this.emitOnChanged('remove');\n    return Promise.resolve();\n  }\n\n  update(element, values) {\n    this.emitOnUpdated(element);\n    this.emitOnChanged('update');\n    return Promise.resolve();\n  }\n\n  empty() {\n    this.emitOnChanged('empty');\n    return Promise.resolve();\n  }\n\n  setSort(conf, doEmit) {\n    if (doEmit) {\n      this.emitOnChanged('sort');\n    }\n  }\n\n  setFilter(conf, andOperator, doEmit) {\n    if (doEmit) {\n      this.emitOnChanged('filter');\n    }\n  }\n\n  addFilter(fieldConf, andOperator, doEmit) {\n    if (doEmit) {\n      this.emitOnChanged('filter');\n    }\n  }\n\n  setPaging(page, perPage, doEmit) {\n    if (doEmit) {\n      this.emitOnChanged('paging');\n    }\n  }\n\n  setPage(page, doEmit) {\n    if (doEmit) {\n      this.emitOnChanged('page');\n    }\n  }\n\n  emitOnRemoved(element) {\n    this.onRemovedSource.next(element);\n  }\n\n  emitOnUpdated(element) {\n    this.onUpdatedSource.next(element);\n  }\n\n  emitOnAdded(element) {\n    this.onAddedSource.next(element);\n  }\n\n  emitOnChanged(action) {\n    this.getElements().then(elements => this.onChangedSource.next({\n      action: action,\n      elements: elements,\n      paging: this.getPaging(),\n      filter: this.getFilter(),\n      sort: this.getSort()\n    }));\n  }\n\n}\n\nfunction defaultObjectComparator(direction, left, right) {\n  if (left == null && right == null) {\n    return 0;\n  } // only one of them can be null now\n\n\n  if (left == null || left < right) {\n    return -1 * direction;\n  }\n\n  if (right == null || right < left) {\n    return direction;\n  } // none of them can be null now, and they must be equal\n\n\n  return 0;\n}\n\nfunction defaultNumberComparator(direction, left, right) {\n  // the default comparator already does what we want, so this function is merely a type-safe alias\n  return defaultObjectComparator(direction, left, right);\n}\n\nfunction defaultStringComparator(direction, left, right) {\n  if (left == null && right == null) {\n    return 0;\n  } else if (left == null) {\n    return -1 * direction;\n  } else if (right == null) {\n    return direction;\n  } else {\n    return left.localeCompare(right) * direction;\n  }\n}\n/**\n * Compares two values with special treatment for numbers and strings.\n *\n * The rule is: if both values are of type number (or null), they are compared as if they were numbers.\n * If both values are either null, undefined or typeof string, they are compared as strings using the current locale.\n * Otherwise, they are compared using their natural ordering.\n *\n * Null values are considered less than any non-null element. Null and undefined are considered equal.\n *\n * @param direction 1 for ascending and -1 for descending (other values are not allowed)\n * @param left the left value\n * @param right the right value\n */\n\n\nfunction defaultComparator(direction, left, right) {\n  const leftIsNumeric = left == null || !isNaN(parseFloat(left));\n  const rightIsNumeric = right == null || !isNaN(parseFloat(right));\n  const leftIsString = left == null || typeof left === 'string';\n  const rightIsString = right == null || typeof right === 'string';\n\n  if (leftIsNumeric && rightIsNumeric) {\n    return defaultNumberComparator(direction, Number(left), Number(right));\n  } else if (leftIsString && rightIsString) {\n    return defaultStringComparator(direction, left, right);\n  } else {\n    return defaultObjectComparator(direction, left, right);\n  }\n}\n\nclass LocalSorter {\n  static sort(data, field, direction, customCompare) {\n    const dir = direction === 'asc' ? 1 : -1;\n    const compare = customCompare ? customCompare : defaultComparator;\n    return data.sort((a, b) => {\n      let parts = field.split(\".\");\n      let propA = a;\n\n      for (let i = 0; i < parts.length && typeof propA !== 'undefined'; i++) {\n        propA = propA[parts[i]];\n      }\n\n      let propB = b;\n\n      for (let i = 0; i < parts.length && typeof propB !== 'undefined'; i++) {\n        propB = propB[parts[i]];\n      }\n\n      return compare.call(null, dir, propA, propB);\n    });\n  }\n\n}\n/**\n * A filter predicate that implements a case-insensitive string inclusion.\n *\n * @param cellValue the cell value to check\n * @param search the search/filter string to check against\n * @param data ignored\n * @param cellName ignored\n */\n\n\nfunction defaultStringInclusionFilter(cellValue, search, data, cellName) {\n  var _a, _b;\n  /* Implementation note: we declared the parameters as strings, but this does NOT mean they\n   * are actually strings because Typescript does NOT check the types. Therefore, we call toString() on the inputs.\n   */\n\n\n  const sanitizedCellValue = (_a = cellValue === null || cellValue === void 0 ? void 0 : cellValue.toString()) !== null && _a !== void 0 ? _a : '';\n  const sanitizedSearchString = (_b = search === null || search === void 0 ? void 0 : search.toString()) !== null && _b !== void 0 ? _b : '';\n  return sanitizedCellValue.toLowerCase().includes(sanitizedSearchString.toLowerCase());\n}\n\nclass LocalFilter {\n  static filter(data, field, search, customFilter) {\n    const filter = customFilter ? customFilter : defaultStringInclusionFilter;\n    return data.filter(el => {\n      //const value = typeof el[field] === 'undefined' || el[field] === null ? '' : el[field];\n      //return filter.call(null, value, search, el);\n      let parts = field.split(\".\");\n      let prop = el;\n\n      for (var i = 0; i < parts.length && typeof prop !== 'undefined'; i++) {\n        prop = prop[parts[i]];\n      }\n\n      return filter.call(null, prop, search, data, field, el);\n    });\n  }\n\n}\n\nclass LocalPager {\n  static paginate(data, page, perPage) {\n    return data.slice(perPage * (page - 1), perPage * page);\n  }\n\n}\n/**\n * Extending object that entered in first argument.\n *\n * Returns extended object or false if have no target object or incorrect type.\n *\n * If you wish to clone source object (without modify it), just use empty new\n * object as first argument, like this:\n *   deepExtend({}, yourObj_1, [yourObj_N]);\n */\n\n\nconst deepExtend = function (...objects) {\n  if (arguments.length < 1 || typeof arguments[0] !== 'object') {\n    return false;\n  }\n\n  if (arguments.length < 2) {\n    return arguments[0];\n  }\n\n  const target = arguments[0]; // convert arguments to array and cut off target object\n\n  const args = Array.prototype.slice.call(arguments, 1);\n  let val, src;\n  args.forEach(obj => {\n    // skip argument if it is array or isn't object\n    if (typeof obj !== 'object' || Array.isArray(obj)) {\n      return;\n    }\n\n    Object.keys(obj).forEach(function (key) {\n      src = target[key]; // source value\n\n      val = obj[key]; // new value\n      // recursion prevention\n\n      if (val === target) {\n        return;\n        /**\n         * if new value isn't object then just overwrite by new value\n         * instead of extending.\n         */\n      } else if (typeof val !== 'object' || val === null) {\n        target[key] = val;\n        return; // just clone arrays (and recursive clone objects inside)\n      } else if (Array.isArray(val)) {\n        target[key] = cloneDeep(val);\n        return; // overwrite by new value if source isn't object or array\n      } else if (typeof src !== 'object' || src === null || Array.isArray(src)) {\n        target[key] = deepExtend({}, val);\n        return; // source value and new value is objects both, extending...\n      } else {\n        target[key] = deepExtend(src, val);\n        return;\n      }\n    });\n  });\n  return target;\n};\n\nclass Deferred {\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve;\n      this.reject = reject;\n    });\n  }\n\n} // getDeepFromObject({result: {data: 1}}, 'result.data', 2); // returns 1\n\n\nfunction getDeepFromObject(object = {}, name, defaultValue) {\n  const keys = name.split('.'); // clone the object\n\n  let level = deepExtend({}, object);\n  keys.forEach(k => {\n    if (level && typeof level[k] !== 'undefined') {\n      level = level[k];\n    }\n  });\n  return typeof level === 'undefined' ? defaultValue : level;\n}\n\nfunction getPageForRowIndex(index, perPage) {\n  // we need to add 1 to convert 0-based index to 1-based page number.\n  return Math.floor(index / perPage) + 1;\n}\n\nclass LocalDataSource extends DataSource {\n  constructor(data = []) {\n    super();\n    this.data = [];\n    this.filteredAndSorted = [];\n    this.sortConf = [];\n    this.filterConf = {\n      filters: [],\n      andOperator: true\n    };\n    this.pagingConf = {};\n    this.selectedItems = [];\n    this.data = data;\n  }\n\n  load(data) {\n    this.data = data;\n    return super.load(data);\n  }\n\n  prepend(element) {\n    this.reset(true);\n    this.data.unshift(element);\n    return super.prepend(element);\n  }\n\n  append(element) {\n    this.reset(true);\n    this.data.push(element);\n    return super.append(element);\n  }\n\n  add(element) {\n    this.data.push(element);\n    return super.add(element);\n  }\n\n  remove(element) {\n    this.data = this.data.filter(el => el !== element);\n    return super.remove(element);\n  }\n\n  update(element, values) {\n    return new Promise((resolve, reject) => {\n      this.find(element).then(found => {\n        found = deepExtend(found, values);\n        super.update(found, values).then(resolve).catch(reject);\n      }).catch(reject);\n    });\n  }\n\n  find(element) {\n    const found = this.data.find(el => el === element);\n\n    if (found) {\n      return Promise.resolve(found);\n    }\n\n    return Promise.reject(new Error('Element was not found in the dataset'));\n  }\n\n  getElements() {\n    const data = this.data.slice(0);\n    return Promise.resolve(this.prepareData(data));\n  }\n\n  getFilteredAndSorted() {\n    let data = this.data.slice(0);\n    this.prepareData(data);\n    return Promise.resolve(this.filteredAndSorted);\n  }\n\n  getAll() {\n    const data = this.data.slice(0);\n    return Promise.resolve(data);\n  }\n\n  reset(silent = false) {\n    if (silent) {\n      this.filterConf = {\n        filters: [],\n        andOperator: true\n      };\n      this.sortConf = [];\n      this.pagingConf['page'] = 1;\n    } else {\n      this.setFilter([], true, false);\n      this.setSort([], false);\n      this.setPage(1);\n    }\n  }\n\n  empty() {\n    this.data = [];\n    return super.empty();\n  }\n\n  count() {\n    return this.filteredAndSorted.length;\n  }\n\n  toggleItem(row, isSelected) {\n    if (isSelected) this.selectedItems.push(row);else this.selectedItems = this.selectedItems.filter(i => i !== row);\n  }\n\n  selectAllItems(checked) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (checked) {\n        const allItems = yield this.getAll();\n        this.selectedItems = allItems.slice(0);\n      } else this.selectedItems = [];\n    });\n  }\n\n  getSelectedItems() {\n    return this.selectedItems;\n  }\n  /**\n   *\n   * Array of conf objects\n   * [\n   *  {field: string, direction: asc|desc|null, compare: Function|null},\n   * ]\n   * @param conf\n   * @param doEmit\n   * @returns {LocalDataSource}\n   */\n\n\n  setSort(conf, doEmit = true) {\n    if (conf !== null) {\n      conf.forEach(fieldConf => {\n        if (!fieldConf['field'] || typeof fieldConf['direction'] === 'undefined') {\n          throw new Error('Sort configuration object is not valid');\n        }\n      });\n      this.sortConf = conf;\n    }\n\n    super.setSort(conf, doEmit);\n    return this;\n  }\n  /**\n   *\n   * Array of conf objects\n   * [\n   *  {field: string, search: string, filter: Function|null},\n   * ]\n   * @param conf\n   * @param andOperator\n   * @param doEmit\n   * @returns {LocalDataSource}\n   */\n\n\n  setFilter(conf, andOperator = true, doEmit = true) {\n    if (conf && conf.length > 0) {\n      conf.forEach(fieldConf => {\n        this.addFilter(fieldConf, andOperator, false);\n      });\n    } else {\n      this.filterConf = {\n        filters: [],\n        andOperator: true\n      };\n    }\n\n    this.filterConf.andOperator = andOperator;\n    this.pagingConf['page'] = 1;\n    super.setFilter(conf, andOperator, doEmit);\n    return this;\n  }\n\n  addFilter(fieldConf, andOperator = true, doEmit = true) {\n    if (!fieldConf['field'] || typeof fieldConf['search'] === 'undefined') {\n      throw new Error('Filter configuration object is not valid');\n    }\n\n    let found = false;\n    this.filterConf.filters.forEach((currentFieldConf, index) => {\n      if (currentFieldConf['field'] === fieldConf['field']) {\n        this.filterConf.filters[index] = fieldConf;\n        found = true;\n      }\n    });\n\n    if (!found) {\n      this.filterConf.filters.push(fieldConf);\n    }\n\n    this.filterConf.andOperator = andOperator;\n    super.addFilter(fieldConf, andOperator, doEmit);\n    return this;\n  }\n\n  setPaging(page, perPage, doEmit = true) {\n    this.pagingConf['page'] = page;\n    this.pagingConf['perPage'] = perPage;\n    super.setPaging(page, perPage, doEmit);\n    return this;\n  }\n\n  setPage(page, doEmit = true) {\n    this.pagingConf['page'] = page;\n    super.setPage(page, doEmit);\n    return this;\n  }\n\n  getSort() {\n    return this.sortConf;\n  }\n\n  getFilter() {\n    return this.filterConf;\n  }\n\n  getPaging() {\n    return this.pagingConf;\n  }\n\n  prepareData(data) {\n    data = this.filter(data);\n    data = this.sort(data);\n    this.filteredAndSorted = data.slice(0);\n    return this.paginate(data);\n  }\n\n  sort(data) {\n    if (this.sortConf) {\n      this.sortConf.forEach(fieldConf => {\n        data = LocalSorter.sort(data, fieldConf['field'], fieldConf['direction'], fieldConf['compare']);\n      });\n    }\n\n    return data;\n  } // TODO: refactor?\n\n\n  filter(data) {\n    if (this.filterConf.filters) {\n      if (this.filterConf.andOperator) {\n        this.filterConf.filters.forEach(fieldConf => {\n          if (fieldConf['search'].length > 0) {\n            data = LocalFilter.filter(data, fieldConf['field'], fieldConf['search'], fieldConf['filter']);\n          }\n        });\n      } else {\n        let mergedData = [];\n        this.filterConf.filters.forEach(fieldConf => {\n          if (fieldConf['search'].length > 0) {\n            mergedData = mergedData.concat(LocalFilter.filter(data, fieldConf['field'], fieldConf['search'], fieldConf['filter']));\n          }\n        }); // remove non unique items\n\n        data = mergedData.filter((elem, pos, arr) => {\n          return arr.indexOf(elem) === pos;\n        });\n      }\n    }\n\n    return data;\n  }\n\n  paginate(data) {\n    if (this.pagingConf && this.pagingConf['page'] && this.pagingConf['perPage']) {\n      data = LocalPager.paginate(data, this.pagingConf['page'], this.pagingConf['perPage']);\n    }\n\n    return data;\n  }\n\n}\n\nfunction prepareValue(value) {\n  return value;\n}\n\nlet Cell = /*#__PURE__*/(() => {\n  class Cell {\n    constructor(value, row, column, dataSet) {\n      this.value = value;\n      this.row = row;\n      this.column = column;\n      this.dataSet = dataSet;\n      this.newValue = '';\n      this.newValue = value;\n    }\n\n    getColumn() {\n      return this.column;\n    }\n\n    getRow() {\n      return this.row;\n    }\n\n    getValue() {\n      const valid = this.column.getValuePrepareFunction() instanceof Function;\n      const prepare = valid ? this.column.getValuePrepareFunction() : Cell.PREPARE;\n      return prepare.call(null, this.value, this.row.getData(), this);\n    }\n\n    setValue(value) {\n      this.newValue = value;\n    }\n\n    getId() {\n      return this.getColumn().id;\n    }\n\n    getTitle() {\n      return this.getColumn().title;\n    }\n\n    isEditable() {\n      var _a, _b;\n\n      if (this.getRow().index === -1) {\n        return (_a = this.getColumn().isAddable) !== null && _a !== void 0 ? _a : false;\n      } else {\n        return (_b = this.getColumn().isEditable) !== null && _b !== void 0 ? _b : false;\n      }\n    }\n\n    resetValue() {\n      // directly access this.value to get raw value,\n      // because this.getValue() will go through valuePrepareFunction (if any)\n      this.setValue(this.value);\n    }\n\n  }\n\n  Cell.PREPARE = prepareValue;\n  return Cell;\n})();\n\nclass Row {\n  constructor(index, data, _dataSet) {\n    this.index = index;\n    this.data = data;\n    this._dataSet = _dataSet;\n    this.isSelected = false;\n    this.isInEditing = false;\n    this.isExpanded = false;\n    this.cells = [];\n    this.process();\n  }\n\n  getCell(column) {\n    const theCell = this.cells.find(el => el.getColumn() === column);\n    if (!theCell) throw new Error('There is no cell with such Column');\n    return theCell;\n  }\n\n  getCells() {\n    return this.cells;\n  }\n\n  getData() {\n    return this.data;\n  }\n\n  getIsSelected() {\n    return this.isSelected;\n  }\n\n  getIsExpanded() {\n    return this.isExpanded;\n  }\n\n  getNewData() {\n    const values = Object.assign({}, this.data);\n    this.getCells().forEach(cell => values[cell.getColumn().id] = cell.newValue);\n    return values;\n  }\n\n  setData(data) {\n    this.data = data;\n    this.process();\n  }\n\n  process() {\n    this.cells = [];\n\n    this._dataSet.getColumns().forEach(column => {\n      const cell = this.createCell(column);\n      this.cells.push(cell);\n    });\n  }\n\n  createCell(column) {\n    const defValue = column.settings.defaultValue ? column.settings.defaultValue : '';\n    const value = typeof this.data[column.id] === 'undefined' ? defValue : this.data[column.id];\n    return new Cell(value, this, column, this._dataSet);\n  }\n\n}\n\nvar SelectModeOptions = /*#__PURE__*/(() => {\n  (function (SelectModeOptions) {\n    SelectModeOptions[\"Single\"] = \"single\";\n    SelectModeOptions[\"Multi\"] = \"multi\";\n  })(SelectModeOptions || (SelectModeOptions = {}));\n\n  return SelectModeOptions;\n})();\nvar IColumnType = /*#__PURE__*/(() => {\n  (function (IColumnType) {\n    IColumnType[\"Text\"] = \"text\";\n    IColumnType[\"Html\"] = \"html\";\n    IColumnType[\"Custom\"] = \"custom\";\n  })(IColumnType || (IColumnType = {}));\n\n  return IColumnType;\n})();\n\nclass Column {\n  constructor(id, settings, dataSet) {\n    this.id = id;\n    this.settings = settings;\n    this.dataSet = dataSet;\n    this.title = '';\n    this.hide = false;\n    this.type = IColumnType.Text;\n    this.class = '';\n    this.width = '';\n    this.isSortable = true;\n    this.isEditable = true;\n    this.isAddable = true;\n    this.isFilterable = false;\n    this.sortDirection = 'asc';\n    this.defaultSortDirection = undefined;\n    this.editor = {\n      type: '',\n      config: {},\n      component: null\n    };\n    this.filter = {\n      type: '',\n      config: {},\n      component: null\n    };\n    this.renderComponent = null;\n    this.process();\n  }\n\n  getOnComponentInitFunction() {\n    return this.onComponentInitFunction;\n  }\n\n  getCompareFunction() {\n    return this.compareFunction;\n  }\n\n  getValuePrepareFunction() {\n    return this.valuePrepareFunction;\n  }\n\n  getFilterFunction() {\n    return this.filterFunction;\n  }\n\n  getConfig() {\n    return this.editor && this.editor.config;\n  }\n\n  getFilterType() {\n    return this.filter && this.filter.type;\n  }\n\n  getFilterConfig() {\n    return this.filter && this.filter.config;\n  }\n  /**\n   * Retrieves a setting by name.\n   *\n   * @param key the current key name\n   * @param compatKeys key names for backwards compatibility\n   * @private\n   */\n\n\n  lookupSetting(key, compatKeys = []) {\n    if (typeof this.settings[key] === undefined) {\n      for (const k of compatKeys) {\n        if (typeof this.settings[k] !== undefined) {\n          return this.settings[k];\n        }\n      }\n\n      return undefined;\n    } else {\n      return this.settings[key];\n    }\n  }\n\n  process() {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o; // the pattern is \"X = lookup(key) ?? X\" - this keeps the default value in case the setting is undefined\n\n\n    this.placeholder = this.lookupSetting('placeholder');\n    this.title = (_a = this.lookupSetting('title')) !== null && _a !== void 0 ? _a : this.title;\n    this.class = (_b = this.lookupSetting('class')) !== null && _b !== void 0 ? _b : this.class;\n    this.width = (_c = this.lookupSetting('width')) !== null && _c !== void 0 ? _c : this.width;\n    this.hide = (_d = this.lookupSetting('hide')) !== null && _d !== void 0 ? _d : this.hide;\n    this.type = (_e = this.lookupSetting('type')) !== null && _e !== void 0 ? _e : this.determineType();\n    this.editor = (_f = this.lookupSetting('editor')) !== null && _f !== void 0 ? _f : this.editor;\n    this.filter = (_g = this.lookupSetting('filter')) !== null && _g !== void 0 ? _g : this.filter;\n    this.renderComponent = (_h = this.lookupSetting('renderComponent')) !== null && _h !== void 0 ? _h : this.renderComponent;\n    this.isFilterable = this.filter !== undefined && !!this.filter;\n    this.isSortable = (_j = this.lookupSetting('isSortable', ['sort'])) !== null && _j !== void 0 ? _j : this.isSortable;\n    this.isEditable = (_k = this.lookupSetting('isEditable', ['editable'])) !== null && _k !== void 0 ? _k : this.isEditable;\n    this.isAddable = (_l = this.lookupSetting('isAddable')) !== null && _l !== void 0 ? _l : this.isAddable;\n    this.defaultSortDirection = (_m = this.lookupSetting('sortDirection')) !== null && _m !== void 0 ? _m : this.defaultSortDirection;\n    this.sortDirection = (_o = this.defaultSortDirection) !== null && _o !== void 0 ? _o : this.sortDirection;\n    this.compareFunction = this.lookupSetting('compareFunction');\n    this.valuePrepareFunction = this.lookupSetting('valuePrepareFunction');\n    this.filterFunction = this.lookupSetting('filterFunction');\n    this.onComponentInitFunction = this.lookupSetting('onComponentInitFunction');\n  }\n\n  determineType() {\n    // TODO: determine type by data\n    return IColumnType.Text;\n  }\n\n}\n\nclass DataSet {\n  constructor(data = [], columnSettings) {\n    this.columnSettings = columnSettings;\n    this.data = [];\n    this.columns = [];\n    this.rows = [];\n    this.willSelect = '';\n    this.createColumns(columnSettings);\n    this.setData(data);\n    this.createNewRow();\n  }\n\n  setData(data, selectedRows = []) {\n    const rows = data.map((el, index) => {\n      const row = new Row(index, el, this);\n      row.isSelected = selectedRows.indexOf(el) > -1;\n      return row;\n    });\n    this.data = rows;\n    this.createRows();\n  }\n\n  getColumns() {\n    return this.columns;\n  }\n\n  getExpandedRow() {\n    if (!this.expandedRow) {\n      console.warn('Expanded row not found');\n      throw new Error('Expanded row not found');\n    }\n\n    return this.expandedRow;\n  }\n\n  getSelectedRow() {\n    if (!this.selectedRow) {\n      console.warn('Selected row not found');\n      throw new Error('Selected row not found');\n    }\n\n    return this.selectedRow;\n  }\n\n  getRows() {\n    var _a;\n\n    return (_a = this.rows) !== null && _a !== void 0 ? _a : [];\n  }\n\n  getFirstRow() {\n    return this.rows[0];\n  }\n\n  getLastRow() {\n    return this.rows[this.rows.length - 1];\n  }\n\n  findRowByData(data) {\n    const row = this.rows.find(row => row.getData() === data);\n\n    if (!row) {\n      console.warn('Data row not found', data);\n      throw new Error('Row not found');\n    }\n\n    return row;\n  }\n\n  deselectAll() {\n    this.rows.forEach(row => {\n      row.isSelected = false;\n    }); // we need to clear selectedRow field because no one row selected\n\n    this.selectedRow = undefined;\n  }\n\n  clearExpandAll() {\n    this.rows.forEach(row => {\n      row.isExpanded = false;\n    }); // we need to clear selectedRow field because no one row selected\n\n    this.expandedRow = undefined;\n  }\n\n  selectRow(row) {\n    const previousIsSelected = row.isSelected;\n    this.deselectAll();\n    row.isSelected = !previousIsSelected;\n    this.selectedRow = row; //return this.selectedRow;\n  }\n\n  multipleSelectRow(row) {\n    row.isSelected = !row.isSelected;\n    this.selectedRow = row;\n    return this.selectedRow;\n  }\n\n  expandRow(row) {\n    var _a;\n\n    const previousIsExpanded = row.isExpanded;\n    this.clearExpandAll();\n\n    if (row.index !== ((_a = this.expandedRow) === null || _a === void 0 ? void 0 : _a.index)) {\n      this.expandedRow = undefined;\n    }\n\n    row.isExpanded = !previousIsExpanded;\n    this.expandedRow = row;\n    return this.expandedRow;\n  }\n\n  selectPreviousRow() {\n    if (this.rows.length > 0) {\n      let index = this.selectedRow ? this.selectedRow.index : 0;\n\n      if (index > this.rows.length - 1) {\n        index = this.rows.length - 1;\n      }\n\n      this.selectRow(this.rows[index]);\n      return this.getSelectedRow();\n    }\n\n    throw new Error('There are no rows inside the data table');\n  }\n\n  selectFirstRow() {\n    if (this.rows.length > 0) {\n      this.selectRow(this.rows[0]);\n      return this.getSelectedRow();\n    }\n\n    throw new Error('There are no rows inside the data table');\n  }\n\n  selectLastRow() {\n    if (this.rows.length > 0) {\n      this.selectRow(this.rows[this.rows.length - 1]);\n      return this.getSelectedRow();\n    }\n\n    throw new Error('There are no rows inside the data table');\n  }\n\n  selectRowByIndex(index) {\n    const rowsLength = this.rows.length;\n\n    if (rowsLength === 0) {\n      throw new Error('There are no rows inside the data table');\n    }\n\n    if (!index) {\n      this.selectFirstRow();\n    } else if (index > 0 && index < rowsLength) {\n      this.selectRow(this.rows[index]);\n    } else // we need to deselect all rows if we got an incorrect index\n      this.deselectAll();\n  }\n\n  willSelectFirstRow() {\n    this.willSelect = 'first';\n  }\n\n  willSelectLastRow() {\n    this.willSelect = 'last';\n  }\n\n  select(selectedRowIndex) {\n    if (this.getRows().length === 0) {\n      throw new Error('There are no rows inside the data table');\n    }\n\n    if (this.willSelect) {\n      if (this.willSelect === 'first') {\n        this.selectFirstRow();\n      }\n\n      if (this.willSelect === 'last') {\n        this.selectLastRow();\n      }\n\n      this.willSelect = '';\n    } else {\n      this.selectRowByIndex(selectedRowIndex);\n    }\n\n    return this.getSelectedRow();\n  }\n\n  createNewRow() {\n    this.newRow = new Row(-1, {}, this);\n    this.newRow.isInEditing = true;\n  }\n  /**\n   * Create columns by mapping from the settings\n   * @param settings\n   * @private\n   */\n\n\n  createColumns(settings) {\n    for (const id in settings) {\n      if (settings.hasOwnProperty(id)) {\n        this.columns.push(new Column(id, settings[id], this));\n      }\n    }\n  }\n  /**\n   * Create rows based on current data prepared in data source\n   * @private\n   */\n\n\n  createRows() {\n    this.rows = [];\n    this.data.forEach(el => {\n      this.rows.push(el);\n    });\n  }\n\n}\n\nclass Grid {\n  constructor(source, settings) {\n    this.createFormShown = false;\n    this.onSelectRowSource = new Subject();\n    this.onDeselectRowSource = new Subject();\n    this.setSettings(settings);\n    this.setSource(source);\n  }\n\n  detach() {\n    if (this.sourceOnChangedSubscription) {\n      this.sourceOnChangedSubscription.unsubscribe();\n    }\n\n    if (this.sourceOnUpdatedSubscription) {\n      this.sourceOnUpdatedSubscription.unsubscribe();\n    }\n  }\n\n  showActionColumn(position) {\n    return this.isCurrentActionsPosition(position) && this.isActionsVisible();\n  }\n\n  isCurrentActionsPosition(position) {\n    return position == this.getSetting('actions.position');\n  }\n\n  isActionsVisible() {\n    return this.getSetting('actions.add') || this.getSetting('actions.edit') || this.getSetting('actions.delete') || this.getSetting('actions.custom').length;\n  }\n\n  isMultiSelectVisible() {\n    return this.getSetting('selectMode') === 'multi';\n  }\n\n  getNewRow() {\n    return this.dataSet.newRow;\n  }\n\n  setSettings(settings) {\n    this.settings = settings;\n    this.dataSet = new DataSet([], this.getSetting('columns'));\n\n    if (this.source) {\n      this.source.refresh();\n    }\n  }\n\n  getDataSet() {\n    return this.dataSet;\n  }\n\n  setSource(source) {\n    this.source = this.prepareSource(source);\n    this.detach();\n    this.sourceOnChangedSubscription = this.source.onChanged().subscribe(changes => this.processDataChange(changes));\n    this.sourceOnUpdatedSubscription = this.source.onUpdated().subscribe(data => {\n      const changedRow = this.dataSet.findRowByData(data);\n      changedRow.setData(data);\n    });\n  }\n\n  getSetting(name, defaultValue) {\n    return getDeepFromObject(this.settings, name, defaultValue);\n  }\n\n  getColumns() {\n    return this.dataSet.getColumns();\n  }\n\n  getRows() {\n    return this.dataSet.getRows();\n  }\n\n  selectRow(row) {\n    this.dataSet.selectRow(row);\n    this.source.toggleItem(row.getData(), row.isSelected);\n  }\n\n  multipleSelectRow(row) {\n    this.dataSet.multipleSelectRow(row);\n    this.source.toggleItem(row.getData(), row.isSelected);\n  }\n\n  onSelectRow() {\n    return this.onSelectRowSource.asObservable();\n  }\n\n  expandRow(row) {\n    this.dataSet.expandRow(row);\n  }\n\n  onDeselectRow() {\n    return this.onDeselectRowSource.asObservable();\n  }\n\n  edit(row) {\n    row.isInEditing = true;\n  }\n\n  create(row, confirmEmitter) {\n    const deferred = new Deferred();\n    deferred.promise.then(newData => {\n      newData = newData ? newData : row.getNewData();\n\n      if (deferred.resolve.skipAdd) {\n        this.createFormShown = false;\n      } else {\n        this.source.prepend(newData).then(() => {\n          this.createFormShown = false;\n          this.dataSet.createNewRow();\n        });\n      }\n    }).catch(err => {// doing nothing\n    });\n\n    if (this.getSetting('add.confirmCreate')) {\n      confirmEmitter.emit({\n        newData: row.getNewData(),\n        source: this.source,\n        confirm: deferred\n      });\n    } else {\n      deferred.resolve();\n    }\n  }\n\n  save(row, confirmEmitter) {\n    const deferred = new Deferred();\n    deferred.promise.then(newData => {\n      newData = newData ? newData : row.getNewData();\n\n      if (deferred.resolve.skipEdit) {\n        row.isInEditing = false;\n      } else {\n        this.source.update(row.getData(), newData).then(() => {\n          row.isInEditing = false;\n        });\n      }\n    }).catch(err => {// doing nothing\n    });\n\n    if (this.getSetting('edit.confirmSave')) {\n      confirmEmitter.emit({\n        data: row.getData(),\n        newData: row.getNewData(),\n        source: this.source,\n        confirm: deferred\n      });\n    } else {\n      deferred.resolve();\n    }\n  }\n\n  delete(row, confirmEmitter) {\n    const deferred = new Deferred();\n    deferred.promise.then(() => {\n      this.source.remove(row.getData());\n    }).catch(err => {// doing nothing\n    });\n\n    if (this.getSetting('delete.confirmDelete')) {\n      confirmEmitter.emit({\n        data: row.getData(),\n        source: this.source,\n        confirm: deferred\n      });\n    } else {\n      deferred.resolve();\n    }\n  }\n\n  processDataChange(changes) {\n    if (this.shouldProcessChange(changes)) {\n      this.dataSet.setData(changes['elements'], this.getSelectedItems());\n\n      if (this.getSetting('selectMode') !== 'multi') {\n        try {\n          const row = this.determineRowToSelect(changes);\n          this.onSelectRowSource.next(row);\n        } catch (e) {\n          this.onDeselectRowSource.next(null);\n        }\n      }\n    }\n  }\n\n  shouldProcessChange(changes) {\n    if (['filter', 'sort', 'page', 'remove', 'refresh', 'load', 'empty', 'paging'].indexOf(changes['action']) !== -1) {\n      return true;\n    } else if (['prepend', 'append'].indexOf(changes['action']) !== -1 && !this.getSetting('pager.display')) {\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * @breaking-change 1.8.0\n   * Need to add `| null` in return type\n   *\n   * TODO: move to selectable? Separate directive\n   */\n\n\n  determineRowToSelect(changes) {\n    if (['load', 'page', 'filter', 'sort', 'refresh'].indexOf(changes['action']) !== -1) {\n      return this.dataSet.select(this.getRowIndexToSelect());\n    }\n\n    if (this.shouldSkipSelection()) {\n      return null;\n    }\n\n    if (changes['action'] === 'remove') {\n      if (changes['elements'].length === 0) {\n        // we have to store which one to select as the data will be reloaded\n        this.dataSet.willSelectLastRow();\n      } else {\n        return this.dataSet.selectPreviousRow();\n      }\n    }\n\n    if (changes['action'] === 'append') {\n      // we have to store which one to select as the data will be reloaded\n      this.dataSet.willSelectLastRow();\n    }\n\n    if (changes['action'] === 'add') {\n      return this.dataSet.selectFirstRow();\n    }\n\n    if (changes['action'] === 'update') {\n      return this.dataSet.selectFirstRow();\n    }\n\n    if (changes['action'] === 'prepend') {\n      // we have to store which one to select as the data will be reloaded\n      this.dataSet.willSelectFirstRow();\n    }\n\n    return null;\n  }\n\n  prepareSource(source) {\n    const initialSource = this.getInitialSort();\n\n    if (initialSource && initialSource['field'] && initialSource['direction']) {\n      source.setSort([initialSource], false);\n    }\n\n    if (this.getSetting('pager.display') === true) {\n      source.setPaging(this.getPageToSelect(source), this.getSetting('pager.perPage'), false);\n    }\n\n    source.refresh();\n    return source;\n  }\n\n  getInitialSort() {\n    const sortConf = {};\n    this.getColumns().forEach(column => {\n      if (column.isSortable && column.defaultSortDirection) {\n        sortConf['field'] = column.id;\n        sortConf['direction'] = column.defaultSortDirection;\n        sortConf['compare'] = column.getCompareFunction();\n      }\n    });\n    return sortConf;\n  }\n\n  getSelectedRows() {\n    return this.dataSet.getRows().filter(r => r.isSelected);\n  }\n\n  getSelectedItems() {\n    return this.source.getSelectedItems();\n  }\n\n  selectAllRows(status) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.dataSet.getRows().forEach(r => r.isSelected = status);\n      yield this.source.selectAllItems(status);\n    });\n  }\n\n  getFirstRow() {\n    return this.dataSet.getFirstRow();\n  }\n\n  getLastRow() {\n    return this.dataSet.getLastRow();\n  }\n\n  getSelectionInfo() {\n    const switchPageToSelectedRowPage = this.getSetting('switchPageToSelectedRowPage');\n    const selectedRowIndex = Number(this.getSetting('selectedRowIndex', 0)) || 0;\n    const {\n      perPage,\n      page\n    } = this.getSetting('pager');\n    return {\n      perPage,\n      page,\n      selectedRowIndex,\n      switchPageToSelectedRowPage\n    };\n  }\n\n  getRowIndexToSelect() {\n    const {\n      switchPageToSelectedRowPage,\n      selectedRowIndex,\n      perPage\n    } = this.getSelectionInfo();\n    const dataAmount = this.source.count();\n    /**\n     * source - contains all table data\n     * dataSet - contains data for current page\n     * selectedRowIndex - contains index for data in all data\n     *\n     * because of that, we need to count index for a specific row in page\n     * if\n     * `switchPageToSelectedRowPage` - we need to change page automatically\n     * `selectedRowIndex < dataAmount && selectedRowIndex >= 0` - index points to existing data\n     * (if index points to non-existing data and we calculate index for current page - we will get wrong selected row.\n     *  if we return index witch not points to existing data - no line will be highlighted)\n     */\n\n    return switchPageToSelectedRowPage && selectedRowIndex < dataAmount && selectedRowIndex >= 0 ? selectedRowIndex % perPage : selectedRowIndex;\n  }\n\n  getPageToSelect(source) {\n    const {\n      switchPageToSelectedRowPage,\n      selectedRowIndex,\n      perPage,\n      page\n    } = this.getSelectionInfo();\n    let pageToSelect = Math.max(1, page);\n\n    if (switchPageToSelectedRowPage && selectedRowIndex >= 0) {\n      pageToSelect = getPageForRowIndex(selectedRowIndex, perPage);\n    }\n\n    const maxPageAmount = Math.ceil(source.count() / perPage);\n    return maxPageAmount ? Math.min(pageToSelect, maxPageAmount) : pageToSelect;\n  }\n\n  shouldSkipSelection() {\n    /**\n     * For backward compatibility when using `selectedRowIndex` with non-number values - ignored.\n     *\n     * Therefore, in order to select a row after some changes,\n     * the `selectedRowIndex` value must be invalid or >= 0 (< 0 means that no row is selected).\n     *\n     * `Number(value)` returns `NaN` on all invalid cases, and comparisons with `NaN` always return `false`.\n     *\n     * !!! We should skip a row only in cases when `selectedRowIndex` < 0\n     * because when < 0 all lines must be deselected\n     */\n    const selectedRowIndex = Number(this.getSetting('selectedRowIndex'));\n    return selectedRowIndex < 0;\n  }\n\n}\n\nlet TagComponent = /*#__PURE__*/(() => {\n  class TagComponent {\n    constructor() {\n      this.close = new EventEmitter();\n    }\n\n    closeClicked(evt) {\n      evt.stopPropagation();\n      this.close.emit(this.item.id);\n    }\n\n  }\n\n  TagComponent.ɵfac = function TagComponent_Factory(t) {\n    return new (t || TagComponent)();\n  };\n\n  TagComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TagComponent,\n    selectors: [[\"angular2-smart-table-tag\"]],\n    inputs: {\n      item: \"item\"\n    },\n    outputs: {\n      close: \"close\"\n    },\n    decls: 5,\n    vars: 1,\n    consts: [[2, \"padding\", \"5px\", \"display\", \"inline\", \"white-space\", \"nowrap\"], [\"aria-hidden\", \"true\", \"focusable\", \"false\", \"data-prefix\", \"fas\", \"data-icon\", \"times-circle\", \"role\", \"img\", \"xmlns\", \"http://www.w3.org/2000/svg\", \"viewBox\", \"0 0 512 512\", 1, \"svg-inline--fa\", \"fa-times-circle\", \"fa-w-16\", 2, \"width\", \"15px\", 3, \"click\"], [\"fill\", \"currentColor\", \"d\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z\"], [1, \"itemText\", 2, \"margin-left\", \"3px\"]],\n    template: function TagComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(1, \"svg\", 1);\n        i0.ɵɵlistener(\"click\", function TagComponent_Template__svg_svg_click_1_listener($event) {\n          return ctx.closeClicked($event);\n        });\n        i0.ɵɵelement(2, \"path\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵnamespaceHTML();\n        i0.ɵɵelementStart(3, \"span\", 3);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.item.title);\n      }\n    },\n    styles: [\"*[_ngcontent-%COMP%]{box-sizing:border-box}*[_ngcontent-%COMP%]{padding:0;margin:0}ul[_ngcontent-%COMP%]{list-style-type:none}.add-tag-list[_ngcontent-%COMP%]{font-family:font8272;font-size:1.5em}.add-tag-list[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{padding-left:20px;padding-right:20px;padding-bottom:8px;display:flex;flex-direction:row-reverse;float:left}.add-tag-list[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:last-child{padding-right:0}.closeButton[_ngcontent-%COMP%]{display:inline}.closeButton[_ngcontent-%COMP%]:after{content:\\\"\\\\f057\\\";padding-left:4px;font-family:FontAwesome;color:#df0024;cursor:pointer}.closeButton[_ngcontent-%COMP%]:hover:after{color:#900110;transition:.6s linear}\"]\n  });\n  return TagComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet TagsListComponent = /*#__PURE__*/(() => {\n  class TagsListComponent {\n    constructor() {\n      this.close = new EventEmitter();\n    }\n\n    closedTag(tag) {\n      this.close.emit(tag);\n    }\n\n  }\n\n  TagsListComponent.ɵfac = function TagsListComponent_Factory(t) {\n    return new (t || TagsListComponent)();\n  };\n\n  TagsListComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TagsListComponent,\n    selectors: [[\"angular2-smart-table-tags-list\"]],\n    inputs: {\n      tags: \"tags\"\n    },\n    outputs: {\n      close: \"close\"\n    },\n    decls: 2,\n    vars: 1,\n    consts: [[\"id\", \"tagslist\", 1, \"add-tag-list\"], [3, \"item\", \"close\", 4, \"ngFor\", \"ngForOf\"], [3, \"item\", \"close\"]],\n    template: function TagsListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, TagsListComponent_angular2_smart_table_tag_1_Template, 1, 1, \"angular2-smart-table-tag\", 1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.tags);\n      }\n    },\n    directives: [TagComponent, i2.NgForOf],\n    styles: [_c0]\n  });\n  return TagsListComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet TableService = /*#__PURE__*/(() => {\n  class TableService {\n    constructor() {\n      this.mouseMoveEvent$ = new Subject();\n    }\n\n  }\n\n  TableService.ɵfac = function TableService_Factory(t) {\n    return new (t || TableService)();\n  };\n\n  TableService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: TableService,\n    factory: TableService.ɵfac,\n    providedIn: 'root'\n  });\n  return TableService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet CheckboxSelectAllComponent = /*#__PURE__*/(() => {\n  class CheckboxSelectAllComponent {}\n\n  CheckboxSelectAllComponent.ɵfac = function CheckboxSelectAllComponent_Factory(t) {\n    return new (t || CheckboxSelectAllComponent)();\n  };\n\n  CheckboxSelectAllComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: CheckboxSelectAllComponent,\n    selectors: [[\"\", \"angular2-st-checkbox-select-all\", \"\"]],\n    inputs: {\n      grid: \"grid\",\n      source: \"source\",\n      isAllSelected: \"isAllSelected\"\n    },\n    attrs: _c1,\n    decls: 1,\n    vars: 1,\n    consts: [[\"type\", \"checkbox\", 3, \"ngModel\"]],\n    template: function CheckboxSelectAllComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"input\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.isAllSelected);\n      }\n    },\n    directives: [i1.CheckboxControlValueAccessor, i1.NgControlStatus, i1.NgModel],\n    encapsulation: 2\n  });\n  return CheckboxSelectAllComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ActionsTitleComponent = /*#__PURE__*/(() => {\n  class ActionsTitleComponent {\n    constructor(ref) {\n      this.ref = ref;\n    }\n\n    ngAfterViewInit() {\n      this.ref.nativeElement.classList.add('angular2-smart-actions');\n    }\n\n    ngOnChanges() {\n      this.actionsColumnTitle = this.grid.getSetting('actions.columnTitle');\n    }\n\n  }\n\n  ActionsTitleComponent.ɵfac = function ActionsTitleComponent_Factory(t) {\n    return new (t || ActionsTitleComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  ActionsTitleComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ActionsTitleComponent,\n    selectors: [[\"\", \"angular2-st-actions-title\", \"\"]],\n    inputs: {\n      grid: \"grid\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    attrs: _c2,\n    decls: 2,\n    vars: 1,\n    consts: [[1, \"angular2-smart-title\"]],\n    template: function ActionsTitleComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.actionsColumnTitle);\n      }\n    },\n    encapsulation: 2\n  });\n  return ActionsTitleComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet TitleComponent = /*#__PURE__*/(() => {\n  class TitleComponent {\n    constructor() {\n      this.currentDirection = '';\n      this.sort = new EventEmitter();\n      this.hide = new EventEmitter();\n    }\n\n    ngOnChanges(changes) {\n      if (changes.source) {\n        if (!changes.source.firstChange) {\n          this.dataChangedSub.unsubscribe();\n        }\n\n        this.dataChangedSub = this.source.onChanged().subscribe(dataChanges => {\n          const sortConf = this.source.getSort();\n\n          if (sortConf.length > 0 && sortConf[0]['field'] === this.column.id) {\n            this.currentDirection = sortConf[0]['direction'];\n          } else {\n            this.currentDirection = '';\n          }\n\n          sortConf.forEach(fieldConf => {});\n        });\n      }\n    }\n\n    _sort(event) {\n      event.preventDefault();\n      this.changeSortDirection();\n      this.source.setSort([{\n        field: this.column.id,\n        direction: this.currentDirection,\n        compare: this.column.getCompareFunction()\n      }]);\n      this.sort.emit(null);\n    }\n\n    _hideColumnClicked(event) {\n      event.preventDefault();\n      this.hide.emit(this.column.id);\n    }\n\n    changeSortDirection() {\n      var _a;\n\n      if (this.currentDirection) {\n        const newDirection = this.currentDirection === 'asc' ? 'desc' : 'asc';\n        this.currentDirection = newDirection;\n      } else {\n        this.currentDirection = (_a = this.column.sortDirection) !== null && _a !== void 0 ? _a : 'asc';\n      }\n\n      return this.currentDirection;\n    }\n\n  }\n\n  TitleComponent.ɵfac = function TitleComponent_Factory(t) {\n    return new (t || TitleComponent)();\n  };\n\n  TitleComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TitleComponent,\n    selectors: [[\"angular2-smart-table-title\"]],\n    inputs: {\n      column: \"column\",\n      source: \"source\",\n      isHideable: \"isHideable\"\n    },\n    outputs: {\n      sort: \"sort\",\n      hide: \"hide\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 3,\n    vars: 3,\n    consts: [[\"href\", \"#\", \"class\", \"angular2-smart-sort-link sort\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [\"class\", \"angular2-smart-sort\", 4, \"ngIf\"], [\"style\", \"position: absolute; top:0; right:0; border:none\", 3, \"click\", 4, \"ngIf\"], [\"href\", \"#\", 1, \"angular2-smart-sort-link\", \"sort\", 3, \"ngClass\", \"click\"], [1, \"angular2-smart-sort\"], [2, \"position\", \"absolute\", \"top\", \"0\", \"right\", \"0\", \"border\", \"none\", 3, \"click\"]],\n    template: function TitleComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, TitleComponent_a_0_Template, 2, 2, \"a\", 0);\n        i0.ɵɵtemplate(1, TitleComponent_span_1_Template, 2, 1, \"span\", 1);\n        i0.ɵɵtemplate(2, TitleComponent_button_2_Template, 2, 0, \"button\", 2);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.column.isSortable);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.column.isSortable);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isHideable);\n      }\n    },\n    directives: [i2.NgIf, i2.NgClass],\n    styles: [\"a.sort.asc[_ngcontent-%COMP%], a.sort.desc[_ngcontent-%COMP%]{font-weight:700}a.sort.asc[_ngcontent-%COMP%]:after, a.sort.desc[_ngcontent-%COMP%]:after{content:\\\"\\\";display:inline-block;width:0;height:0;border-bottom:4px solid rgba(0,0,0,.3);border-top:4px solid transparent;border-left:4px solid transparent;border-right:4px solid transparent;margin-bottom:2px}a.sort.desc[_ngcontent-%COMP%]:after{transform:rotate(-180deg);margin-bottom:-2px}\"]\n  });\n  return TitleComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ColumnTitleComponent = /*#__PURE__*/(() => {\n  class ColumnTitleComponent {\n    constructor() {\n      this.sort = new EventEmitter();\n      this.hide = new EventEmitter();\n    }\n\n  }\n\n  ColumnTitleComponent.ɵfac = function ColumnTitleComponent_Factory(t) {\n    return new (t || ColumnTitleComponent)();\n  };\n\n  ColumnTitleComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ColumnTitleComponent,\n    selectors: [[\"angular2-st-column-title\"]],\n    inputs: {\n      column: \"column\",\n      source: \"source\",\n      isHideable: \"isHideable\"\n    },\n    outputs: {\n      sort: \"sort\",\n      hide: \"hide\"\n    },\n    decls: 2,\n    vars: 3,\n    consts: [[1, \"angular2-smart-title\"], [3, \"source\", \"column\", \"isHideable\", \"sort\", \"hide\"]],\n    template: function ColumnTitleComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"angular2-smart-table-title\", 1);\n        i0.ɵɵlistener(\"sort\", function ColumnTitleComponent_Template_angular2_smart_table_title_sort_1_listener($event) {\n          return ctx.sort.emit($event);\n        })(\"hide\", function ColumnTitleComponent_Template_angular2_smart_table_title_hide_1_listener($event) {\n          return ctx.hide.emit($event);\n        });\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"source\", ctx.source)(\"column\", ctx.column)(\"isHideable\", ctx.isHideable);\n      }\n    },\n    directives: [TitleComponent],\n    encapsulation: 2\n  });\n  return ColumnTitleComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NgxResizerDirective = /*#__PURE__*/(() => {\n  class NgxResizerDirective {\n    constructor(elementRef, renderer, tableService) {\n      this.elementRef = elementRef;\n      this.renderer = renderer;\n      this.tableService = tableService;\n      this.destroyed$ = new Subject();\n    }\n\n    ngOnInit() {\n      this.tableService.mouseMoveEvent$.pipe(takeUntil(this.destroyed$), filter(() => this.isClicked)).subscribe(event => {\n        const offset = this.pointerOffset - event.pageX;\n        const width = this.parentOffset - offset;\n        this.renderer.setStyle(this.parentElement, 'width', width + 'px');\n        this.renderer.setStyle(this.siblingElement, 'width', this.siblingOffset + offset + 'px');\n      });\n    }\n\n    onMouseEnter(event) {\n      this.isClicked = true;\n      this.parentElement = this.renderer.parentNode(this.elementRef.nativeElement);\n      this.siblingElement = this.renderer.nextSibling(this.parentElement);\n      this.pointerOffset = event.pageX;\n      this.parentOffset = this.parentElement.offsetWidth;\n      this.siblingOffset = this.siblingElement.offsetWidth;\n    }\n\n    onMouseDown() {\n      this.isClicked = false;\n    }\n\n    ngOnDestroy() {\n      this.destroyed$.next(null);\n    }\n\n  }\n\n  NgxResizerDirective.ɵfac = function NgxResizerDirective_Factory(t) {\n    return new (t || NgxResizerDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(TableService));\n  };\n\n  NgxResizerDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgxResizerDirective,\n    selectors: [[\"\", \"angular2-resizer\", \"\"]],\n    hostBindings: function NgxResizerDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"mousedown\", function NgxResizerDirective_mousedown_HostBindingHandler($event) {\n          return ctx.onMouseEnter($event);\n        })(\"mouseup\", function NgxResizerDirective_mouseup_HostBindingHandler() {\n          return ctx.onMouseDown();\n        }, false, i0.ɵɵresolveDocument);\n      }\n    }\n  });\n  return NgxResizerDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet TheadTitlesRowComponent = /*#__PURE__*/(() => {\n  class TheadTitlesRowComponent {\n    constructor() {\n      this.sort = new EventEmitter();\n      this.hide = new EventEmitter();\n      this.selectAllRows = new EventEmitter();\n      this.isHideable = false;\n    }\n\n    ngOnChanges() {\n      this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n      this.showActionColumnLeft = this.grid.showActionColumn('left');\n      this.showActionColumnRight = this.grid.showActionColumn('right');\n      this.isResizable = this.grid.getSetting('resizable');\n      this.isHideable = this.grid.getSetting('hideable');\n    }\n\n    getVisibleColumns(columns) {\n      return (columns || []).filter(column => !column.hide);\n    }\n\n  }\n\n  TheadTitlesRowComponent.ɵfac = function TheadTitlesRowComponent_Factory(t) {\n    return new (t || TheadTitlesRowComponent)();\n  };\n\n  TheadTitlesRowComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TheadTitlesRowComponent,\n    selectors: [[\"\", \"angular2-st-thead-titles-row\", \"\"]],\n    inputs: {\n      grid: \"grid\",\n      isAllSelected: \"isAllSelected\",\n      source: \"source\"\n    },\n    outputs: {\n      sort: \"sort\",\n      hide: \"hide\",\n      selectAllRows: \"selectAllRows\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    attrs: _c3,\n    decls: 4,\n    vars: 4,\n    consts: [[\"angular2-st-checkbox-select-all\", \"\", 3, \"grid\", \"source\", \"isAllSelected\", \"click\", 4, \"ngIf\"], [\"angular2-st-actions-title\", \"\", 3, \"grid\", 4, \"ngIf\"], [3, \"class\", \"ngClass\", \"width\", 4, \"ngFor\", \"ngForOf\"], [\"angular2-st-checkbox-select-all\", \"\", 3, \"grid\", \"source\", \"isAllSelected\", \"click\"], [\"angular2-st-actions-title\", \"\", 3, \"grid\"], [3, \"ngClass\"], [3, \"source\", \"column\", \"isHideable\", \"sort\", \"hide\"], [\"angular2-resizer\", \"\", \"class\", \"angular2-resizer-block\", 4, \"ngIf\"], [\"angular2-resizer\", \"\", 1, \"angular2-resizer-block\"]],\n    template: function TheadTitlesRowComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, TheadTitlesRowComponent_th_0_Template, 1, 3, \"th\", 0);\n        i0.ɵɵtemplate(1, TheadTitlesRowComponent_th_1_Template, 1, 1, \"th\", 1);\n        i0.ɵɵtemplate(2, TheadTitlesRowComponent_th_2_Template, 3, 10, \"th\", 2);\n        i0.ɵɵtemplate(3, TheadTitlesRowComponent_th_3_Template, 1, 1, \"th\", 1);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.isMultiSelectVisible);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnLeft);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.getVisibleColumns(ctx.grid.getColumns()));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnRight);\n      }\n    },\n    directives: [CheckboxSelectAllComponent, ActionsTitleComponent, ColumnTitleComponent, i2.NgIf, i2.NgForOf, i2.NgClass, NgxResizerDirective],\n    encapsulation: 2\n  });\n  return TheadTitlesRowComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet AddButtonComponent = /*#__PURE__*/(() => {\n  class AddButtonComponent {\n    constructor(ref) {\n      this.ref = ref;\n      this.create = new EventEmitter();\n    }\n\n    ngAfterViewInit() {\n      this.ref.nativeElement.classList.add('angular2-smart-actions-title', 'angular2-smart-actions-title-add');\n    }\n\n    ngOnChanges() {\n      this.isActionAdd = this.grid.getSetting('actions.add');\n      this.addNewButtonContent = this.grid.getSetting('add.addButtonContent');\n    }\n\n    onAdd(event) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      if (this.grid.getSetting('mode') === 'external') {\n        this.create.emit({\n          source: this.source\n        });\n      } else {\n        this.grid.createFormShown = true;\n      }\n    }\n\n  }\n\n  AddButtonComponent.ɵfac = function AddButtonComponent_Factory(t) {\n    return new (t || AddButtonComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  AddButtonComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: AddButtonComponent,\n    selectors: [[\"\", \"angular2-st-add-button\", \"\"]],\n    inputs: {\n      grid: \"grid\",\n      source: \"source\"\n    },\n    outputs: {\n      create: \"create\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    attrs: _c4,\n    decls: 1,\n    vars: 1,\n    consts: [[\"href\", \"#\", \"class\", \"angular2-smart-action angular2-smart-action-add-add\", 3, \"innerHTML\", \"click\", 4, \"ngIf\"], [\"href\", \"#\", 1, \"angular2-smart-action\", \"angular2-smart-action-add-add\", 3, \"innerHTML\", \"click\"]],\n    template: function AddButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, AddButtonComponent_a_0_Template, 1, 1, \"a\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.isActionAdd);\n      }\n    },\n    directives: [i2.NgIf],\n    encapsulation: 2\n  });\n  return AddButtonComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet FilterDefault = /*#__PURE__*/(() => {\n  class FilterDefault {\n    constructor() {\n      this.inputClass = '';\n      this.filter = new EventEmitter();\n      this.query = '';\n    }\n\n    onFilter(query) {\n      this.source.addFilter({\n        field: this.column.id,\n        search: query,\n        filter: this.column.getFilterFunction()\n      });\n    }\n\n  }\n\n  FilterDefault.ɵfac = function FilterDefault_Factory(t) {\n    return new (t || FilterDefault)();\n  };\n\n  FilterDefault.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: FilterDefault,\n    selectors: [[\"ng-component\"]],\n    inputs: {\n      column: \"column\",\n      source: \"source\",\n      inputClass: \"inputClass\"\n    },\n    outputs: {\n      filter: \"filter\"\n    },\n    decls: 0,\n    vars: 0,\n    template: function FilterDefault_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  return FilterDefault;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet CustomFilterComponent = /*#__PURE__*/(() => {\n  class CustomFilterComponent extends FilterDefault {\n    constructor(resolver) {\n      super();\n      this.resolver = resolver;\n    }\n\n    ngOnChanges(changes) {\n      if (this.column && !this.customComponent) {\n        const filter = this.column.filter;\n\n        if (!filter) {\n          return;\n        }\n\n        const componentFactory = this.resolver.resolveComponentFactory(filter.component);\n        this.customComponent = this.dynamicTarget.createComponent(componentFactory); // set @Inputs and @Outputs of custom component\n\n        this.customComponent.instance.query = this.query;\n        this.customComponent.instance.column = this.column;\n        this.customComponent.instance.source = this.source;\n        this.customComponent.instance.inputClass = this.inputClass;\n        this.customComponent.instance.filter.subscribe(event => {\n          this.onFilter(event);\n        });\n      }\n\n      if (this.customComponent) {\n        this.customComponent.instance.ngOnChanges(changes);\n      }\n    }\n\n    ngOnDestroy() {\n      if (this.customComponent) {\n        this.customComponent.destroy();\n      }\n    }\n\n  }\n\n  CustomFilterComponent.ɵfac = function CustomFilterComponent_Factory(t) {\n    return new (t || CustomFilterComponent)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver));\n  };\n\n  CustomFilterComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: CustomFilterComponent,\n    selectors: [[\"custom-table-filter\"]],\n    viewQuery: function CustomFilterComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c5, 7, ViewContainerRef);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dynamicTarget = _t.first);\n      }\n    },\n    inputs: {\n      query: \"query\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n    decls: 2,\n    vars: 0,\n    consts: [[\"dynamicTarget\", \"\"]],\n    template: function CustomFilterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, CustomFilterComponent_ng_template_0_Template, 0, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n      }\n    },\n    encapsulation: 2\n  });\n  return CustomFilterComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet DefaultFilter = /*#__PURE__*/(() => {\n  class DefaultFilter {\n    constructor() {\n      this.delay = 300;\n      this.filter = new EventEmitter();\n    }\n\n    ngOnDestroy() {\n      if (this.changesSubscription) {\n        this.changesSubscription.unsubscribe();\n      }\n\n      if (this.changesSubscription2) {\n        this.changesSubscription2.unsubscribe();\n      }\n    }\n\n    setFilter() {\n      this.filter.emit(this.query);\n    }\n\n  }\n\n  DefaultFilter.ɵfac = function DefaultFilter_Factory(t) {\n    return new (t || DefaultFilter)();\n  };\n\n  DefaultFilter.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: DefaultFilter,\n    selectors: [[\"ng-component\"]],\n    inputs: {\n      query: \"query\",\n      inputClass: \"inputClass\",\n      column: \"column\"\n    },\n    outputs: {\n      filter: \"filter\"\n    },\n    decls: 0,\n    vars: 0,\n    template: function DefaultFilter_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  return DefaultFilter;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet SelectFilterComponent = /*#__PURE__*/(() => {\n  class SelectFilterComponent extends DefaultFilter {\n    constructor() {\n      super();\n    }\n\n    ngOnInit() {\n      const exist = this.inputControl.valueChanges;\n\n      if (!exist) {\n        return;\n      }\n\n      exist.pipe(skip(1), distinctUntilChanged(), debounceTime(this.delay)).subscribe(value => this.setFilter());\n    }\n\n  }\n\n  SelectFilterComponent.ɵfac = function SelectFilterComponent_Factory(t) {\n    return new (t || SelectFilterComponent)();\n  };\n\n  SelectFilterComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: SelectFilterComponent,\n    selectors: [[\"select-filter\"]],\n    viewQuery: function SelectFilterComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c6, 7, NgControl);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputControl = _t.first);\n      }\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 5,\n    vars: 4,\n    consts: [[1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"ngModelChange\"], [\"inputControl\", \"\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n    template: function SelectFilterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"select\", 0, 1);\n        i0.ɵɵlistener(\"ngModelChange\", function SelectFilterComponent_Template_select_ngModelChange_0_listener($event) {\n          return ctx.query = $event;\n        });\n        i0.ɵɵelementStart(2, \"option\", 2);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, SelectFilterComponent_option_4_Template, 2, 2, \"option\", 3);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.query);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.column.getFilterConfig().selectText);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.column.getFilterConfig().list);\n      }\n    },\n    directives: [i1.SelectControlValueAccessor, i2.NgClass, i1.NgControlStatus, i1.NgModel, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i2.NgForOf],\n    encapsulation: 2\n  });\n  return SelectFilterComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet CheckboxFilterComponent = /*#__PURE__*/(() => {\n  class CheckboxFilterComponent extends DefaultFilter {\n    constructor() {\n      super();\n      this.filterActive = false;\n      this.inputControl = new FormControl();\n    }\n\n    ngOnInit() {\n      this.changesSubscription = this.inputControl.valueChanges.pipe(debounceTime(this.delay)).subscribe(checked => {\n        this.filterActive = true;\n        const trueVal = this.column.getFilterConfig() && this.column.getFilterConfig().true || true;\n        const falseVal = this.column.getFilterConfig() && this.column.getFilterConfig().false || false;\n        this.query = checked ? trueVal : falseVal;\n        this.setFilter();\n      });\n    }\n\n    resetFilter(event) {\n      event.preventDefault();\n      this.query = '';\n      this.inputControl.setValue(false, {\n        emitEvent: false\n      });\n      this.filterActive = false;\n      this.setFilter();\n    }\n\n  }\n\n  CheckboxFilterComponent.ɵfac = function CheckboxFilterComponent_Factory(t) {\n    return new (t || CheckboxFilterComponent)();\n  };\n\n  CheckboxFilterComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: CheckboxFilterComponent,\n    selectors: [[\"checkbox-filter\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 3,\n    consts: [[\"type\", \"checkbox\", 1, \"form-control\", 3, \"formControl\", \"ngClass\"], [\"href\", \"#\", 3, \"click\", 4, \"ngIf\"], [\"href\", \"#\", 3, \"click\"]],\n    template: function CheckboxFilterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"input\", 0);\n        i0.ɵɵtemplate(1, CheckboxFilterComponent_a_1_Template, 2, 1, \"a\", 1);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formControl\", ctx.inputControl)(\"ngClass\", ctx.inputClass);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.filterActive);\n      }\n    },\n    directives: [i1.CheckboxControlValueAccessor, i1.NgControlStatus, i1.FormControlDirective, i2.NgClass, i2.NgIf],\n    encapsulation: 2\n  });\n  return CheckboxFilterComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet CompleterFilterComponent = /*#__PURE__*/(() => {\n  class CompleterFilterComponent extends DefaultFilter {\n    constructor(completerService) {\n      super();\n      this.completerService = completerService;\n      this.completerContent = new Subject();\n    }\n\n    ngOnInit() {\n      const config = this.column.getFilterConfig().completer;\n      config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\n      config.dataService.descriptionField(config.descriptionField);\n      this.changesSubscription = this.completerContent.pipe(map(ev => ev && ev.title || ev || ''), distinctUntilChanged(), debounceTime(this.delay)).subscribe(search => {\n        this.query = search;\n        this.setFilter();\n      });\n    }\n\n    inputTextChanged(event) {\n      // workaround to trigger the search event when the home/end buttons are clicked\n      // when this happens the [(ngModel)]=\"query\" is set to \"\" but the (selected) method is not called\n      // so here it gets called manually\n      if (event === '') {\n        this.completerContent.next(event);\n      }\n    }\n\n  }\n\n  CompleterFilterComponent.ɵfac = function CompleterFilterComponent_Factory(t) {\n    return new (t || CompleterFilterComponent)(i0.ɵɵdirectiveInject(i1$1.CompleterService));\n  };\n\n  CompleterFilterComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: CompleterFilterComponent,\n    selectors: [[\"completer-filter\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 5,\n    consts: [[3, \"ngModel\", \"dataService\", \"minSearchLength\", \"pause\", \"placeholder\", \"ngModelChange\", \"selected\"]],\n    template: function CompleterFilterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ng2-completer\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function CompleterFilterComponent_Template_ng2_completer_ngModelChange_0_listener($event) {\n          return ctx.query = $event;\n        })(\"ngModelChange\", function CompleterFilterComponent_Template_ng2_completer_ngModelChange_0_listener($event) {\n          return ctx.inputTextChanged($event);\n        })(\"selected\", function CompleterFilterComponent_Template_ng2_completer_selected_0_listener($event) {\n          return ctx.completerContent.next($event);\n        });\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.query)(\"dataService\", ctx.column.getFilterConfig().completer.dataService)(\"minSearchLength\", ctx.column.getFilterConfig().completer.minSearchLength || 0)(\"pause\", ctx.column.getFilterConfig().completer.pause || 0)(\"placeholder\", ctx.column.getFilterConfig().completer.placeholder || \"Start typing...\");\n      }\n    },\n    directives: [i1$1.CompleterCmp, i1.NgControlStatus, i1.NgModel],\n    encapsulation: 2\n  });\n  return CompleterFilterComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet DateFilterComponent = /*#__PURE__*/(() => {\n  class DateFilterComponent extends DefaultFilter {\n    constructor() {\n      super();\n      this.startDate = new FormControl();\n      this.endDate = new FormControl();\n      this.dateBefore = new FormControl();\n      this.dateAfter = new FormControl();\n      this.dateEqual = new FormControl();\n      this.filterTypeSelect = new FormControl();\n      this.filterType = 'after';\n      this.filterOptions = ['before', 'after', 'equal', 'between'];\n    }\n\n    ngOnInit() {\n      this.changesSubscription2 = this.filterTypeSelect.valueChanges.subscribe(value => {\n        this.filterType = value;\n\n        if (this.changesSubscription) {\n          this.changesSubscription.unsubscribe();\n        }\n\n        this.changesSubscription = this.getFilterType().subscribe(value => {\n          this.query = value;\n          this.setFilter();\n        });\n      });\n    }\n\n    getFilterType() {\n      switch (this.filterType) {\n        case 'before':\n          {\n            return this.dateBefore.valueChanges.pipe(map(value => '_date_before_' + value));\n          }\n\n        case 'after':\n          {\n            return this.dateAfter.valueChanges.pipe(map(value => '_date_after_' + value));\n          }\n\n        case 'equal':\n          {\n            return this.dateEqual.valueChanges.pipe(map(value => '_date_equal_' + value));\n          }\n\n        case 'between':\n          {\n            return combineLatest([this.startDate.valueChanges, this.endDate.valueChanges]).pipe(map(([val1, val2]) => {\n              return '_start_date_' + val1 + '_end_date_' + val2;\n            }));\n          }\n\n        default:\n          return of('');\n      }\n    }\n\n  }\n\n  DateFilterComponent.ɵfac = function DateFilterComponent_Factory(t) {\n    return new (t || DateFilterComponent)();\n  };\n\n  DateFilterComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: DateFilterComponent,\n    selectors: [[\"date-filter\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 8,\n    vars: 8,\n    consts: [[3, \"formControl\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngSwitch\"], [\"type\", \"date\", \"class\", \"form-control\", 3, \"formControl\", \"ngClass\", 4, \"ngSwitchCase\"], [3, \"value\"], [\"type\", \"date\", 1, \"form-control\", 3, \"formControl\", \"ngClass\"]],\n    template: function DateFilterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"select\", 0);\n        i0.ɵɵtemplate(1, DateFilterComponent_option_1_Template, 2, 2, \"option\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵtemplate(3, DateFilterComponent_input_3_Template, 1, 2, \"input\", 3);\n        i0.ɵɵtemplate(4, DateFilterComponent_input_4_Template, 1, 2, \"input\", 3);\n        i0.ɵɵtemplate(5, DateFilterComponent_input_5_Template, 1, 2, \"input\", 3);\n        i0.ɵɵtemplate(6, DateFilterComponent_input_6_Template, 1, 2, \"input\", 3);\n        i0.ɵɵtemplate(7, DateFilterComponent_input_7_Template, 1, 2, \"input\", 3);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formControl\", ctx.filterTypeSelect);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.filterOptions);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitch\", ctx.filterType);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"before\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"after\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"equal\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"between\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"between\");\n      }\n    },\n    directives: [i1.SelectControlValueAccessor, i1.NgControlStatus, i1.FormControlDirective, i2.NgForOf, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i2.NgSwitch, i2.NgSwitchCase, i1.DefaultValueAccessor, i2.NgClass],\n    encapsulation: 2\n  });\n  return DateFilterComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet MselectFilterComponent = /*#__PURE__*/(() => {\n  class MselectFilterComponent extends DefaultFilter {\n    constructor(http) {\n      super();\n      this.http = http;\n      this.selector = \"*;*\";\n      this.dropdownList = [];\n      this.selectedItems = [];\n      this.dropdownSettings = {};\n    }\n\n    ngOnInit() {\n      this.column.filterFunction = this.onfilterValues.bind(this);\n      const config = this.column.getFilterConfig();\n      this.dropdownList = config.dropdownList || [];\n      this.selectedItems = config.selectedItems || [];\n      let setting = {\n        singleSelection: false,\n        text: \"Select\",\n        selectAllText: \"Select All\",\n        unSelectAllText: 'UnSelect All',\n        enableSearchFilter: true,\n        classes: \"myclass\",\n        maxHeight: 200,\n        position: 'top',\n        autoPosition: true\n      };\n      this.dropdownSettings = Object.assign(setting, config.dropdownSettings);\n    }\n\n    onfilterValues(cellValue, search, data, cellName) {\n      if (search.indexOf(this.selector) != -1) {\n        let searchArray = search.split(this.selector);\n        return searchArray.indexOf(cellValue) != -1;\n      }\n\n      return defaultStringInclusionFilter(cellValue, search, data, cellName);\n    }\n\n    onItemSelect(item) {\n      this.updateQuery();\n    }\n\n    OnItemDeSelect(item) {\n      this.updateQuery();\n    }\n\n    onSelectAll(items) {\n      this.updateQuery();\n    }\n\n    onDeSelectAll(items) {\n      this.updateQuery();\n    }\n\n    updateQuery() {\n      this.query = this.selectedItems.map(item => item.id).join(this.selector); //.replace(/ /g, '')\n\n      this.setFilter();\n    }\n\n  }\n\n  MselectFilterComponent.ɵfac = function MselectFilterComponent_Factory(t) {\n    return new (t || MselectFilterComponent)(i0.ɵɵdirectiveInject(i1$2.HttpClient));\n  };\n\n  MselectFilterComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MselectFilterComponent,\n    selectors: [[\"mselect-filter\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 3,\n    consts: [[3, \"data\", \"ngModel\", \"settings\", \"ngModelChange\", \"onSelect\", \"onDeSelect\", \"onSelectAll\", \"onDeSelectAll\"]],\n    template: function MselectFilterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"angular2-multiselect\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function MselectFilterComponent_Template_angular2_multiselect_ngModelChange_0_listener($event) {\n          return ctx.selectedItems = $event;\n        })(\"onSelect\", function MselectFilterComponent_Template_angular2_multiselect_onSelect_0_listener($event) {\n          return ctx.onItemSelect($event);\n        })(\"onDeSelect\", function MselectFilterComponent_Template_angular2_multiselect_onDeSelect_0_listener($event) {\n          return ctx.OnItemDeSelect($event);\n        })(\"onSelectAll\", function MselectFilterComponent_Template_angular2_multiselect_onSelectAll_0_listener($event) {\n          return ctx.onSelectAll($event);\n        })(\"onDeSelectAll\", function MselectFilterComponent_Template_angular2_multiselect_onDeSelectAll_0_listener($event) {\n          return ctx.onDeSelectAll($event);\n        });\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"data\", ctx.dropdownList)(\"ngModel\", ctx.selectedItems)(\"settings\", ctx.dropdownSettings);\n      }\n    },\n    directives: [i2$1.AngularMultiSelect, i1.NgControlStatus, i1.NgModel],\n    encapsulation: 2\n  });\n  return MselectFilterComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet InputFilterComponent = /*#__PURE__*/(() => {\n  class InputFilterComponent extends DefaultFilter {\n    constructor() {\n      super();\n      this.inputControl = new FormControl();\n    }\n\n    ngOnInit() {\n      if (this.query) {\n        this.inputControl.setValue(this.query);\n      }\n\n      this.inputControl.valueChanges.pipe(distinctUntilChanged(), debounceTime(this.delay)).subscribe(value => {\n        this.query = this.inputControl.value;\n        this.setFilter();\n      });\n    }\n\n    ngOnChanges(changes) {\n      if (changes.query) {\n        this.inputControl.setValue(this.query);\n      }\n    }\n\n  }\n\n  InputFilterComponent.ɵfac = function InputFilterComponent_Factory(t) {\n    return new (t || InputFilterComponent)();\n  };\n\n  InputFilterComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: InputFilterComponent,\n    selectors: [[\"input-filter\"]],\n    features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n    decls: 1,\n    vars: 3,\n    consts: [[\"type\", \"text\", 1, \"form-control\", 3, \"ngClass\", \"formControl\", \"placeholder\"]],\n    template: function InputFilterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"input\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.column.placeholder || ctx.column.title);\n        i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"formControl\", ctx.inputControl);\n      }\n    },\n    directives: [i1.DefaultValueAccessor, i2.NgClass, i1.NgControlStatus, i1.FormControlDirective],\n    encapsulation: 2\n  });\n  return InputFilterComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet DefaultFilterComponent = /*#__PURE__*/(() => {\n  class DefaultFilterComponent extends FilterDefault {}\n\n  DefaultFilterComponent.ɵfac = /* @__PURE__ */function () {\n    let ɵDefaultFilterComponent_BaseFactory;\n    return function DefaultFilterComponent_Factory(t) {\n      return (ɵDefaultFilterComponent_BaseFactory || (ɵDefaultFilterComponent_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultFilterComponent)))(t || DefaultFilterComponent);\n    };\n  }();\n\n  DefaultFilterComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: DefaultFilterComponent,\n    selectors: [[\"default-table-filter\"]],\n    inputs: {\n      query: \"query\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 7,\n    vars: 6,\n    consts: [[3, \"ngSwitch\"], [3, \"query\", \"ngClass\", \"column\", \"filter\", 4, \"ngSwitchCase\"], [3, \"query\", \"ngClass\", \"column\", \"filter\", 4, \"ngSwitchDefault\"], [3, \"query\", \"ngClass\", \"column\", \"filter\"]],\n    template: function DefaultFilterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementContainerStart(0, 0);\n        i0.ɵɵtemplate(1, DefaultFilterComponent_select_filter_1_Template, 1, 3, \"select-filter\", 1);\n        i0.ɵɵtemplate(2, DefaultFilterComponent_checkbox_filter_2_Template, 1, 3, \"checkbox-filter\", 1);\n        i0.ɵɵtemplate(3, DefaultFilterComponent_completer_filter_3_Template, 1, 3, \"completer-filter\", 1);\n        i0.ɵɵtemplate(4, DefaultFilterComponent_date_filter_4_Template, 1, 3, \"date-filter\", 1);\n        i0.ɵɵtemplate(5, DefaultFilterComponent_mselect_filter_5_Template, 1, 3, \"mselect-filter\", 1);\n        i0.ɵɵtemplate(6, DefaultFilterComponent_input_filter_6_Template, 1, 3, \"input-filter\", 2);\n        i0.ɵɵelementContainerEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngSwitch\", ctx.column.getFilterType());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"list\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"checkbox\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"completer\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"date\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"multiple\");\n      }\n    },\n    directives: [SelectFilterComponent, CheckboxFilterComponent, CompleterFilterComponent, DateFilterComponent, MselectFilterComponent, InputFilterComponent, i2.NgSwitch, i2.NgSwitchCase, i2.NgClass, i2.NgSwitchDefault],\n    encapsulation: 2\n  });\n  return DefaultFilterComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet FilterComponent = /*#__PURE__*/(() => {\n  class FilterComponent extends FilterDefault {\n    constructor() {\n      super(...arguments);\n      this.query = '';\n    }\n\n    ngOnChanges(changes) {\n      if (changes.source) {\n        if (!changes.source.firstChange) {\n          this.dataChangedSub.unsubscribe();\n        }\n\n        this.dataChangedSub = this.source.onChanged().subscribe(dataChanges => {\n          const filterConf = this.source.getFilter();\n\n          if (filterConf && filterConf.filters && filterConf.filters.length === 0) {\n            this.query = ''; // add a check for existing filters an set the query if one exists for this column\n            // this covers instances where the filter is set by user code while maintaining existing functionality\n          } else if (filterConf && filterConf.filters && filterConf.filters.length > 0) {\n            filterConf.filters.forEach((k, v) => {\n              if (k.field == this.column.id) {\n                this.query = k.search;\n              }\n            });\n          }\n        });\n      }\n    }\n\n  }\n\n  FilterComponent.ɵfac = /* @__PURE__ */function () {\n    let ɵFilterComponent_BaseFactory;\n    return function FilterComponent_Factory(t) {\n      return (ɵFilterComponent_BaseFactory || (ɵFilterComponent_BaseFactory = i0.ɵɵgetInheritedFactory(FilterComponent)))(t || FilterComponent);\n    };\n  }();\n\n  FilterComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: FilterComponent,\n    selectors: [[\"angular2-smart-table-filter\"]],\n    features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"angular2-smart-filter\", 3, \"ngSwitch\", 4, \"ngIf\"], [1, \"angular2-smart-filter\", 3, \"ngSwitch\"], [3, \"query\", \"column\", \"source\", \"inputClass\", \"filter\", 4, \"ngSwitchCase\"], [3, \"query\", \"column\", \"source\", \"inputClass\", \"filter\", 4, \"ngSwitchDefault\"], [3, \"query\", \"column\", \"source\", \"inputClass\", \"filter\"]],\n    template: function FilterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, FilterComponent_div_0_Template, 3, 2, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.column.isFilterable);\n      }\n    },\n    directives: [CustomFilterComponent, DefaultFilterComponent, i2.NgIf, i2.NgSwitch, i2.NgSwitchCase, i2.NgSwitchDefault],\n    styles: [\"[_nghost-%COMP%]   .angular2-smart-filter[_ngcontent-%COMP%]     input, [_nghost-%COMP%]   .angular2-smart-filter[_ngcontent-%COMP%]     select{width:100%;line-height:normal;padding:.375em .75em;font-weight:400}[_nghost-%COMP%]   .angular2-smart-filter[_ngcontent-%COMP%]     input[type=search]{box-sizing:inherit}[_nghost-%COMP%]   .angular2-smart-filter[_ngcontent-%COMP%]     .completer-dropdown-holder{font-weight:400}[_nghost-%COMP%]   .angular2-smart-filter[_ngcontent-%COMP%]     a{font-weight:400}\"]\n  });\n  return FilterComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet TheadFitlersRowComponent = /*#__PURE__*/(() => {\n  class TheadFitlersRowComponent {\n    constructor() {\n      this.create = new EventEmitter();\n      this.filter = new EventEmitter();\n    }\n\n    ngOnChanges() {\n      this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n      this.showActionColumnLeft = this.grid.showActionColumn('left');\n      this.showActionColumnRight = this.grid.showActionColumn('right');\n      this.filterInputClass = this.grid.getSetting('filter.inputClass');\n    }\n\n    getVisibleColumns(columns) {\n      return (columns || []).filter(column => !column.hide);\n    }\n\n  }\n\n  TheadFitlersRowComponent.ɵfac = function TheadFitlersRowComponent_Factory(t) {\n    return new (t || TheadFitlersRowComponent)();\n  };\n\n  TheadFitlersRowComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TheadFitlersRowComponent,\n    selectors: [[\"\", \"angular2-st-thead-filters-row\", \"\"]],\n    inputs: {\n      grid: \"grid\",\n      source: \"source\"\n    },\n    outputs: {\n      create: \"create\",\n      filter: \"filter\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    attrs: _c7,\n    decls: 4,\n    vars: 4,\n    consts: [[4, \"ngIf\"], [\"angular2-st-add-button\", \"\", 3, \"grid\", \"create\", 4, \"ngIf\"], [3, \"class\", 4, \"ngFor\", \"ngForOf\"], [\"angular2-st-add-button\", \"\", 3, \"grid\", \"source\", \"create\", 4, \"ngIf\"], [\"angular2-st-add-button\", \"\", 3, \"grid\", \"create\"], [3, \"source\", \"column\", \"inputClass\", \"filter\"], [\"angular2-st-add-button\", \"\", 3, \"grid\", \"source\", \"create\"]],\n    template: function TheadFitlersRowComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, TheadFitlersRowComponent_th_0_Template, 1, 0, \"th\", 0);\n        i0.ɵɵtemplate(1, TheadFitlersRowComponent_th_1_Template, 1, 1, \"th\", 1);\n        i0.ɵɵtemplate(2, TheadFitlersRowComponent_th_2_Template, 2, 6, \"th\", 2);\n        i0.ɵɵtemplate(3, TheadFitlersRowComponent_th_3_Template, 1, 2, \"th\", 3);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.isMultiSelectVisible);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnLeft);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.getVisibleColumns(ctx.grid.getColumns()));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnRight);\n      }\n    },\n    directives: [AddButtonComponent, FilterComponent, i2.NgIf, i2.NgForOf],\n    encapsulation: 2\n  });\n  return TheadFitlersRowComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ActionsComponent = /*#__PURE__*/(() => {\n  class ActionsComponent {\n    constructor() {\n      this.create = new EventEmitter();\n    }\n\n    ngOnChanges() {\n      this.createButtonContent = this.grid.getSetting('add.createButtonContent');\n      this.cancelButtonContent = this.grid.getSetting('add.cancelButtonContent');\n    }\n\n  }\n\n  ActionsComponent.ɵfac = function ActionsComponent_Factory(t) {\n    return new (t || ActionsComponent)();\n  };\n\n  ActionsComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ActionsComponent,\n    selectors: [[\"angular2-st-actions\"]],\n    inputs: {\n      grid: \"grid\"\n    },\n    outputs: {\n      create: \"create\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 2,\n    vars: 2,\n    consts: [[\"href\", \"#\", 1, \"angular2-smart-action\", \"angular2-smart-action-add-create\", 3, \"innerHTML\", \"click\"], [\"href\", \"#\", 1, \"angular2-smart-action\", \"angular2-smart-action-add-cancel\", 3, \"innerHTML\", \"click\"]],\n    template: function ActionsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"a\", 0);\n        i0.ɵɵlistener(\"click\", function ActionsComponent_Template_a_click_0_listener($event) {\n          $event.preventDefault();\n          return ctx.create.emit($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(1, \"a\", 1);\n        i0.ɵɵlistener(\"click\", function ActionsComponent_Template_a_click_1_listener($event) {\n          $event.preventDefault();\n          return ctx.grid.createFormShown = false;\n        });\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"innerHTML\", ctx.createButtonContent, i0.ɵɵsanitizeHtml);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"innerHTML\", ctx.cancelButtonContent, i0.ɵɵsanitizeHtml);\n      }\n    },\n    encapsulation: 2\n  });\n  return ActionsComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet CustomViewComponent = /*#__PURE__*/(() => {\n  class CustomViewComponent {\n    constructor(resolver) {\n      this.resolver = resolver;\n    }\n\n    ngOnInit() {\n      if (this.cell && !this.customComponent) {\n        this.createCustomComponent();\n        this.callOnComponentInit();\n        this.patchInstance();\n      }\n    }\n\n    ngOnDestroy() {\n      if (this.customComponent) {\n        this.customComponent.destroy();\n      }\n    }\n\n    createCustomComponent() {\n      const componentFactory = this.resolver.resolveComponentFactory(this.cell.getColumn().renderComponent);\n      this.customComponent = this.dynamicTarget.createComponent(componentFactory);\n    }\n\n    callOnComponentInit() {\n      const onComponentInitFunction = this.cell.getColumn().getOnComponentInitFunction();\n      onComponentInitFunction && onComponentInitFunction(this.customComponent.instance, this.getPatch());\n    }\n\n    patchInstance() {\n      Object.assign(this.customComponent.instance, this.getPatch());\n    }\n\n    getPatch() {\n      return {\n        value: this.cell.getValue(),\n        rowData: this.cell.getRow().getData()\n      };\n    }\n\n  }\n\n  CustomViewComponent.ɵfac = function CustomViewComponent_Factory(t) {\n    return new (t || CustomViewComponent)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver));\n  };\n\n  CustomViewComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: CustomViewComponent,\n    selectors: [[\"custom-view-component\"]],\n    viewQuery: function CustomViewComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c5, 7, ViewContainerRef);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dynamicTarget = _t.first);\n      }\n    },\n    inputs: {\n      cell: \"cell\"\n    },\n    decls: 2,\n    vars: 0,\n    consts: [[\"dynamicTarget\", \"\"]],\n    template: function CustomViewComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, CustomViewComponent_ng_template_0_Template, 0, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n      }\n    },\n    encapsulation: 2\n  });\n  return CustomViewComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ViewCellComponent = /*#__PURE__*/(() => {\n  class ViewCellComponent {}\n\n  ViewCellComponent.ɵfac = function ViewCellComponent_Factory(t) {\n    return new (t || ViewCellComponent)();\n  };\n\n  ViewCellComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ViewCellComponent,\n    selectors: [[\"table-cell-view-mode\"]],\n    inputs: {\n      cell: \"cell\"\n    },\n    decls: 4,\n    vars: 3,\n    consts: [[3, \"ngSwitch\"], [3, \"cell\", 4, \"ngSwitchCase\"], [3, \"innerHTML\", 4, \"ngSwitchCase\"], [4, \"ngSwitchDefault\"], [3, \"cell\"], [3, \"innerHTML\"]],\n    template: function ViewCellComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, ViewCellComponent_custom_view_component_1_Template, 1, 1, \"custom-view-component\", 1);\n        i0.ɵɵtemplate(2, ViewCellComponent_div_2_Template, 1, 1, \"div\", 2);\n        i0.ɵɵtemplate(3, ViewCellComponent_div_3_Template, 2, 1, \"div\", 3);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngSwitch\", ctx.cell.getColumn().type);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"custom\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"html\");\n      }\n    },\n    directives: [CustomViewComponent, i2.NgSwitch, i2.NgSwitchCase, i2.NgSwitchDefault],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return ViewCellComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet EditCellDefault = /*#__PURE__*/(() => {\n  class EditCellDefault {\n    constructor() {\n      this.inputClass = '';\n      this.edited = new EventEmitter();\n    }\n\n    onEdited(event) {\n      this.edited.next(event);\n      return false;\n    }\n\n    onStopEditing() {\n      this.cell.getRow().isInEditing = false;\n      return false;\n    }\n\n    onClick(event) {\n      event.stopPropagation();\n    }\n\n  }\n\n  EditCellDefault.ɵfac = function EditCellDefault_Factory(t) {\n    return new (t || EditCellDefault)();\n  };\n\n  EditCellDefault.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: EditCellDefault,\n    selectors: [[\"ng-component\"]],\n    inputs: {\n      cell: \"cell\",\n      inputClass: \"inputClass\"\n    },\n    outputs: {\n      edited: \"edited\"\n    },\n    decls: 0,\n    vars: 0,\n    template: function EditCellDefault_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  return EditCellDefault;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet CustomEditComponent = /*#__PURE__*/(() => {\n  class CustomEditComponent extends EditCellDefault {\n    constructor(resolver) {\n      super();\n      this.resolver = resolver;\n    }\n\n    ngOnChanges(changes) {\n      if (this.cell && !this.customComponent) {\n        const editor = this.cell.getColumn().editor;\n        if (!editor) return;\n        const componentFactory = this.resolver.resolveComponentFactory(editor.component);\n        this.customComponent = this.dynamicTarget.createComponent(componentFactory); // set @Inputs and @Outputs of custom component\n\n        this.customComponent.instance.cell = this.cell;\n        this.customComponent.instance.inputClass = this.inputClass;\n        this.customComponent.instance.onStopEditing.subscribe(() => this.onStopEditing());\n        this.customComponent.instance.onEdited.subscribe(event => this.onEdited(event));\n        this.customComponent.instance.onClick.subscribe(event => this.onClick(event));\n      }\n    }\n\n    ngOnDestroy() {\n      if (this.customComponent) {\n        this.customComponent.destroy();\n      }\n    }\n\n  }\n\n  CustomEditComponent.ɵfac = function CustomEditComponent_Factory(t) {\n    return new (t || CustomEditComponent)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver));\n  };\n\n  CustomEditComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: CustomEditComponent,\n    selectors: [[\"table-cell-custom-editor\"]],\n    viewQuery: function CustomEditComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c5, 7, ViewContainerRef);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dynamicTarget = _t.first);\n      }\n    },\n    features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n    decls: 2,\n    vars: 0,\n    consts: [[\"dynamicTarget\", \"\"]],\n    template: function CustomEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, CustomEditComponent_ng_template_0_Template, 0, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n      }\n    },\n    encapsulation: 2\n  });\n  return CustomEditComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet DefaultEditor = /*#__PURE__*/(() => {\n  class DefaultEditor {\n    constructor() {\n      this.onStopEditing = new EventEmitter();\n      this.onEdited = new EventEmitter();\n      this.onClick = new EventEmitter();\n    }\n\n    get disableEnterKeySave() {\n      return this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().disableEnterKeySave;\n    }\n\n  }\n\n  DefaultEditor.ɵfac = function DefaultEditor_Factory(t) {\n    return new (t || DefaultEditor)();\n  };\n\n  DefaultEditor.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: DefaultEditor,\n    selectors: [[\"ng-component\"]],\n    inputs: {\n      cell: \"cell\",\n      inputClass: \"inputClass\"\n    },\n    outputs: {\n      onStopEditing: \"onStopEditing\",\n      onEdited: \"onEdited\",\n      onClick: \"onClick\"\n    },\n    decls: 0,\n    vars: 0,\n    template: function DefaultEditor_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  return DefaultEditor;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet SelectEditorComponent = /*#__PURE__*/(() => {\n  class SelectEditorComponent extends DefaultEditor {\n    constructor() {\n      super();\n    }\n\n  }\n\n  SelectEditorComponent.ɵfac = function SelectEditorComponent_Factory(t) {\n    return new (t || SelectEditorComponent)();\n  };\n\n  SelectEditorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: SelectEditorComponent,\n    selectors: [[\"select-editor\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 6,\n    consts: [[1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"name\", \"disabled\", \"multiple\", \"ngModelChange\", \"click\"], [3, \"value\", \"selected\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\", \"selected\"]],\n    template: function SelectEditorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"select\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function SelectEditorComponent_Template_select_ngModelChange_0_listener($event) {\n          return ctx.cell.newValue = $event;\n        })(\"click\", function SelectEditorComponent_Template_select_click_0_listener($event) {\n          return ctx.onClick.emit($event);\n        });\n        i0.ɵɵtext(1, \" (keydown.enter)=\\\"disableEnterKeySave || onEdited.emit($event)\\\" (keydown.esc)=\\\"onStopEditing.emit()\\\"> \");\n        i0.ɵɵtemplate(2, SelectEditorComponent_option_2_Template, 2, 3, \"option\", 1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        let tmp_4_0;\n        let tmp_5_0;\n        i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.cell.newValue)(\"name\", ctx.cell.getId())(\"disabled\", !ctx.cell.isEditable())(\"multiple\", (tmp_4_0 = ctx.cell.getColumn().getConfig()) == null ? null : tmp_4_0.multiple);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", (tmp_5_0 = ctx.cell.getColumn().getConfig()) == null ? null : tmp_5_0.list);\n      }\n    },\n    directives: [i1.SelectMultipleControlValueAccessor, i2.NgClass, i1.NgControlStatus, i1.NgModel, i2.NgForOf, i1.NgSelectOption, i1.ɵNgSelectMultipleOption],\n    encapsulation: 2\n  });\n  return SelectEditorComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet TextareaEditorComponent = /*#__PURE__*/(() => {\n  class TextareaEditorComponent extends DefaultEditor {\n    constructor() {\n      super();\n    }\n\n  }\n\n  TextareaEditorComponent.ɵfac = function TextareaEditorComponent_Factory(t) {\n    return new (t || TextareaEditorComponent)();\n  };\n\n  TextareaEditorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TextareaEditorComponent,\n    selectors: [[\"textarea-editor\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 5,\n    consts: [[1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"name\", \"disabled\", \"placeholder\", \"ngModelChange\", \"click\", \"keydown.enter\", \"keydown.esc\"]],\n    template: function TextareaEditorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"textarea\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function TextareaEditorComponent_Template_textarea_ngModelChange_0_listener($event) {\n          return ctx.cell.newValue = $event;\n        })(\"click\", function TextareaEditorComponent_Template_textarea_click_0_listener($event) {\n          return ctx.onClick.emit($event);\n        })(\"keydown.enter\", function TextareaEditorComponent_Template_textarea_keydown_enter_0_listener($event) {\n          return ctx.disableEnterKeySave || ctx.onEdited.emit($event);\n        })(\"keydown.esc\", function TextareaEditorComponent_Template_textarea_keydown_esc_0_listener() {\n          return ctx.onStopEditing.emit();\n        });\n        i0.ɵɵtext(1, \"    \");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.cell.newValue)(\"name\", ctx.cell.getId())(\"disabled\", !ctx.cell.isEditable())(\"placeholder\", ctx.cell.getTitle());\n      }\n    },\n    directives: [i1.DefaultValueAccessor, i2.NgClass, i1.NgControlStatus, i1.NgModel],\n    styles: [\"[_nghost-%COMP%]   input[_ngcontent-%COMP%], [_nghost-%COMP%]   textarea[_ngcontent-%COMP%]{width:100%;line-height:normal;padding:.375em .75em}\"]\n  });\n  return TextareaEditorComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet CheckboxEditorComponent = /*#__PURE__*/(() => {\n  class CheckboxEditorComponent extends DefaultEditor {\n    constructor() {\n      super();\n    }\n\n    onChange(event) {\n      const trueVal = this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().true || true;\n      const falseVal = this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().false || false;\n      this.cell.newValue = event.target.checked ? trueVal : falseVal;\n    }\n\n  }\n\n  CheckboxEditorComponent.ɵfac = function CheckboxEditorComponent_Factory(t) {\n    return new (t || CheckboxEditorComponent)();\n  };\n\n  CheckboxEditorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: CheckboxEditorComponent,\n    selectors: [[\"checkbox-editor\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 4,\n    consts: [[\"type\", \"checkbox\", 1, \"form-control\", 3, \"ngClass\", \"name\", \"disabled\", \"checked\", \"click\", \"change\"]],\n    template: function CheckboxEditorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"input\", 0);\n        i0.ɵɵlistener(\"click\", function CheckboxEditorComponent_Template_input_click_0_listener($event) {\n          return ctx.onClick.emit($event);\n        })(\"change\", function CheckboxEditorComponent_Template_input_change_0_listener($event) {\n          return ctx.onChange($event);\n        });\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        let tmp_3_0;\n        i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"name\", ctx.cell.getId())(\"disabled\", !ctx.cell.isEditable())(\"checked\", ctx.cell.getValue() == (((tmp_3_0 = ctx.cell.getColumn().getConfig()) == null ? null : tmp_3_0.true) || true));\n      }\n    },\n    directives: [i2.NgClass],\n    styles: [_c8]\n  });\n  return CheckboxEditorComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet CompleterEditorComponent = /*#__PURE__*/(() => {\n  class CompleterEditorComponent extends DefaultEditor {\n    constructor(completerService) {\n      super();\n      this.completerService = completerService;\n      this.completerStr = '';\n    }\n\n    ngOnInit() {\n      const editor = this.cell.getColumn().editor;\n\n      if (editor && editor.type === 'completer') {\n        const config = this.cell.getColumn().getConfig().completer;\n        config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\n        config.dataService.descriptionField(config.descriptionField);\n      }\n    }\n\n    onEditedCompleter(event) {\n      this.cell.newValue = event.title;\n      return false;\n    }\n\n  }\n\n  CompleterEditorComponent.ɵfac = function CompleterEditorComponent_Factory(t) {\n    return new (t || CompleterEditorComponent)(i0.ɵɵdirectiveInject(i1$1.CompleterService));\n  };\n\n  CompleterEditorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: CompleterEditorComponent,\n    selectors: [[\"completer-editor\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 5,\n    consts: [[3, \"ngModel\", \"dataService\", \"minSearchLength\", \"pause\", \"placeholder\", \"ngModelChange\", \"selected\"]],\n    template: function CompleterEditorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ng2-completer\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function CompleterEditorComponent_Template_ng2_completer_ngModelChange_0_listener($event) {\n          return ctx.completerStr = $event;\n        })(\"selected\", function CompleterEditorComponent_Template_ng2_completer_selected_0_listener($event) {\n          return ctx.onEditedCompleter($event);\n        });\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.completerStr)(\"dataService\", ctx.cell.getColumn().getConfig().completer.dataService)(\"minSearchLength\", ctx.cell.getColumn().getConfig().completer.minSearchLength || 0)(\"pause\", ctx.cell.getColumn().getConfig().completer.pause || 0)(\"placeholder\", ctx.cell.getColumn().getConfig().completer.placeholder || \"Start typing...\");\n      }\n    },\n    directives: [i1$1.CompleterCmp, i1.NgControlStatus, i1.NgModel],\n    encapsulation: 2\n  });\n  return CompleterEditorComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet InputEditorComponent = /*#__PURE__*/(() => {\n  class InputEditorComponent extends DefaultEditor {\n    constructor() {\n      super();\n    }\n\n  }\n\n  InputEditorComponent.ɵfac = function InputEditorComponent_Factory(t) {\n    return new (t || InputEditorComponent)();\n  };\n\n  InputEditorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: InputEditorComponent,\n    selectors: [[\"input-editor\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 5,\n    consts: [[1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"name\", \"placeholder\", \"disabled\", \"ngModelChange\", \"click\", \"keydown.enter\", \"keydown.esc\"]],\n    template: function InputEditorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function InputEditorComponent_Template_input_ngModelChange_0_listener($event) {\n          return ctx.cell.newValue = $event;\n        })(\"click\", function InputEditorComponent_Template_input_click_0_listener($event) {\n          return ctx.onClick.emit($event);\n        })(\"keydown.enter\", function InputEditorComponent_Template_input_keydown_enter_0_listener($event) {\n          return ctx.disableEnterKeySave || ctx.onEdited.emit($event);\n        })(\"keydown.esc\", function InputEditorComponent_Template_input_keydown_esc_0_listener() {\n          return ctx.onStopEditing.emit();\n        });\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", ctx.inputClass)(\"ngModel\", ctx.cell.newValue)(\"name\", ctx.cell.getId())(\"placeholder\", ctx.cell.getTitle())(\"disabled\", !ctx.cell.isEditable());\n      }\n    },\n    directives: [i1.DefaultValueAccessor, i2.NgClass, i1.NgControlStatus, i1.NgModel],\n    styles: [_c8]\n  });\n  return InputEditorComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet DefaultEditComponent = /*#__PURE__*/(() => {\n  class DefaultEditComponent extends EditCellDefault {\n    constructor() {\n      super();\n    }\n\n    getEditorType() {\n      const editor = this.cell.getColumn().editor;\n\n      if (!editor) {\n        return 'default';\n      }\n\n      return editor.type;\n    }\n\n  }\n\n  DefaultEditComponent.ɵfac = function DefaultEditComponent_Factory(t) {\n    return new (t || DefaultEditComponent)();\n  };\n\n  DefaultEditComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: DefaultEditComponent,\n    selectors: [[\"table-cell-default-editor\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 6,\n    vars: 5,\n    consts: [[3, \"ngSwitch\"], [3, \"cell\", \"inputClass\", \"onClick\", \"onEdited\", \"onStopEditing\", 4, \"ngSwitchCase\"], [3, \"cell\", \"inputClass\", \"onClick\", 4, \"ngSwitchCase\"], [3, \"cell\", 4, \"ngSwitchCase\"], [3, \"cell\", \"inputClass\", \"onClick\", \"onEdited\", \"onStopEditing\", 4, \"ngSwitchDefault\"], [3, \"cell\", \"inputClass\", \"onClick\", \"onEdited\", \"onStopEditing\"], [3, \"cell\", \"inputClass\", \"onClick\"], [3, \"cell\"]],\n    template: function DefaultEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, DefaultEditComponent_select_editor_1_Template, 1, 2, \"select-editor\", 1);\n        i0.ɵɵtemplate(2, DefaultEditComponent_textarea_editor_2_Template, 1, 2, \"textarea-editor\", 1);\n        i0.ɵɵtemplate(3, DefaultEditComponent_checkbox_editor_3_Template, 1, 2, \"checkbox-editor\", 2);\n        i0.ɵɵtemplate(4, DefaultEditComponent_completer_editor_4_Template, 1, 1, \"completer-editor\", 3);\n        i0.ɵɵtemplate(5, DefaultEditComponent_input_editor_5_Template, 1, 2, \"input-editor\", 4);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngSwitch\", ctx.getEditorType());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"list\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"textarea\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"checkbox\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"completer\");\n      }\n    },\n    directives: [SelectEditorComponent, TextareaEditorComponent, CheckboxEditorComponent, CompleterEditorComponent, InputEditorComponent, i2.NgSwitch, i2.NgSwitchCase, i2.NgSwitchDefault],\n    encapsulation: 2\n  });\n  return DefaultEditComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet EditCellComponent = /*#__PURE__*/(() => {\n  class EditCellComponent {\n    constructor() {\n      this.inputClass = '';\n      this.edited = new EventEmitter();\n    }\n\n    ngOnInit() {\n      this.cell.resetValue();\n    }\n\n    onEdited(event) {\n      this.edited.next(event);\n      return false;\n    }\n\n    getEditorType() {\n      const editor = this.cell.getColumn().editor;\n\n      if (!editor) {\n        return 'default';\n      }\n\n      return editor.type;\n    }\n\n  }\n\n  EditCellComponent.ɵfac = function EditCellComponent_Factory(t) {\n    return new (t || EditCellComponent)();\n  };\n\n  EditCellComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: EditCellComponent,\n    selectors: [[\"table-cell-edit-mode\"]],\n    inputs: {\n      cell: \"cell\",\n      inputClass: \"inputClass\"\n    },\n    outputs: {\n      edited: \"edited\"\n    },\n    decls: 3,\n    vars: 2,\n    consts: [[3, \"ngSwitch\"], [3, \"cell\", \"inputClass\", \"edited\", 4, \"ngSwitchCase\"], [3, \"cell\", \"inputClass\", \"edited\", 4, \"ngSwitchDefault\"], [3, \"cell\", \"inputClass\", \"edited\"]],\n    template: function EditCellComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, EditCellComponent_table_cell_custom_editor_1_Template, 1, 2, \"table-cell-custom-editor\", 1);\n        i0.ɵɵtemplate(2, EditCellComponent_table_cell_default_editor_2_Template, 1, 2, \"table-cell-default-editor\", 2);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngSwitch\", ctx.getEditorType());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"custom\");\n      }\n    },\n    directives: [CustomEditComponent, DefaultEditComponent, i2.NgSwitch, i2.NgSwitchCase, i2.NgSwitchDefault],\n    encapsulation: 2\n  });\n  return EditCellComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet CellComponent = /*#__PURE__*/(() => {\n  class CellComponent {\n    constructor() {\n      this.inputClass = '';\n      this.mode = 'inline';\n      this.isInEditing = false;\n      this.edited = new EventEmitter();\n    }\n\n    onEdited(event) {\n      if (this.isNew) {\n        this.grid.create(this.grid.getNewRow(), this.createConfirm);\n      } else {\n        this.grid.save(this.row, this.editConfirm);\n      }\n    }\n\n  }\n\n  CellComponent.ɵfac = function CellComponent_Factory(t) {\n    return new (t || CellComponent)();\n  };\n\n  CellComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: CellComponent,\n    selectors: [[\"angular2-smart-table-cell\"]],\n    inputs: {\n      grid: \"grid\",\n      row: \"row\",\n      editConfirm: \"editConfirm\",\n      createConfirm: \"createConfirm\",\n      isNew: \"isNew\",\n      cell: \"cell\",\n      inputClass: \"inputClass\",\n      mode: \"mode\",\n      isInEditing: \"isInEditing\"\n    },\n    outputs: {\n      edited: \"edited\"\n    },\n    decls: 2,\n    vars: 2,\n    consts: [[3, \"cell\", 4, \"ngIf\"], [3, \"cell\", \"inputClass\", \"edited\", 4, \"ngIf\"], [3, \"cell\"], [3, \"cell\", \"inputClass\", \"edited\"]],\n    template: function CellComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, CellComponent_table_cell_view_mode_0_Template, 1, 1, \"table-cell-view-mode\", 0);\n        i0.ɵɵtemplate(1, CellComponent_table_cell_edit_mode_1_Template, 1, 2, \"table-cell-edit-mode\", 1);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.isInEditing);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isInEditing);\n      }\n    },\n    directives: [ViewCellComponent, EditCellComponent, i2.NgIf],\n    encapsulation: 2\n  });\n  return CellComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet TheadFormRowComponent = /*#__PURE__*/(() => {\n  class TheadFormRowComponent {\n    constructor() {\n      this.create = new EventEmitter();\n    }\n\n    onCreate(event) {\n      event.stopPropagation();\n      this.grid.create(this.grid.getNewRow(), this.createConfirm);\n    }\n\n    ngOnChanges() {\n      this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n      this.showActionColumnLeft = this.grid.showActionColumn('left');\n      this.showActionColumnRight = this.grid.showActionColumn('right');\n      this.addInputClass = this.grid.getSetting('add.inputClass');\n    }\n\n    getVisibleCells(cells) {\n      return (cells || []).filter(cell => !cell.getColumn().hide);\n    }\n\n  }\n\n  TheadFormRowComponent.ɵfac = function TheadFormRowComponent_Factory(t) {\n    return new (t || TheadFormRowComponent)();\n  };\n\n  TheadFormRowComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TheadFormRowComponent,\n    selectors: [[\"\", \"angular2-st-thead-form-row\", \"\"]],\n    inputs: {\n      grid: \"grid\",\n      row: \"row\",\n      createConfirm: \"createConfirm\"\n    },\n    outputs: {\n      create: \"create\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    attrs: _c9,\n    decls: 4,\n    vars: 3,\n    consts: [[4, \"ngIf\"], [\"class\", \"angular2-smart-actions\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"angular2-smart-actions\"], [3, \"grid\", \"create\"], [3, \"cell\", \"grid\", \"isNew\", \"createConfirm\", \"inputClass\", \"isInEditing\", \"edited\"]],\n    template: function TheadFormRowComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, TheadFormRowComponent_td_0_Template, 1, 0, \"td\", 0);\n        i0.ɵɵtemplate(1, TheadFormRowComponent_td_1_Template, 2, 1, \"td\", 1);\n        i0.ɵɵtemplate(2, TheadFormRowComponent_td_2_Template, 2, 6, \"td\", 2);\n        i0.ɵɵtemplate(3, TheadFormRowComponent_td_3_Template, 2, 1, \"td\", 1);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnLeft);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.getVisibleCells(ctx.grid.getNewRow().getCells()));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showActionColumnRight);\n      }\n    },\n    directives: [ActionsComponent, CellComponent, i2.NgIf, i2.NgForOf],\n    encapsulation: 2\n  });\n  return TheadFormRowComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NgxSmartTableTheadComponent = /*#__PURE__*/(() => {\n  class NgxSmartTableTheadComponent {\n    constructor(tableService) {\n      this.tableService = tableService;\n      this.sort = new EventEmitter();\n      this.hide = new EventEmitter();\n      this.selectAllRows = new EventEmitter();\n      this.create = new EventEmitter();\n      this.filter = new EventEmitter();\n    }\n\n    ngOnChanges() {\n      this.isHideHeader = this.grid.getSetting('hideHeader');\n      this.isHideSubHeader = this.grid.getSetting('hideSubHeader');\n    }\n\n    mouseMove(event) {\n      this.tableService.mouseMoveEvent$.next(event);\n    }\n\n  }\n\n  NgxSmartTableTheadComponent.ɵfac = function NgxSmartTableTheadComponent_Factory(t) {\n    return new (t || NgxSmartTableTheadComponent)(i0.ɵɵdirectiveInject(TableService));\n  };\n\n  NgxSmartTableTheadComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NgxSmartTableTheadComponent,\n    selectors: [[\"\", \"angular2-st-thead\", \"\"]],\n    hostBindings: function NgxSmartTableTheadComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"mousemove\", function NgxSmartTableTheadComponent_mousemove_HostBindingHandler($event) {\n          return ctx.mouseMove($event);\n        });\n      }\n    },\n    inputs: {\n      grid: \"grid\",\n      source: \"source\",\n      isAllSelected: \"isAllSelected\",\n      createConfirm: \"createConfirm\"\n    },\n    outputs: {\n      sort: \"sort\",\n      hide: \"hide\",\n      selectAllRows: \"selectAllRows\",\n      create: \"create\",\n      filter: \"filter\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    attrs: _c10,\n    decls: 3,\n    vars: 3,\n    consts: [[\"angular2-st-thead-titles-row\", \"\", \"class\", \"angular2-smart-titles\", 3, \"grid\", \"isAllSelected\", \"source\", \"sort\", \"hide\", \"selectAllRows\", 4, \"ngIf\"], [\"angular2-st-thead-filters-row\", \"\", \"class\", \"angular2-smart-filters\", 3, \"grid\", \"source\", \"create\", \"filter\", 4, \"ngIf\"], [\"angular2-st-thead-form-row\", \"\", 3, \"grid\", \"createConfirm\", 4, \"ngIf\"], [\"angular2-st-thead-titles-row\", \"\", 1, \"angular2-smart-titles\", 3, \"grid\", \"isAllSelected\", \"source\", \"sort\", \"hide\", \"selectAllRows\"], [\"angular2-st-thead-filters-row\", \"\", 1, \"angular2-smart-filters\", 3, \"grid\", \"source\", \"create\", \"filter\"], [\"angular2-st-thead-form-row\", \"\", 3, \"grid\", \"createConfirm\"]],\n    template: function NgxSmartTableTheadComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, NgxSmartTableTheadComponent_tr_0_Template, 1, 3, \"tr\", 0);\n        i0.ɵɵtemplate(1, NgxSmartTableTheadComponent_tr_1_Template, 1, 2, \"tr\", 1);\n        i0.ɵɵtemplate(2, NgxSmartTableTheadComponent_tr_2_Template, 1, 2, \"tr\", 2);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.isHideHeader);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isHideSubHeader);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.grid.createFormShown);\n      }\n    },\n    directives: [TheadTitlesRowComponent, TheadFitlersRowComponent, TheadFormRowComponent, i2.NgIf],\n    encapsulation: 2\n  });\n  return NgxSmartTableTheadComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet TbodyCustomItemComponent = /*#__PURE__*/(() => {\n  class TbodyCustomItemComponent {\n    constructor(resolver) {\n      this.resolver = resolver;\n    }\n\n    ngOnInit() {\n      if (this.action && !this.customComponent) {\n        this.createCustomComponent();\n        this.patchInstance();\n      }\n    }\n\n    createCustomComponent() {\n      const componentFactory = this.resolver.resolveComponentFactory(this.action.renderComponent);\n      this.customComponent = this.dynamicTarget.createComponent(componentFactory);\n    }\n\n    patchInstance() {\n      Object.assign(this.customComponent.instance, this.getPatch());\n    }\n\n    getPatch() {\n      return {\n        action: this.action,\n        rowData: this.row.getData()\n      };\n    }\n\n  }\n\n  TbodyCustomItemComponent.ɵfac = function TbodyCustomItemComponent_Factory(t) {\n    return new (t || TbodyCustomItemComponent)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver));\n  };\n\n  TbodyCustomItemComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TbodyCustomItemComponent,\n    selectors: [[\"angular2-st-tbody-custom-item\"]],\n    viewQuery: function TbodyCustomItemComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c5, 7, ViewContainerRef);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dynamicTarget = _t.first);\n      }\n    },\n    inputs: {\n      action: \"action\",\n      row: \"row\"\n    },\n    decls: 2,\n    vars: 0,\n    consts: [[\"dynamicTarget\", \"\"]],\n    template: function TbodyCustomItemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, TbodyCustomItemComponent_ng_template_0_Template, 0, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n      }\n    },\n    encapsulation: 2\n  });\n  return TbodyCustomItemComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet TbodyCustomComponent = /*#__PURE__*/(() => {\n  class TbodyCustomComponent {\n    constructor() {\n      this.custom = new EventEmitter();\n    }\n\n    onCustom(action, event) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.custom.emit({\n        action: action.name,\n        data: this.row.getData(),\n        source: this.source\n      });\n    }\n\n  }\n\n  TbodyCustomComponent.ɵfac = function TbodyCustomComponent_Factory(t) {\n    return new (t || TbodyCustomComponent)();\n  };\n\n  TbodyCustomComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TbodyCustomComponent,\n    selectors: [[\"angular2-st-tbody-custom\"]],\n    inputs: {\n      grid: \"grid\",\n      row: \"row\",\n      source: \"source\"\n    },\n    outputs: {\n      custom: \"custom\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngFor\", \"ngForOf\"], [\"href\", \"#\", \"class\", \"angular2-smart-action angular2-smart-action-custom-custom\", 3, \"innerHTML\", \"click\", 4, \"ngIf\"], [\"href\", \"#\", \"class\", \"angular2-smart-action angular2-smart-action-custom-custom\", 3, \"click\", 4, \"ngIf\"], [\"href\", \"#\", 1, \"angular2-smart-action\", \"angular2-smart-action-custom-custom\", 3, \"innerHTML\", \"click\"], [\"href\", \"#\", 1, \"angular2-smart-action\", \"angular2-smart-action-custom-custom\", 3, \"click\"], [1, \"angular2-smart-action\", \"angular2-smart-action-custom-custom\", 3, \"action\", \"row\"]],\n    template: function TbodyCustomComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, TbodyCustomComponent_ng_container_0_Template, 3, 2, \"ng-container\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", ctx.grid.getSetting(\"actions.custom\"));\n      }\n    },\n    directives: [TbodyCustomItemComponent, i2.NgForOf, i2.NgIf],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return TbodyCustomComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet TbodyExpandRowComponent = /*#__PURE__*/(() => {\n  class TbodyExpandRowComponent {\n    constructor() {\n      this.onExpandRow = new EventEmitter();\n    }\n\n    onExpand(event) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.onExpandRow.emit(this.row);\n    }\n\n    ngOnChanges() {\n      this.expandRowButtonContent = this.grid.getSetting('expand.expandRowButtonContent');\n    }\n\n  }\n\n  TbodyExpandRowComponent.ɵfac = function TbodyExpandRowComponent_Factory(t) {\n    return new (t || TbodyExpandRowComponent)();\n  };\n\n  TbodyExpandRowComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TbodyExpandRowComponent,\n    selectors: [[\"angular2-st-tbody-expand\"]],\n    inputs: {\n      grid: \"grid\",\n      row: \"row\"\n    },\n    outputs: {\n      onExpandRow: \"onExpandRow\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 1,\n    vars: 1,\n    consts: [[\"href\", \"#\", 1, \"angular2-smart-action\", \"angular2-smart-action-expand-expand\", 3, \"innerHTML\", \"click\"]],\n    template: function TbodyExpandRowComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"a\", 0);\n        i0.ɵɵlistener(\"click\", function TbodyExpandRowComponent_Template_a_click_0_listener($event) {\n          return ctx.onExpand($event);\n        });\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"innerHTML\", ctx.expandRowButtonContent, i0.ɵɵsanitizeHtml);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return TbodyExpandRowComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet TbodyEditDeleteComponent = /*#__PURE__*/(() => {\n  class TbodyEditDeleteComponent {\n    constructor() {\n      this.edit = new EventEmitter();\n      this.delete = new EventEmitter();\n      this.editRowSelect = new EventEmitter();\n    }\n\n    onEdit(event) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.editRowSelect.emit(this.row);\n\n      if (this.grid.getSetting('mode') === 'external') {\n        this.edit.emit({\n          data: this.row.getData(),\n          source: this.source\n        });\n      } else {\n        this.grid.edit(this.row);\n      }\n    }\n\n    onDelete(event) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      if (this.grid.getSetting('mode') === 'external') {\n        this.delete.emit({\n          data: this.row.getData(),\n          source: this.source\n        });\n      } else {\n        this.grid.delete(this.row, this.deleteConfirm);\n      }\n    }\n\n    ngOnChanges() {\n      this.isActionEdit = this.grid.getSetting('actions.edit');\n      this.isActionDelete = this.grid.getSetting('actions.delete');\n      this.editRowButtonContent = this.grid.getSetting('edit.editButtonContent');\n      this.deleteRowButtonContent = this.grid.getSetting('delete.deleteButtonContent');\n    }\n\n  }\n\n  TbodyEditDeleteComponent.ɵfac = function TbodyEditDeleteComponent_Factory(t) {\n    return new (t || TbodyEditDeleteComponent)();\n  };\n\n  TbodyEditDeleteComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TbodyEditDeleteComponent,\n    selectors: [[\"angular2-st-tbody-edit-delete\"]],\n    inputs: {\n      grid: \"grid\",\n      row: \"row\",\n      source: \"source\",\n      deleteConfirm: \"deleteConfirm\",\n      editConfirm: \"editConfirm\"\n    },\n    outputs: {\n      edit: \"edit\",\n      delete: \"delete\",\n      editRowSelect: \"editRowSelect\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 2,\n    vars: 2,\n    consts: [[\"href\", \"#\", \"class\", \"angular2-smart-action angular2-smart-action-edit-edit\", 3, \"innerHTML\", \"click\", 4, \"ngIf\"], [\"href\", \"#\", \"class\", \"angular2-smart-action angular2-smart-action-delete-delete\", 3, \"innerHTML\", \"click\", 4, \"ngIf\"], [\"href\", \"#\", 1, \"angular2-smart-action\", \"angular2-smart-action-edit-edit\", 3, \"innerHTML\", \"click\"], [\"href\", \"#\", 1, \"angular2-smart-action\", \"angular2-smart-action-delete-delete\", 3, \"innerHTML\", \"click\"]],\n    template: function TbodyEditDeleteComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, TbodyEditDeleteComponent_a_0_Template, 1, 1, \"a\", 0);\n        i0.ɵɵtemplate(1, TbodyEditDeleteComponent_a_1_Template, 1, 1, \"a\", 1);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.isActionEdit);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isActionDelete);\n      }\n    },\n    directives: [i2.NgIf],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return TbodyEditDeleteComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet TbodyCreateCancelComponent = /*#__PURE__*/(() => {\n  class TbodyCreateCancelComponent {\n    onSave(event) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.grid.save(this.row, this.editConfirm);\n    }\n\n    onCancelEdit(event) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.row.isInEditing = false;\n    }\n\n    ngOnChanges() {\n      this.saveButtonContent = this.grid.getSetting('edit.saveButtonContent');\n      this.cancelButtonContent = this.grid.getSetting('edit.cancelButtonContent');\n    }\n\n  }\n\n  TbodyCreateCancelComponent.ɵfac = function TbodyCreateCancelComponent_Factory(t) {\n    return new (t || TbodyCreateCancelComponent)();\n  };\n\n  TbodyCreateCancelComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TbodyCreateCancelComponent,\n    selectors: [[\"angular2-st-tbody-create-cancel\"]],\n    inputs: {\n      grid: \"grid\",\n      row: \"row\",\n      editConfirm: \"editConfirm\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 2,\n    vars: 2,\n    consts: [[\"href\", \"#\", 1, \"angular2-smart-action\", \"angular2-smart-action-edit-save\", 3, \"innerHTML\", \"click\"], [\"href\", \"#\", 1, \"angular2-smart-action\", \"angular2-smart-action-edit-cancel\", 3, \"innerHTML\", \"click\"]],\n    template: function TbodyCreateCancelComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"a\", 0);\n        i0.ɵɵlistener(\"click\", function TbodyCreateCancelComponent_Template_a_click_0_listener($event) {\n          return ctx.onSave($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(1, \"a\", 1);\n        i0.ɵɵlistener(\"click\", function TbodyCreateCancelComponent_Template_a_click_1_listener($event) {\n          return ctx.onCancelEdit($event);\n        });\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"innerHTML\", ctx.saveButtonContent, i0.ɵɵsanitizeHtml);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"innerHTML\", ctx.cancelButtonContent, i0.ɵɵsanitizeHtml);\n      }\n    },\n    encapsulation: 2\n  });\n  return TbodyCreateCancelComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NgxSmartTableTbodyComponent = /*#__PURE__*/(() => {\n  class NgxSmartTableTbodyComponent {\n    constructor(resolver, vcRef) {\n      this.resolver = resolver;\n      this.vcRef = vcRef;\n      this.save = new EventEmitter();\n      this.cancel = new EventEmitter();\n      this.edit = new EventEmitter();\n      this.delete = new EventEmitter();\n      this.custom = new EventEmitter();\n      this.edited = new EventEmitter();\n      this.userSelectRow = new EventEmitter();\n      this.editRowSelect = new EventEmitter();\n      this.multipleSelectRow = new EventEmitter();\n      this.rowHover = new EventEmitter();\n      this.onExpandRow = new EventEmitter();\n      this.hasChildComponent = false;\n    }\n\n    ngAfterViewInit() {\n      let cmp = this.grid.settings.expandedRowComponent;\n\n      if (cmp && !this.customComponent) {\n        this.expandedRowChild.forEach(c => c.clear());\n        this.hasChildComponent = true;\n        this.createCustomComponent();\n      }\n    }\n\n    ngOnDestroy() {\n      if (this.customComponent) this.customComponent.destroy();\n    }\n\n    clear() {\n      this.vcRef.clear();\n    }\n\n    createCustomComponent() {\n      let cmp = this.grid.settings.expandedRowComponent;\n\n      if (cmp) {\n        const componentFactory = this.resolver.resolveComponentFactory(cmp);\n        this.expandedRowChild.changes.pipe(delay(0)).subscribe(item => {\n          if (item.length) {\n            this.customComponent = item.first.createComponent(componentFactory);\n            Object.assign(this.customComponent.instance, this.grid.dataSet.expandRow, {\n              rowData: this.grid.dataSet.getExpandedRow().getData()\n            });\n          }\n        });\n      }\n    }\n\n    get tableColumnsCount() {\n      const actionColumns = this.isActionAdd || this.isActionEdit || this.isActionDelete ? 1 : 0;\n      return this.grid.getColumns().length + actionColumns;\n    }\n\n    ngOnChanges() {\n      this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\n      this.showActionColumnLeft = this.grid.showActionColumn('left');\n      this.mode = this.grid.getSetting('mode');\n      this.editInputClass = this.grid.getSetting('edit.inputClass');\n      this.showActionColumnRight = this.grid.showActionColumn('right');\n      this.isActionAdd = this.grid.getSetting('actions.add');\n      this.isActionEdit = this.grid.getSetting('actions.edit');\n      this.isActionDelete = this.grid.getSetting('actions.delete');\n      this.noDataMessage = this.grid.getSetting('noDataMessage');\n    }\n\n    getVisibleCells(cells) {\n      return (cells || []).filter(cell => !cell.getColumn().hide);\n    }\n\n    onExpandRowClick(row) {\n      this.onExpandRow.emit(row);\n    }\n\n  }\n\n  NgxSmartTableTbodyComponent.ɵfac = function NgxSmartTableTbodyComponent_Factory(t) {\n    return new (t || NgxSmartTableTbodyComponent)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver), i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n  };\n\n  NgxSmartTableTbodyComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NgxSmartTableTbodyComponent,\n    selectors: [[\"\", \"angular2-st-tbody\", \"\"]],\n    viewQuery: function NgxSmartTableTbodyComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c11, 5, ViewContainerRef);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.expandedRowChild = _t);\n      }\n    },\n    inputs: {\n      grid: \"grid\",\n      source: \"source\",\n      deleteConfirm: \"deleteConfirm\",\n      editConfirm: \"editConfirm\",\n      rowClassFunction: \"rowClassFunction\"\n    },\n    outputs: {\n      save: \"save\",\n      cancel: \"cancel\",\n      edit: \"edit\",\n      delete: \"delete\",\n      custom: \"custom\",\n      edited: \"edited\",\n      userSelectRow: \"userSelectRow\",\n      editRowSelect: \"editRowSelect\",\n      multipleSelectRow: \"multipleSelectRow\",\n      rowHover: \"rowHover\",\n      onExpandRow: \"onExpandRow\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    attrs: _c12,\n    decls: 2,\n    vars: 2,\n    consts: [[4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"angular2-smart-row\", 3, \"className\", \"ngClass\", \"click\", \"mouseover\"], [\"class\", \"angular2-smart-actions angular2-smart-action-multiple-select\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"angular2-smart-actions\", 4, \"ngIf\"], [\"class\", \"angular2-smart-row angular2-smart-row-detail\", 4, \"ngIf\"], [1, \"angular2-smart-actions\", \"angular2-smart-action-multiple-select\", 3, \"click\"], [\"type\", \"checkbox\", 1, \"form-check-input\", 3, \"ngModel\"], [1, \"angular2-smart-actions\"], [3, \"grid\", \"row\", \"source\", \"custom\"], [3, \"grid\", \"row\", \"onExpandRow\", 4, \"ngIf\"], [3, \"grid\", \"deleteConfirm\", \"editConfirm\", \"row\", \"source\", \"edit\", \"delete\", \"editRowSelect\"], [3, \"grid\", \"row\", \"onExpandRow\"], [3, \"grid\", \"row\", \"editConfirm\"], [3, \"cell\", \"grid\", \"row\", \"isNew\", \"mode\", \"editConfirm\", \"inputClass\", \"isInEditing\"], [1, \"angular2-smart-row\", \"angular2-smart-row-detail\"], [1, \"angular2-smart-column-expandedDetail\"], [\"expandedRowChild\", \"\"]],\n    template: function NgxSmartTableTbodyComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, NgxSmartTableTbodyComponent_ng_container_0_Template, 9, 11, \"ng-container\", 0);\n        i0.ɵɵtemplate(1, NgxSmartTableTbodyComponent_tr_1_Template, 3, 2, \"tr\", 1);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", ctx.grid.getRows());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.grid.getRows().length == 0);\n      }\n    },\n    directives: [TbodyCustomComponent, TbodyExpandRowComponent, TbodyEditDeleteComponent, TbodyCreateCancelComponent, CellComponent, i2.NgForOf, i2.NgClass, i2.NgIf, i1.CheckboxControlValueAccessor, i1.NgControlStatus, i1.NgModel],\n    styles: [\"[_nghost-%COMP%]   .angular2-smart-row.selected[_ngcontent-%COMP%]{background:rgba(0,0,0,.05)}[_nghost-%COMP%]   .angular2-smart-row[_ngcontent-%COMP%]   .angular2-smart-actions.angular2-smart-action-multiple-select[_ngcontent-%COMP%]{text-align:center}[_nghost-%COMP%]     angular2-st-tbody-edit-delete a:first-child, [_nghost-%COMP%]     angular2-st-tbody-create-cancel a:first-child, [_nghost-%COMP%]     angular2-smart-action-expand-expand a:first-child{margin-right:.25rem}\"]\n  });\n  return NgxSmartTableTbodyComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet PagerComponent = /*#__PURE__*/(() => {\n  class PagerComponent {\n    constructor() {\n      this.perPageSelect = [];\n      this.changePage = new EventEmitter();\n      this.count = 0;\n    }\n\n    ngOnChanges(changes) {\n      if (changes.source) {\n        if (!changes.source.firstChange) {\n          this.dataChangedSub.unsubscribe();\n        }\n\n        this.dataChangedSub = this.source.onChanged().subscribe(dataChanges => {\n          this.page = this.source.getPaging().page;\n          this.perPage = this.source.getPaging().perPage;\n          this.currentPerPage = this.perPage;\n          this.count = this.source.count();\n\n          if (this.isPageOutOfBounce()) {\n            this.source.setPage(--this.page);\n          }\n\n          this.processPageChange(dataChanges);\n          this.initPages();\n        });\n      }\n    }\n    /**\n     * We change the page here depending on the action performed against data source\n     * if a new element was added to the end of the table - then change the page to the last\n     * if a new element was added to the beginning of the table - then to the first page\n     * @param changes\n     */\n\n\n    processPageChange(changes) {\n      if (changes['action'] === 'prepend') {\n        this.source.setPage(1);\n      }\n\n      if (changes['action'] === 'append') {\n        this.source.setPage(this.getLast());\n      }\n    }\n\n    shouldShow() {\n      return this.source.count() > this.perPage;\n    }\n\n    paginate(page) {\n      this.source.setPage(page);\n      this.page = page;\n      this.changePage.emit({\n        page\n      });\n      return false;\n    }\n\n    next() {\n      return this.paginate(this.getPage() + 1);\n    }\n\n    prev() {\n      return this.paginate(this.getPage() - 1);\n    }\n\n    getPage() {\n      return this.page;\n    }\n\n    getPages() {\n      return this.pages;\n    }\n\n    getLast() {\n      return Math.ceil(this.count / this.perPage);\n    }\n\n    isPageOutOfBounce() {\n      return this.page * this.perPage >= this.count + this.perPage && this.page > 1;\n    }\n\n    initPages() {\n      const pagesCount = this.getLast();\n      let showPagesCount = 4;\n      showPagesCount = pagesCount < showPagesCount ? pagesCount : showPagesCount;\n      this.pages = [];\n\n      if (this.shouldShow()) {\n        let middleOne = Math.ceil(showPagesCount / 2);\n        middleOne = this.page >= middleOne ? this.page : middleOne;\n        let lastOne = middleOne + Math.floor(showPagesCount / 2);\n        lastOne = lastOne >= pagesCount ? pagesCount : lastOne;\n        const firstOne = lastOne - showPagesCount + 1;\n\n        for (let i = firstOne; i <= lastOne; i++) {\n          this.pages.push(i);\n        }\n      }\n    }\n\n    onChangePerPage(event) {\n      if (this.currentPerPage) {\n        if (typeof this.currentPerPage === 'string' && this.currentPerPage.toLowerCase() === 'all') {\n          this.source.getPaging().perPage = null;\n        } else {\n          this.source.getPaging().perPage = this.currentPerPage * 1;\n          this.source.refresh();\n        }\n\n        this.initPages();\n      }\n    }\n\n  }\n\n  PagerComponent.ɵfac = function PagerComponent_Factory(t) {\n    return new (t || PagerComponent)();\n  };\n\n  PagerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: PagerComponent,\n    selectors: [[\"angular2-smart-table-pager\"]],\n    inputs: {\n      source: \"source\",\n      perPageSelect: \"perPageSelect\"\n    },\n    outputs: {\n      changePage: \"changePage\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 2,\n    vars: 2,\n    consts: [[\"class\", \"angular2-smart-pagination-nav\", 4, \"ngIf\"], [\"class\", \"angular2-smart-pagination-per-page\", 4, \"ngIf\"], [1, \"angular2-smart-pagination-nav\"], [1, \"angular2-smart-pagination\", \"pagination\"], [1, \"angular2-smart-page-item\", \"page-item\", 3, \"ngClass\"], [\"href\", \"#\", \"aria-label\", \"First\", 1, \"angular2-smart-page-link\", \"page-link\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"sr-only\"], [\"href\", \"#\", \"aria-label\", \"Prev\", 1, \"angular2-smart-page-link\", \"page-link\", \"page-link-prev\", 3, \"click\"], [\"class\", \"angular2-smart-page-item page-item\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [\"href\", \"#\", \"aria-label\", \"Next\", 1, \"angular2-smart-page-link\", \"page-link\", \"page-link-next\", 3, \"click\"], [\"href\", \"#\", \"aria-label\", \"Last\", 1, \"angular2-smart-page-link\", \"page-link\", 3, \"click\"], [\"class\", \"angular2-smart-page-link page-link\", 4, \"ngIf\"], [\"class\", \"angular2-smart-page-link page-link\", \"href\", \"#\", 3, \"click\", 4, \"ngIf\"], [1, \"angular2-smart-page-link\", \"page-link\"], [\"href\", \"#\", 1, \"angular2-smart-page-link\", \"page-link\", 3, \"click\"], [1, \"angular2-smart-pagination-per-page\"], [\"for\", \"per-page\"], [\"id\", \"per-page\", 3, \"ngModel\", \"change\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n    template: function PagerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, PagerComponent_nav_0_Template, 27, 13, \"nav\", 0);\n        i0.ɵɵtemplate(1, PagerComponent_nav_1_Template, 5, 2, \"nav\", 1);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.shouldShow());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.perPageSelect && ctx.perPageSelect.length > 0);\n      }\n    },\n    directives: [i2.NgIf, i2.NgClass, i2.NgForOf, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgModel, i1.NgSelectOption, i1.ɵNgSelectMultipleOption],\n    styles: [\".angular2-smart-pagination[_ngcontent-%COMP%]{display:inline-flex;font-size:.875em;padding:0}.angular2-smart-pagination[_ngcontent-%COMP%]   .sr-only[_ngcontent-%COMP%]{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}.angular2-smart-pagination[_ngcontent-%COMP%]   .angular2-smart-page-item[_ngcontent-%COMP%]{display:inline}.angular2-smart-pagination[_ngcontent-%COMP%]   .page-link-next[_ngcontent-%COMP%], .angular2-smart-pagination[_ngcontent-%COMP%]   .page-link-prev[_ngcontent-%COMP%]{font-size:10px}[_nghost-%COMP%]{display:flex;justify-content:space-between}[_nghost-%COMP%]   select[_ngcontent-%COMP%]{margin:1rem 0 1rem 1rem}[_nghost-%COMP%]   label[_ngcontent-%COMP%]{margin:1rem 0 1rem 1rem;line-height:2.5rem}\"]\n  });\n  return PagerComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet Angular2SmartTableComponent = /*#__PURE__*/(() => {\n  class Angular2SmartTableComponent {\n    constructor() {\n      this.settings = {};\n      this.rowSelect = new EventEmitter();\n      this.rowDeselect = new EventEmitter();\n      this.userRowSelect = new EventEmitter();\n      this.delete = new EventEmitter();\n      this.edit = new EventEmitter();\n      this.create = new EventEmitter();\n      this.custom = new EventEmitter();\n      this.deleteConfirm = new EventEmitter();\n      this.editConfirm = new EventEmitter();\n      this.createConfirm = new EventEmitter();\n      this.rowHover = new EventEmitter();\n      this.afterGridInit = new EventEmitter();\n      this.defaultSettings = {\n        mode: 'inline',\n        selectMode: SelectModeOptions.Single,\n\n        /**\n         * Points to an element in all data\n         *\n         * when < 0 all lines must be deselected\n         */\n        selectedRowIndex: 0,\n        switchPageToSelectedRowPage: false,\n        hideHeader: false,\n        hideSubHeader: false,\n        resizable: false,\n        hideable: false,\n        actions: {\n          columnTitle: 'Actions',\n          add: true,\n          edit: true,\n          delete: true,\n          custom: [],\n          position: 'left' // left|right\n\n        },\n        filter: {\n          inputClass: ''\n        },\n        edit: {\n          inputClass: '',\n          editButtonContent: 'Edit',\n          saveButtonContent: 'Update',\n          cancelButtonContent: 'Cancel',\n          confirmSave: false\n        },\n        add: {\n          inputClass: '',\n          addButtonContent: 'Add New',\n          createButtonContent: 'Create',\n          cancelButtonContent: 'Cancel',\n          confirmCreate: false\n        },\n        delete: {\n          deleteButtonContent: 'Delete',\n          confirmDelete: false\n        },\n        expand: {\n          expandRowButtonContent: 'Expand'\n        },\n        attr: {\n          id: '',\n          class: ''\n        },\n        noDataMessage: 'No data found',\n        columns: {},\n        pager: {\n          display: true,\n          page: 1,\n          perPage: 10\n        },\n        rowClassFunction: () => ''\n      };\n      this.isAllSelected = false;\n      this.destroyed$ = new Subject();\n    }\n\n    ngOnChanges(changes) {\n      if (this.grid) {\n        if (changes['settings']) {\n          this.grid.setSettings(this.prepareSettings());\n        }\n\n        if (changes['source']) {\n          this.source = this.prepareSource();\n          this.grid.setSource(this.source);\n        }\n      } else {\n        this.initGrid();\n      }\n\n      this.tableId = this.grid.getSetting('attr.id');\n      this.tableClass = this.grid.getSetting('attr.class');\n      this.isHideHeader = this.grid.getSetting('hideHeader');\n      this.isHideSubHeader = this.grid.getSetting('hideSubHeader');\n      this.isPagerDisplay = this.grid.getSetting('pager.display');\n      this.isPagerDisplay = this.grid.getSetting('pager.display');\n      this.perPageSelect = this.grid.getSetting('pager.perPageSelect');\n      this.rowClassFunction = this.grid.getSetting('rowClassFunction');\n    }\n\n    ngOnDestroy() {\n      this.destroyed$.next();\n    }\n\n    selectRow(index, switchPageToSelectedRowPage = this.grid.getSetting('switchPageToSelectedRowPage')) {\n      if (!this.grid) {\n        return;\n      }\n\n      this.grid.settings.selectedRowIndex = index;\n\n      if (this.isIndexOutOfRange(index)) {\n        // we need to deselect all rows if we got an incorrect index\n        this.deselectAllRows();\n        return;\n      }\n\n      if (switchPageToSelectedRowPage) {\n        const source = this.source;\n        const paging = source.getPaging();\n        const page = getPageForRowIndex(index, paging.perPage);\n        index = index % paging.perPage;\n        this.grid.settings.selectedRowIndex = index;\n\n        if (page !== paging.page) {\n          source.setPage(page);\n          return;\n        }\n      }\n\n      const row = this.grid.getRows()[index];\n\n      if (row) {\n        this.onSelectRow(row);\n      } else {\n        // we need to deselect all rows if we got an incorrect index\n        this.deselectAllRows();\n      }\n    }\n\n    deselectAllRows() {\n      this.grid.dataSet.deselectAll();\n      this.emitDeselectRow(null);\n    }\n\n    editRowSelect(row) {\n      if (this.grid.getSetting('selectMode') === 'multi') {\n        this.onMultipleSelectRow(row);\n      } else {\n        this.onSelectRow(row);\n      }\n    }\n\n    onUserSelectRow(row) {\n      if (this.grid.getSetting('selectMode') !== 'multi') {\n        this.grid.selectRow(row);\n        this.emitUserSelectRow(row);\n        this.emitSelectRow(row);\n      }\n    }\n\n    onRowHover(row) {\n      this.rowHover.emit(row);\n    }\n\n    multipleSelectRow(row) {\n      this.grid.multipleSelectRow(row);\n      this.emitUserSelectRow(row);\n      this.emitSelectRow(row);\n    }\n\n    onSelectAllRows($event) {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.isAllSelected = !this.isAllSelected;\n        yield this.grid.selectAllRows(this.isAllSelected);\n        this.emitUserSelectRow(null);\n        this.emitSelectRow(null);\n      });\n    }\n\n    onSelectRow(row) {\n      this.grid.selectRow(row);\n      this.emitSelectRow(row);\n    }\n\n    onExpandRow(row) {\n      this.grid.expandRow(row);\n    }\n\n    onMultipleSelectRow(row) {\n      this.emitSelectRow(row);\n    }\n\n    initGrid() {\n      this.source = this.prepareSource();\n      this.grid = new Grid(this.source, this.prepareSettings());\n      this.subscribeToOnSelectRow();\n      this.subscribeToOnDeselectRow();\n      /** Delay a bit the grid init event trigger to prevent empty rows */\n\n      setTimeout(() => {\n        this.afterGridInit.emit(this.grid.dataSet);\n      }, 10);\n    }\n\n    prepareSource() {\n      if (this.source instanceof DataSource) {\n        return this.source;\n      } else if (this.source instanceof Array) {\n        return new LocalDataSource(this.source);\n      }\n\n      return new LocalDataSource();\n    }\n\n    prepareSettings() {\n      return deepExtend({}, this.defaultSettings, this.settings);\n    }\n\n    changePage($event) {\n      this.resetAllSelector();\n    }\n\n    sort($event) {\n      this.resetAllSelector();\n    }\n\n    filter($event) {\n      this.resetAllSelector();\n    }\n\n    getNotVisibleColumns() {\n      var _a, _b;\n\n      return ((_b = (_a = this.grid) === null || _a === void 0 ? void 0 : _a.getColumns()) !== null && _b !== void 0 ? _b : []).filter(column => column.hide);\n    }\n\n    toggleColumnVisibility(columnId) {\n      this.settings.columns[columnId].hide = false; //this.grid.setSettings(this.settings);\n\n      this.grid.setSettings(this.prepareSettings());\n    }\n\n    onHideHeader(columnId) {\n      this.settings.columns[columnId].hide = true;\n      this.grid.setSettings(this.prepareSettings());\n    }\n\n    resetAllSelector() {// this.isAllSelected = false;\n    }\n\n    emitUserSelectRow(row) {\n      const selectedRows = this.grid.getSelectedRows();\n      const selectedItems = this.grid.getSelectedItems();\n      this.userRowSelect.emit({\n        data: row ? row.getData() : null,\n        isSelected: row ? row.getIsSelected() : null,\n        source: this.source,\n        selected: selectedRows && selectedRows.length ? selectedRows.map(r => r.getData()) : [],\n        selectedItems\n      });\n    }\n\n    emitSelectRow(row) {\n      const data = {\n        data: row ? row.getData() : null,\n        isSelected: row ? row.getIsSelected() : null,\n        isExpanded: row ? row.getIsExpanded() : null,\n        source: this.source\n      };\n      this.rowSelect.emit(data);\n\n      if (!(row === null || row === void 0 ? void 0 : row.isSelected)) {\n        this.rowDeselect.emit(data);\n      }\n\n      if (!(row === null || row === void 0 ? void 0 : row.isExpanded)) {\n        this.rowDeselect.emit(data);\n      }\n    }\n\n    emitDeselectRow(row) {\n      if (row) this.rowDeselect.emit({\n        data: row ? row.getData() : null,\n        isSelected: row ? row.getIsSelected() : null,\n        source: this.source\n      });\n    }\n\n    isIndexOutOfRange(index) {\n      var _a;\n\n      const dataAmount = (_a = this.source) === null || _a === void 0 ? void 0 : _a.count();\n      return index < 0 || typeof dataAmount === 'number' && index >= dataAmount;\n    }\n\n    subscribeToOnSelectRow() {\n      if (this.onSelectRowSubscription) {\n        this.onSelectRowSubscription.unsubscribe();\n      }\n\n      this.onSelectRowSubscription = this.grid.onSelectRow().pipe(takeUntil(this.destroyed$)).subscribe(row => {\n        this.emitSelectRow(row);\n      });\n    }\n\n    subscribeToOnDeselectRow() {\n      if (this.onDeselectRowSubscription) {\n        this.onDeselectRowSubscription.unsubscribe();\n      }\n\n      this.onDeselectRowSubscription = this.grid.onDeselectRow().pipe(takeUntil(this.destroyed$)).subscribe(row => {\n        this.emitDeselectRow(row);\n      });\n    }\n\n  }\n\n  Angular2SmartTableComponent.ɵfac = function Angular2SmartTableComponent_Factory(t) {\n    return new (t || Angular2SmartTableComponent)();\n  };\n\n  Angular2SmartTableComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: Angular2SmartTableComponent,\n    selectors: [[\"angular2-smart-table\"]],\n    inputs: {\n      source: \"source\",\n      settings: \"settings\"\n    },\n    outputs: {\n      rowSelect: \"rowSelect\",\n      rowDeselect: \"rowDeselect\",\n      userRowSelect: \"userRowSelect\",\n      delete: \"delete\",\n      edit: \"edit\",\n      create: \"create\",\n      custom: \"custom\",\n      deleteConfirm: \"deleteConfirm\",\n      editConfirm: \"editConfirm\",\n      createConfirm: \"createConfirm\",\n      rowHover: \"rowHover\",\n      afterGridInit: \"afterGridInit\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 6,\n    vars: 10,\n    consts: [[3, \"tags\", \"close\"], [2, \"overflow-x\", \"auto\", \"-webkit-overflow-scrolling\", \"touch\"], [3, \"id\", \"ngClass\"], [\"angular2-st-thead\", \"\", 3, \"grid\", \"isAllSelected\", \"source\", \"createConfirm\", \"create\", \"selectAllRows\", \"sort\", \"hide\", \"filter\", 4, \"ngIf\"], [\"angular2-st-tbody\", \"\", 3, \"grid\", \"source\", \"deleteConfirm\", \"editConfirm\", \"rowClassFunction\", \"edit\", \"delete\", \"custom\", \"userSelectRow\", \"editRowSelect\", \"multipleSelectRow\", \"onExpandRow\", \"rowHover\"], [3, \"source\", \"perPageSelect\", \"changePage\", 4, \"ngIf\"], [\"angular2-st-thead\", \"\", 3, \"grid\", \"isAllSelected\", \"source\", \"createConfirm\", \"create\", \"selectAllRows\", \"sort\", \"hide\", \"filter\"], [3, \"source\", \"perPageSelect\", \"changePage\"]],\n    template: function Angular2SmartTableComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"angular2-smart-table-tags-list\", 0);\n        i0.ɵɵlistener(\"close\", function Angular2SmartTableComponent_Template_angular2_smart_table_tags_list_close_0_listener($event) {\n          return ctx.toggleColumnVisibility($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"table\", 2);\n        i0.ɵɵtemplate(3, Angular2SmartTableComponent_thead_3_Template, 1, 4, \"thead\", 3);\n        i0.ɵɵelementStart(4, \"tbody\", 4);\n        i0.ɵɵlistener(\"edit\", function Angular2SmartTableComponent_Template_tbody_edit_4_listener($event) {\n          return ctx.edit.emit($event);\n        })(\"delete\", function Angular2SmartTableComponent_Template_tbody_delete_4_listener($event) {\n          return ctx.delete.emit($event);\n        })(\"custom\", function Angular2SmartTableComponent_Template_tbody_custom_4_listener($event) {\n          return ctx.custom.emit($event);\n        })(\"userSelectRow\", function Angular2SmartTableComponent_Template_tbody_userSelectRow_4_listener($event) {\n          return ctx.onUserSelectRow($event);\n        })(\"editRowSelect\", function Angular2SmartTableComponent_Template_tbody_editRowSelect_4_listener($event) {\n          return ctx.editRowSelect($event);\n        })(\"multipleSelectRow\", function Angular2SmartTableComponent_Template_tbody_multipleSelectRow_4_listener($event) {\n          return ctx.multipleSelectRow($event);\n        })(\"onExpandRow\", function Angular2SmartTableComponent_Template_tbody_onExpandRow_4_listener($event) {\n          return ctx.onExpandRow($event);\n        })(\"rowHover\", function Angular2SmartTableComponent_Template_tbody_rowHover_4_listener($event) {\n          return ctx.onRowHover($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(5, Angular2SmartTableComponent_angular2_smart_table_pager_5_Template, 1, 2, \"angular2-smart-table-pager\", 5);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"tags\", ctx.getNotVisibleColumns());\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"id\", ctx.tableId)(\"ngClass\", ctx.tableClass);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isHideHeader || !ctx.isHideSubHeader);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"grid\", ctx.grid)(\"source\", ctx.source)(\"deleteConfirm\", ctx.deleteConfirm)(\"editConfirm\", ctx.editConfirm)(\"rowClassFunction\", ctx.rowClassFunction);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isPagerDisplay);\n      }\n    },\n    directives: [TagsListComponent, NgxSmartTableTheadComponent, NgxSmartTableTbodyComponent, PagerComponent, i2.NgClass, i2.NgIf],\n    styles: [\"[_nghost-%COMP%]{font-size:1rem}[_nghost-%COMP%]     *{box-sizing:border-box}[_nghost-%COMP%]     button, [_nghost-%COMP%]     input, [_nghost-%COMP%]     optgroup, [_nghost-%COMP%]     select, [_nghost-%COMP%]     textarea{color:inherit;font:inherit;margin:0}[_nghost-%COMP%]     table{line-height:1.5em;border-collapse:collapse;border-spacing:0;display:table;width:100%;max-width:100%;overflow:auto;word-break:normal;word-break:keep-all}[_nghost-%COMP%]     table tr th{font-weight:700;position:relative}[_nghost-%COMP%]     table tr th .angular2-resizer-block{width:8px;height:100%;position:absolute;right:0;top:0;cursor:col-resize}[_nghost-%COMP%]     table tr section{font-size:.75em;font-weight:700}[_nghost-%COMP%]     table tr td, [_nghost-%COMP%]     table tr th{font-size:.875em;margin:0;padding:.5em 1em}[_nghost-%COMP%]     a{color:#1e6bb8;text-decoration:none}[_nghost-%COMP%]     a:hover{text-decoration:underline}\"]\n  });\n  return Angular2SmartTableComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst CELL_COMPONENTS = [CellComponent, EditCellDefault, DefaultEditor, CustomEditComponent, DefaultEditComponent, EditCellComponent, CheckboxEditorComponent, CompleterEditorComponent, InputEditorComponent, SelectEditorComponent, TextareaEditorComponent, CustomViewComponent, ViewCellComponent];\nlet CellModule = /*#__PURE__*/(() => {\n  class CellModule {}\n\n  CellModule.ɵfac = function CellModule_Factory(t) {\n    return new (t || CellModule)();\n  };\n\n  CellModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: CellModule\n  });\n  CellModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule, Ng2CompleterModule]]\n  });\n  return CellModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst FILTER_COMPONENTS = [FilterDefault, DefaultFilter, FilterComponent, DateFilterComponent, DefaultFilterComponent, CustomFilterComponent, CheckboxFilterComponent, CompleterFilterComponent, InputFilterComponent, SelectFilterComponent, MselectFilterComponent];\nlet FilterModule = /*#__PURE__*/(() => {\n  class FilterModule {}\n\n  FilterModule.ɵfac = function FilterModule_Factory(t) {\n    return new (t || FilterModule)();\n  };\n\n  FilterModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: FilterModule\n  });\n  FilterModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule, ReactiveFormsModule, Ng2CompleterModule, AngularMultiSelectModule]]\n  });\n  return FilterModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet PagerModule = /*#__PURE__*/(() => {\n  class PagerModule {}\n\n  PagerModule.ɵfac = function PagerModule_Factory(t) {\n    return new (t || PagerModule)();\n  };\n\n  PagerModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: PagerModule\n  });\n  PagerModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule]]\n  });\n  return PagerModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet TabsModule = /*#__PURE__*/(() => {\n  class TabsModule {}\n\n  TabsModule.ɵfac = function TabsModule_Factory(t) {\n    return new (t || TabsModule)();\n  };\n\n  TabsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TabsModule\n  });\n  TabsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return TabsModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst TBODY_COMPONENTS = [TbodyCreateCancelComponent, TbodyEditDeleteComponent, TbodyCustomComponent, TbodyExpandRowComponent, TbodyCustomItemComponent, NgxSmartTableTbodyComponent];\nlet TBodyModule = /*#__PURE__*/(() => {\n  class TBodyModule {}\n\n  TBodyModule.ɵfac = function TBodyModule_Factory(t) {\n    return new (t || TBodyModule)();\n  };\n\n  TBodyModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TBodyModule\n  });\n  TBodyModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule, CellModule]]\n  });\n  return TBodyModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst DIRECTIVES = [NgxResizerDirective];\nlet DirectivesModule = /*#__PURE__*/(() => {\n  class DirectivesModule {}\n\n  DirectivesModule.ɵfac = function DirectivesModule_Factory(t) {\n    return new (t || DirectivesModule)();\n  };\n\n  DirectivesModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: DirectivesModule\n  });\n  DirectivesModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return DirectivesModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst THEAD_COMPONENTS = [ActionsComponent, ActionsTitleComponent, AddButtonComponent, CheckboxSelectAllComponent, ColumnTitleComponent, TitleComponent, TheadFitlersRowComponent, TheadFormRowComponent, TheadTitlesRowComponent, NgxSmartTableTheadComponent];\nlet THeadModule = /*#__PURE__*/(() => {\n  class THeadModule {}\n\n  THeadModule.ɵfac = function THeadModule_Factory(t) {\n    return new (t || THeadModule)();\n  };\n\n  THeadModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: THeadModule\n  });\n  THeadModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule, FilterModule, CellModule, DirectivesModule]]\n  });\n  return THeadModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet Angular2SmartTableModule = /*#__PURE__*/(() => {\n  class Angular2SmartTableModule {}\n\n  Angular2SmartTableModule.ɵfac = function Angular2SmartTableModule_Factory(t) {\n    return new (t || Angular2SmartTableModule)();\n  };\n\n  Angular2SmartTableModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: Angular2SmartTableModule\n  });\n  Angular2SmartTableModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule, ReactiveFormsModule, CellModule, FilterModule, PagerModule, TBodyModule, THeadModule, TabsModule]]\n  });\n  return Angular2SmartTableModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ServerSourceConf = /*#__PURE__*/(() => {\n  class ServerSourceConf {\n    constructor({\n      endPoint = '',\n      sortFieldKey = '',\n      sortDirKey = '',\n      pagerPageKey = '',\n      pagerLimitKey = '',\n      filterFieldKey = '',\n      totalKey = '',\n      dataKey = ''\n    } = {}) {\n      this.endPoint = endPoint ? endPoint : '';\n      this.sortFieldKey = sortFieldKey ? sortFieldKey : ServerSourceConf.SORT_FIELD_KEY;\n      this.sortDirKey = sortDirKey ? sortDirKey : ServerSourceConf.SORT_DIR_KEY;\n      this.pagerPageKey = pagerPageKey ? pagerPageKey : ServerSourceConf.PAGER_PAGE_KEY;\n      this.pagerLimitKey = pagerLimitKey ? pagerLimitKey : ServerSourceConf.PAGER_LIMIT_KEY;\n      this.filterFieldKey = filterFieldKey ? filterFieldKey : ServerSourceConf.FILTER_FIELD_KEY;\n      this.totalKey = totalKey ? totalKey : ServerSourceConf.TOTAL_KEY;\n      this.dataKey = dataKey ? dataKey : ServerSourceConf.DATA_KEY;\n    }\n\n  }\n\n  ServerSourceConf.SORT_FIELD_KEY = '_sort';\n  ServerSourceConf.SORT_DIR_KEY = '_order';\n  ServerSourceConf.PAGER_PAGE_KEY = '_page';\n  ServerSourceConf.PAGER_LIMIT_KEY = '_limit';\n  ServerSourceConf.FILTER_FIELD_KEY = '#field#_like';\n  ServerSourceConf.TOTAL_KEY = 'x-total-count';\n  ServerSourceConf.DATA_KEY = '';\n  return ServerSourceConf;\n})();\n\nclass ServerDataSource extends LocalDataSource {\n  constructor(http, conf = {}) {\n    super();\n    this.http = http;\n    this.lastRequestCount = 0;\n    this.conf = new ServerSourceConf(conf);\n\n    if (!this.conf.endPoint) {\n      throw new Error('At least endPoint must be specified as a configuration of the server data source.');\n    }\n  }\n\n  count() {\n    return this.lastRequestCount;\n  }\n\n  getElements() {\n    return this.requestElements().pipe(map(res => {\n      this.lastRequestCount = this.extractTotalFromResponse(res);\n      this.data = this.extractDataFromResponse(res);\n      return this.data;\n    })).toPromise();\n  }\n  /**\n   * Extracts array of data from server response\n   * @param res\n   * @returns {any}\n   */\n\n\n  extractDataFromResponse(res) {\n    const rawData = res.body;\n    const data = !!this.conf.dataKey ? getDeepFromObject(rawData, this.conf.dataKey, []) : rawData;\n\n    if (data instanceof Array) {\n      return data;\n    }\n\n    throw new Error(`Data must be an array.\n    Please check that data extracted from the server response by the key '${this.conf.dataKey}' exists and is array.`);\n  }\n  /**\n   * Extracts total rows count from the server response\n   * Looks for the count in the heders first, then in the response body\n   * @param res\n   * @returns {any}\n   */\n\n\n  extractTotalFromResponse(res) {\n    if (res.headers.has(this.conf.totalKey)) {\n      return +res.headers.get(this.conf.totalKey);\n    } else {\n      const rawData = res.body;\n      return getDeepFromObject(rawData, this.conf.totalKey, 0);\n    }\n  }\n\n  requestElements() {\n    let httpParams = this.createRequesParams();\n    return this.http.get(this.conf.endPoint, {\n      params: httpParams,\n      observe: 'response'\n    });\n  }\n\n  createRequesParams() {\n    let httpParams = new HttpParams();\n    httpParams = this.addSortRequestParams(httpParams);\n    httpParams = this.addFilterRequestParams(httpParams);\n    return this.addPagerRequestParams(httpParams);\n  }\n\n  addSortRequestParams(httpParams) {\n    if (this.sortConf) {\n      this.sortConf.forEach(fieldConf => {\n        httpParams = httpParams.set(this.conf.sortFieldKey, fieldConf.field);\n        httpParams = httpParams.set(this.conf.sortDirKey, fieldConf.direction.toUpperCase());\n      });\n    }\n\n    return httpParams;\n  }\n\n  addFilterRequestParams(httpParams) {\n    if (this.filterConf.filters) {\n      this.filterConf.filters.forEach(fieldConf => {\n        if (fieldConf['search']) {\n          httpParams = httpParams.set(this.conf.filterFieldKey.replace('#field#', fieldConf['field']), fieldConf['search']);\n        }\n      });\n    }\n\n    return httpParams;\n  }\n\n  addPagerRequestParams(httpParams) {\n    if (this.pagingConf && this.pagingConf['page'] && this.pagingConf['perPage']) {\n      httpParams = httpParams.set(this.conf.pagerPageKey, this.pagingConf['page']);\n      httpParams = httpParams.set(this.conf.pagerLimitKey, this.pagingConf['perPage']);\n    }\n\n    return httpParams;\n  }\n\n}\n/*\n * Public API Surface of angular2-smart-table\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { Angular2SmartTableComponent, Angular2SmartTableModule, Cell, DataSet, DefaultEditor, DefaultFilter, IColumnType, LocalDataSource, Row, SelectModeOptions, ServerDataSource }; //# sourceMappingURL=angular2-smart-table.mjs.map","map":null,"metadata":{},"sourceType":"module"}